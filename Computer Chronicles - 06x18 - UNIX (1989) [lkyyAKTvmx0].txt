You
These are the offices of frame technology in San Jose, California.
They have Macintosh computers here, sun workstations, PC compatibles,
but the common thread that ties all their systems together is Unix.
All of a sudden, Unix is hot.
That nasty old operating system that used to be considered too difficult for most people to use
is slowly emerging as an operating system of choice,
as users discover its power and as vendors start to pedal it under a friendlier user interface.
Today, we take a look at the rebirth of Unix on this edition of the Computer Chronicles.
The Computer Chronicles is made possible in part by McGraw Hill, publishers of Byte magazine,
and VIX, the Byte Information Exchange.
In print and online, Byte and VIX serve computer professionals worldwide
with detailed information on new hardware, software, and technologies.
Welcome to the Computer Chronicles.
I'm Stuart Schiffay, and this is Gary Kildall.
Gary, this is Rick Davis of Frame Technology Corporation.
Rick is using what is unquestionably the most talked about new computer of the year,
the next computer from Steve Jobs.
Lots of interesting features we could point out about the next,
but I want to focus on the fact that it runs under Unix.
Unix has been around 18 years or more,
but primarily in the university community, the techie community.
All of a sudden, everyone is interested in Unix.
Why?
Well, Stuart, as you know, the traditional problem with Unix in PCs
is that Unix really requires a lot of computing power,
a lot of central memory, a lot of backup storage,
a high-performance processor, and we just haven't had that in PCs.
Now, we start to see the workstations come into the high-end PC market
and demand for multitasking, multi-user systems.
Unix has written in C, gives us portability, relative portability
across a lot of different platforms, like the Next, the Sun Apollo, and so forth.
And we're also seeing standards evolve, like object file formats,
graphic standards, windowing standards, and so forth.
It makes really Unix very viable in the high-end PC market.
We're going to take a look at the power of Unix
in its traditional workstation environment.
We'll see some of these new graphic user interfaces,
and we'll take a look at the implementation of one version of Unix on the Macintosh.
We begin with a background look at the evolution of Unix,
and for that report, we go to the University of California at Berkeley.
It began its life at Bell Labs in the early 1970s,
won the endorsement of AT&T,
and was adopted by universities around the country,
who appreciated its portability and its multitasking talents.
It is Unix, an operating system with so many variants,
you need a family tree to trace its origins.
One of the earliest centers of Unix development
is the University of California at Berkeley,
responsible for one of the main branches of Unix
called BSD for Berkeley Software Distribution.
Well, Berkeley got a fairly early version of Unix from Bell Labs,
and started writing additional programs for it,
and started adding things.
When a larger version of many computers came out,
Berkeley added a number of new features to the system
that took advantage of the new computer.
And we did software the way people wanted the software here.
As a result, there were a number of other universities
and research labs that were interested in the same thing.
The Unix operating system has special appeal to programmers
because of its many programming tools.
Unix is also multitasking,
so several applications can be running simultaneously.
It is particularly suited to multi-user environments,
and it offers structured programming,
a way to divide problems into smaller parcels.
On the other hand, the consequence of such diverse streams of development
has been a lack of standards.
To combine the best elements of those diverse strands
is the latest challenge facing Unix.
In general, the standards have been picking and choosing
among the different features of different versions.
And as a result, the standard versions will be
not like any existing version,
they'll be someplace in the middle.
For example, a number of programs have options,
and the standards will specify a smaller number of options
than those will all be the same on every version.
Joining us in the studio now is Karen Losarty,
Karen is Product Manager with Sun Microsystems.
Gary?
Karen, Unix has had sort of a bad reputation in the past
for a number of items like reliability
and the lack of a good user interface and so forth.
How has that changed with Unix in the last few years?
Well, Unix has gained a lot of momentum in the last several years,
and there's reasons for that.
As you know, it's a very powerful operating system,
and it supports multitasking
so that you can do more than one function at a time.
It also runs on a variety of hardware platforms,
and many vendors in the industry do support Unix today.
One of the most key things about Unix
is that it supports a lot of hardware
that run over networks, very, very large networks.
What about the reliability issues?
Is that a problem anymore with Unix?
Not that we're finding at this time.
What about the interface issue that Gary mentioned?
Well, yes, that has been an issue.
As you know, in universities today,
a lot of developers learn Unix,
they write C applications and so forth,
and they move out into the industry and write applications.
So there's a lot of support from the developers,
and users find it hostile,
and many of them have been very, very, very afraid of it.
And this is one of the things you addressed with...
Correct.
Karen, before we get into the demo,
could you describe basically what kind of hardware we're dealing with here?
Yes, this is a 386i, Sun 386i,
and it provides you the ability to run both DOS and Unix
on the same screen.
So you could open a window and run a DOS application
and another window run a Unix application.
And what would the approximate cost of a piece of hardware like this cost
that you're running?
Under $5,000.
Okay, let's take a look at what you've got here.
Well, you're looking interface, in fact, tell us about OpenLook.
Okay, OpenLook is a graphical user interface
that was designed by Sun and AT&T in a joint development effort.
We also licensed technology from Xerox Corporation.
What I've done today is brought four applications
that have actually implemented the OpenLook specification.
OpenLook is not a software product.
It actually consists of two books.
It's a style guide for the developer
on how to design an application
and a specification for the toolkit designer.
Okay, show us on the screen actually how you would use it.
These are four applications.
We have here SunWrite, which is what you see is what you get editor.
SunPaint, which is a paint application
or what we call a raster application.
And this one is Sundraw,
which is an object editor or a draw application.
This is a file manager. This is critical.
This one allows you to see graphically
the Unix file system right on the machine.
As you know, most users that worked with Unix
and users today, raw commands,
on a command line to get at their files.
It was all by memory.
This is one of the most integral parts of OpenLook.
Show us how you'd use it now and get into one of these applications.
What we'll do is, first of all,
what I'd like to show you is,
as you see on this area right here is a control area,
and each one of these windows has one.
Notice that on there is buttons.
All these buttons have common labels.
As you can see, each one has file, view, edit.
What's remarkable about that is
each application you go into,
the learning curve goes way down.
So, for example, if I wanted to close this window,
I simply click on the window mark,
and it becomes an icon on the desktop.
Same thing again here,
and you can put them away on your desktop
and rearrange them again any way you wish.
Can you open up the theme box, for example,
and let's take a look at...
This is the kind of interface that most users are familiar with.
There's nothing new here.
Some of the things, though, that are very nice about OpenLook, though,
is I can preview my operations.
For example, on the file, it says open or save.
On view, it can be a canvas.
It brings up the appropriate window.
On edit, you can actually pin up a menu.
You can move that to any location that you wish.
What is beneficial for the user
is that I do not have to go back up to the control area
to access the buttons all the time.
There's also a mouse movement,
which you don't have on other user interfaces.
Once I pull the pin, it goes away.
Same thing for each of the windows here.
Pull the pin, it disappears.
Now, if we wanted to actually use this application,
I can bring this up, select whichever one I want to work with.
I can easily move it out of my way,
because I might want to do some other things,
and draw right into the window.
At any time, I can also change the brush pattern.
Select any one of these.
Again, tell it to go away and change it.
Everything is very intuitive.
Very, very friendly.
One of the most important things, though,
that I found working with the interface,
is that other interfaces don't utilize.
With the file manager,
you can actually use something called drag and drop.
If you wanted to actually load a file into the window,
all you have to do is grab the icon,
position it over the window,
and it actually loads that file into the window automatically.
Now, if the entire file is not showing on the screen,
and we'll just put this one to the back,
I can actually use the scroll bars at any time
to manipulate the window to see the rest of the file.
If I stretch the window with what we call the resize corners,
in any one of the four corners,
then the actual scroll bars, if they're not needed, will go away.
In this case, not all of the file is still on the screen,
so they're resident.
Are there a lot of applications being written out for OpenLook?
Yes. Actually, we have over 1,500 applications
that are being converted to support OpenLook.
What's real exciting is the applications that you see here today
are shipping.
This is not vaporware. They're available.
We also have had early developers kits
that our developers are taking,
actually working and designing applications today.
Just returning very quickly the price.
I'm very amazed at the $5,000 price tag.
We have a vast array of workstations that CEN offers,
and you can start at a very low end and go very, very expensive.
This would not necessarily be the $5,000.
Correct.
Karen, thank you very much for joining us.
We're familiar with Unix, of course,
under many names and under many versions,
and one of the popular versions of Unix is called SCO Xenix,
developed by a company called the Santa Cruz Operation.
Let's take a look at the report from Wendy Woods.
Open Desktop is the latest attempt to sell Unix
to mainstream corporate America.
Open Desktop combines Xenix, Santa Cruz operations,
form of Unix, which runs on PCs,
with other industry standard tools,
and a graphical user interface called Motif.
It's all designed to offer a palatable form of Unix
for general consumption.
These open system offerings have never before been available
in this kind of a platform, this widely available,
pre-integrated, ready to go.
And that's really the value added of Open Desktop.
It's not a new product piece in itself,
but it's the collection and standardization
of all the open system standards that are available today.
With Open Desktop,
Windows display various applications
running either on one's own PC or on a mainframe.
Files are shared seamlessly between hardware platforms.
The power of the 80386 is tapped.
The Open Desktop environment
is expected to be complete by September,
and SEO's track record of success
has attracted some big players to participate in the project,
among them Deck and Tandy.
Santa Cruz operation has doubled its sales
for each of the last 10 years
and has gone from having just a few
to now over 800 employees.
But perhaps the biggest measure of its success
comes from Giant Microsoft Corporation,
which has just purchased nearly 20% of the company.
In Santa Cruz, California,
for the Computer Chronicles, I'm Wendy Woods.
Joining us in the studio now is Janet Dobbs.
It's a product manager with Hewlett-Packard.
Janet, before we get into the motif he has in her face,
Hewlett-Packard, I know it's on the screen here.
Way in the background is a little bit of Unix there.
Looks like a directory.
We all know that Unix is underlying this whole user interface,
which of course is different from Unix.
It's a different piece of software.
Why does Unix provide a good base for your product?
Unix is a powerful operating system
in that it allows for large amounts of memory
and large programs, which are used
in technical environments, factory floors,
large databases.
It's powerful, it's fast, it's unfriendly.
So it's been very successful in more technical environments.
That's why the user interface is in front of it.
Now, could you tell us, like in the last segment,
what are we working with here in terms of hardware?
There's obviously some equipment on the floor here.
This is an HP360.
It has a 68030 Motorola processor in it.
It's running about 33 MHz.
What's the cost of this configuration?
Series 300 workstations range from about 5,000 up to 60,000 to 70,000.
And a configuration like this goes from 10,000 to 15,000.
Tell us about Motif now and the interface.
In particular, how is your approach different
from what we just saw before in OpenLook?
OSF Motif is a combination of technologies from both DEC and HP.
If you notice on the screen, the 3D borders around the windows.
It's an enhanced look of the graphical user interface
common in the PC environment from Microsoft,
both Microsoft Windows and Presentation Manager.
So it takes advantage of the large installed base in the PC market
and all the work that's been done in graphical user interfaces there.
Is that the major difference, the graphic look?
I mean, we see it looks quite different.
Or functionally, is it really the same basic idea?
The behavior is based on that found in the PC market.
So a user that has been familiar with working with PCs
can walk up to a Unix workstation
and not be concerned that it's OS2 or Unix or whatever.
What they see on the screen is what they're used to seeing
and they know how to open applications, move around in them.
Could you do that for us and show us how you can actually use Motif?
For example, if I want to move a window and say I'm a PC user,
I know that I put the mouse pointer on the title bar,
click on that with the left button,
and I can move that window around on the screen.
I know that I can go to the left upper corner,
hold the left mouse button down,
and I get a system menu,
which for each window contains things like restore, move, size.
If I want to iconify a window,
I click in the, there's a minimize and maximize button
that are found in presentation manager.
And on the left side, it's minimize,
and I can click and iconify that window
and it moves into an icon.
I can bring a window to the foreground by clicking in that window.
The light source moves into the border
so I can tell which window or which application is active at that point.
By clicking in the upper right corner,
I can allow an application to maximize or take over the display.
Can you access that sort of raw Unix window there
and actually work inside it and go behind Motif?
I have a terminal window right here
that I click in and make that window active.
And at that point, I can type in any of the commands
in the Unix operating system.
What is the status of Motif for me?
Where is this as a product?
Motif will be available from OSF this summer.
HP and Corvallis Organ is under contract with OSF
to merge the deck and the HP toolkits.
And we'll be turning that over to OSF in July.
You talked about OSF and that's an acronym for Open Systems Foundation.
Open Systems Foundation.
Open Software Foundation.
Can you tell us a little bit about that group?
The group was formed just about a year ago
to ensure that software development environments were open,
available for input from different workstation vendors
to ensure that there were standards that would exist
to help end users and software developers in creating programs.
Especially around Unix and AIX in particular.
And there are other applications you talked about,
primarily Unix of course, being in that technical environment.
Is HP working on new, broader applications
that will run under Unix and take advantage of these?
We're working on applications
and other third-party developers are working on applications.
With a user interface like this,
more users will have access to the power of Unix workstation.
And therefore, I think we'll find workstations in more environments,
such as maybe office environments.
Jenna, thank you very much.
In just a minute, we'll take a look at the new Macintosh 2CX
and see the Macintosh implementation of Unix.
AUX, stay with us.
Music
With us in the studio now is Bill Jacobs.
Bill is product line manager with Apple.
Next to Bill, Carrie Christian,
author and research associate at the Rockefeller University in New York.
Carrie, one of the problems with Unix in the past
has been all these different versions,
homegrown versions and so forth.
And then there becomes problems with things like the libraries
and so forth, being able to pass one program to another Unix system.
Now, is there any standardization that's been taking place now recently?
Well, there's quite a bit of standardization.
In fact, there's really too much of it
because the system is broken into two separate camps.
And we have on one side an alliance between AT&T,
which is the originator of Unix with Sun,
which is one of the major technical innovators in this area.
Which was the open-look version we saw at the beginning of the show.
That's right.
And on the other side, there's a fairly large group of companies
that are not pleased with this.
They're afraid of the power going to these two companies to their detriment.
And they formed another alliance called the Open Software Foundation, OSF.
And in that group, you have IBM plus a number of the other very major players in this business.
And that was the motif we just saw on the HP machine.
That's correct.
What about Next Step on the Next Machine?
That's yet a third version, isn't it?
Well, it uses a product called Mock,
which is a variant of Unix.
It's different enough from Unix that you would probably classify it as
a somewhat different category.
Bill, this is the first machine we've actually seen on the table.
Well, it's a Mac 2X.
We really haven't seen that on the show yet.
So maybe you can just give us a look inside the box there.
The product we have here is the new Macintosh 2CX.
It is fundamentally...
Obviously a lot smaller than the two.
Fundamentally, the same electrical product in terms of capabilities
as the Macintosh 2X accept that.
By reducing the number of slots,
we've greatly reduced the cost and thus the price of the machine.
It is a much more clean internal design,
much more easy to install things like hard disks,
which simply snap in place and the cable connects.
Even the power supply, there's no screws holding it in.
It's held in by plastic snap bosses.
So what we've done is not only reduce the price of the system
through fixing some of the RAM problems that the whole industry suffered under,
but also by building the machine.
More simply, reduce its price.
Does that sacrifice anything in terms of performance?
No.
In terms of performance, it's exactly the same as the Macintosh 2CX.
Too X, you mean. This is the 2CX.
This is the 2CX. I'm sorry.
Same performance as the Macintosh 2X,
which is 10 to 20 percent greater than the Macintosh 2 was.
You're running...
What is AUX, you call it?
Yes, Apple's Unix product is AUX.
So can you give us a demo?
Sure.
What we're going to demo here is something you've seen variants of already today,
so I'll not belabor the point.
This is a particular application called Magic.
It is a higher education product for designing integrated circuits
and represents fundamentally one of the key uses of Unix today,
and that is for technical professionals to do the types of work they're involved in.
This is based on an X11.3 implementation.
You mentioned X Windows is the underlying standard on which OpenLook and Motif both be based.
This is a currently available product.
We just introduced it and started shipping it a couple of weeks ago.
Full X11.3 and runs on multiple screens.
What's the relationship here now?
You're running Unix AUX, but how's the relation between the Mac operating system and Unix?
What's going on inside?
Okay.
To show you that, what I'll just do here is exit the X11 implementation
and go show you the other side of the fence for us here
by exiting or attempting, I guess you have to put the mouse in the box before that works.
The X11 implementation runs on the machine and to exit that
and then begin running Macintosh applications as you see about 10 seconds.
We're now at a Unix terminal shell window,
as most Unix users are fairly comfortable with.
I've loaded up a set of applications here.
The important point about what I'm going to show you is these applications are not Unix applications.
The first one I should probably show is MacDraw 2.
This is a Claris product.
So you got to read the screen there.
Yeah, I'm sorry.
In order to run Claris MacDraw 2 on an AUX system, you simply go down to Egghead Software
and you buy the version of MacDraw 2 that you buy for your Macintosh Plus, your Macintosh ASC.
From that, you move the files for the product off the floppy onto the Unix hard disk
and then run them there.
So here's an example.
While you're doing that, Bill, what's the advantage of doing that running it under Unix
instead of just under the Macintosh?
The crucial advantage is that the end user gets to run both the applications that he knows and loves
from the Unix world and the personal productivity software of the Macintosh.
We studied very carefully the technical user's world and what he does day to day
and he spends about 70 to 80% of his time doing, writing, drawing, presenting.
So even though he's a Unix techie, he has all these other things to do.
So we're now basically in a Macintosh application and have all the user interface of the Macintosh
at our fingertips.
Let's open just a file here.
Okay, and this is under MacDraw.
These are MacDraw 2 files.
This is some art that was created by an artist for some purpose
and illustrates what you can do in MacDraw.
The key point is you can now do it on a Unix system from a $300 application
instead of a $2,000 application.
You only have about a half a minute left, Karen.
I want to ask you to kind of summarize from the user's point of view we've seen
just in this half hour, you know, four different approaches to using Unix.
What's a user to do here in terms of trying to get involved in the benefits of Unix?
Well, there are a couple of things.
One is that most Unix systems are not being used in environments where there are no computers already.
So you have to think about what you have.
If you've got a shop that's been using Apple products,
people are familiar with the Mac.
AUX is a natural.
On the same side, if you've got a company where it's coming in from the technical side,
they may be familiar with many technical drafting applications
like you'd have on a Sun system.
Sun or HP or companies like that are also a natural.
If people have heavy involvement in PCs,
they've been using PC software, things like Xenix and VPIX
are able to run the PC software in the way that AUX can run Mac software.
So I think for most users, you need to go with the alliances that you're already familiar with,
go with some of these vendors.
The other thing is to keep track of the numbers as best you can
because in this war of OSF, AT&T,
it's going to be determined by software vendors
who gets the most applications on their product.
And so if you look at the numbers six months from year and a year from now,
you should be able to tell which of these two products is...
Who's going to enter the race?
Yeah, who's really winning in the marketplace,
and that's going to determine it.
Gentlemen, thank you very much.
That's our look at you.
Next, we'll be back with this week's computer news in just a moment.
In the Random Access file this week, many new product announcements
tied to the just completed Spring Comdex show in Chicago.
Intel stole most of the headlines with its new 8486 chip,
containing more than a million transistors.
The Intel 486 now goes head to head with the new Motorola 68040 chip
for the next generation of personal computers.
However, analysts say it will likely be several years
before software is written to take advantage of the new faster chips.
Several vendors including Tandy, Grid, and Dell
introduced new PCs based on the Intel 386SX chip,
which is a 32-bit chip using a 16-bit data path.
And compact Olivetti and Acer showed off new 33MHz 386 machines.
Sharp became the first to actually demonstrate a color LCD laptop.
The PC-8000 is a 386 machine with a 14-inch color screen supporting VGA.
Sharp said their technology was different from the active matrix LCDs
used in miniature television sets.
Sharp said the color laptop would be available by the end of the year
for under $10,000.
Toshiba showed off its new 4-megabit DRAM chips.
The new chips make it possible to put as much as 14 megs
inside a Toshiba T5200 laptop.
And Traveling Software announced an upgrade of its Laplink program.
The new version is called Laplink 3,
and it will clone itself onto another computer
so that if you have two different disk formats and only one copy of Laplink,
you can still transfer files by first cloning the Laplink software onto another machine.
In other news this week, Motorola announced a 50MHz version of its 6803O chip.
That's the fastest clock speed in the industry.
Commodore has released a new Angus graphics chip for the Amiga
that solves the memory limitation problems with the current graphics chip.
The new Angus chip lets you use up to a megabyte of memory just for graphics.
A company called MacMotion has used HyperCard to program a new 9-axis robot system.
The company says HyperCard has enabled programming costs to be cut so dramatically
that the cost of the robot system may be reduced by a factor of 10.
National Semiconductor says it's building chips for the National Security Agency that self-destruct.
Designed presumably for use by spies, the chips come apart if someone tries to open up the machine.
Finally, Stanford University is conducting the first ever totally computerized election.
The election is only for student government,
but state and county election officials are watching the results.
The Stanford system is using 70 Macintosh computers as voting stations
with special software written by a Stanford sophomore.
The designers say the benefits are not only instant results but fewer wasted ballots
since the software is smart enough not to let the voter do something which would invalidate the ballot.
There is a paper and pencil backup system for the total computer phobe who has never touched a mouse.
That's it for this week's Random Access.
I'm Maria Gabriel for the Computer Chronicles.
The Computer Chronicles is made possible in part by McGraw-Hill, publishers of Byte Magazine,
and VIX, the Byte Information Exchange.
In print and online, Byte and VIX serve computer professionals worldwide with detailed information
on new hardware, software, and technologies.
For a transcript of this week's Computer Chronicles, send $4 to PTV Publications,
Post Office Box 701, Kent, Ohio, 44240.
Please indicate program date.
Thank you.
