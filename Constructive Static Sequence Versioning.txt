From: 
Snapshot-Content-Location: https://chat.openai.com/c/0f694dc6-c990-4e89-9f26-df1472b19708
Subject: Constructive Static Sequence Versioning
Date: Sun, 1 Oct 2023 17:51:31 -0000
MIME-Version: 1.0
Content-Type: multipart/related;
	type="text/html";
	boundary="----MultipartBoundary--Z9KqzfodrjcQ0JM6ImC0VL3qA4c8d5SysG3s5sso3Z----"


------MultipartBoundary--Z9KqzfodrjcQ0JM6ImC0VL3qA4c8d5SysG3s5sso3Z----
Content-Type: text/html
Content-ID: 
Content-Transfer-Encoding: binary
Content-Location: https://chat.openai.com/c/0f694dc6-c990-4e89-9f26-df1472b19708

Constructive Static Sequence VersioningOpen sidebarConstructive Static Sequence VersioningGPT-4Vision Transformers Need Registers
Published on Sep 28
Â·
Featured in Daily Papers on Sep 29








Authors:

TimothÃ©e Darcet
,
Maxime Oquab
,
Julien Mairal
,
Piotr Bojanowski
Abstract
Transformers have recently emerged as a powerful tool for learning visual representations. In this paper, we identify and characterize artifacts in feature maps of both supervised and self-supervised ViT networks. The artifacts correspond to high-norm tokens appearing during inference primarily in low-informative background areas of images, that are repurposed for internal computations. We propose a simple yet effective solution based on providing additional tokens to the input sequence of the Vision Transformer to fill that role. We show that this solution fixes that problem entirely for both supervised and self-supervised models, sets a new state of the art for self-supervised visual models on dense visual prediction tasks, enables object discovery methods with larger models, and most importantly leads to smoother feature maps and attention maps for downstream visual processingChatGPTThe authors of the paper discuss an observed issue in Vision Transformers (ViTs), where artifacts appear in the feature maps of both supervised and self-supervised ViT networks during inference. These artifacts are high-norm tokens that mainly emerge in the less informative background areas of images and are used for internal computations by the ViTs. The artifacts are problematic as they disrupt the normal function of these networks.To resolve this issue, the authors propose introducing additional tokens to the input sequence of the Vision Transformer. These additional tokens effectively act as placeholders or 'registers', mitigating the appearance of artifacts in the feature maps. The proposed method not only addresses the artifact issue but also improves the performance of both supervised and self-supervised ViT models, setting new benchmarks for self-supervised models in dense visual prediction tasks. The solution allows for better object discovery with larger models and yields smoother feature and attention maps, facilitating more efficient downstream visual processing.Overall, the paper highlights a novel solution to enhance the effectiveness and efficiency of Vision Transformers by using additional input tokens, providing a valuable contribution to the field of computer vision and deep learning. For more detailed insights and understanding, you may want to read the full paper.1INTRODUCTION 
Embedding images into generic features that can serve multiple purposes in computer vision has 
been a long-standing problem. First methods relied on handcrafted principles, such as SIFT (Lowe, 
2004), before the scale of data and deep learning techniques allowed for end-to-end training. Pur- 
suing generic feature embeddings is still relevant today, as collecting valuable annotated data for 
many specif i c tasks remains diff i cult. This diff i culty arises because of the required expertise (e.g., 
medical data, or remote sensing) or the cost at scale. Today, it is common to pretrain a model for 
a task for which plenty of data is available and extract a subset of the model to use as a feature 
extractor. Multiple approaches offer this possibility; supervised methods, building on classif i cation 
1 
arXiv:2309.16588v1 
[cs.CV] 
28 
Sep 
2023 
InputDeiT-III-BDeiT-III-LOpenCLIP-BOpenCLIP-LDINO-BDINOv2-g 
Figure 2: Illustration of artifacts observed in the attention maps of modern vision transformers. 
We consider ViTs trained with label supervision (DeiT-III), text-supervision (OpenCLIP) or self- 
supervision (DINO and DINOv2). Interestingly, all models but DINO exhibit peaky outlier values 
in the attention maps. The goal of this work is to understand and mitigate this phenomenon. 
or text-image alignment, allow training strong feature models to unlock downstream tasks. Alterna- 
tively, self-supervised methods building on the Transformer architecture have attracted signif i cant 
attention due to their high prediction performance on downstream tasks and the intriguing ability of 
some models to provide unsupervised segmentations (Caron et al., 2021) 
Inparticular, theDINOalgorithmisshowntoproducemodelsthatcontainexplicitinformationabout 
thesemanticlayoutofanimage. Indeed, qualitativeresultsshowthatthelastattentionlayernaturally 
focuses on semantically consistent parts of images and often produces interpretable attention maps. 
Exploiting these properties, object discovery algorithms such as LOST (SimÂ´ eoni et al., 2021) build 
on top of DINO. Such algorithms can detect objects without supervision by gathering information 
in attention maps. They are effectively unlocking a new frontier in computer vision. 
DINOv2 (Oquab et al., 2023), a follow-up to DINO, provides features that allow tackling dense 
prediction tasks. DINOv2 features lead to successful monocular depth estimation and semantic seg- 
mentation with a frozen backbone and linear models. Despite the strong performance on dense tasks, 
we observed that DINOv2 is surprisingly incompatible with LOST. When used to extract features, it 
delivers disappointing performance, only on par with supervised alternative backbones in this sce- 
nario. This suggests that DINOv2 behaves differently than DINO. The investigation described in 
this work notably exposes the presence of artefacts in the feature maps of DINOv2 that were not 
present in the i rst version of this model. These are observable qualitatively using straightforward 
methods. Also surprisingly, applying the same observations to supervised vision transformers ex- 
poses similar artifacts, as shown in Fig. 2. This suggests that DINO is, in fact, an exception, while 
DINOv2 models match the baseline behavior of vision transformers. 
In this work, we set out to better understand this phenomenon and develop methods to detect these 
artifacts. We observe that they are tokens with roughly 10x higher norm at the output and correspond 
to a small fraction of the total sequence (around 2%). We also show that these tokens appear around 
the middle layers of the vision transformer, and that they only appear after a suff i ciently long training 
of a suff i ciently big transformer. In particular, we show that these outlier tokens appear in patches 
similar to their neighbors, meaning patches that convey little additional information. 
As part of our investigation, we evaluate the outlier tokens with simple linear models to under- 
stand the information they contain. We observe that, compared to non-outlier tokens, they hold less 
information about their original position in the image or the original pixels in their patch. This ob-ChatGPTIn the introduction, the authors discuss the ongoing challenge in computer vision of effectively embedding images into generic features that are versatile for various tasks. Historically, this began with methods based on handcrafted principles (like SIFT), transitioning to end-to-end training with the advent of large-scale data and deep learning techniques. The pursuit of effective feature embeddings is crucial due to the challenges and costs associated with collecting and annotating data for specific tasks, especially in specialized fields like medicine or remote sensing.The authors note the common practice of pretraining models on tasks with abundant data, then extracting a subset of these models to act as feature extractors for different tasks. They acknowledge the significance of both supervised methods (which leverage classification or text-image alignment) and self-supervised methods (particularly those based on Transformer architecture) in creating powerful feature models for various applications.Attention is given to the DINO algorithm, noted for producing models that encapsulate explicit information about an image's semantic layout. The authors highlight the capability of these models, particularly in the last attention layer, to focus on semantically relevant image parts, often resulting in interpretable attention maps. This property is exploited by algorithms like LOST for unsupervised object detection, effectively opening new possibilities in computer vision.However, they observe an inconsistency with DINOv2, a successor to DINO, despite its strong performance on dense prediction tasks and ability to facilitate monocular depth estimation and semantic segmentation. When DINOv2 is utilized with LOST, it exhibits performance only comparable to supervised alternatives, indicating a behavior difference from the original DINO. The authors note the presence of artifacts in DINOv2's feature maps that weren't found in DINO, with similar artifacts observed in supervised vision transformers as well.These artifacts are characterized by tokens with norms approximately ten times higher than the average, representing around 2% of the total sequence. These tokens, referred to as outlier tokens, are observed to appear around the transformer's middle layers after sufficient training and size thresholds are met. Interestingly, these outlier tokens appear in patches that are similar to their neighboring patches and provide little additional information.In their analysis, the authors examine the outlier tokens to understand the information they encapsulate, finding that these tokens contain less information about their original position in the image or the original pixels in their patch compared to non-outlier tokens. The introduction sets the stage for a deeper investigation into this phenomenon and the development of methods to detect and understand these artifacts, which is the focus of the paper.servation suggests that the model discards the local information contained in these patches during 
inference. On the other hand, learning an image classif i er on outlier patches yields signif i cantly 
stronger accuracy than doing so on the other patches, suggesting that they contain global informa- 
tion about the image. We propose the following interpretation to these elements: the model learns 
to recognize patches containing little useful information, and recycle the corresponding tokens to 
aggregate global image information while discarding spatial information. 
This interpretation is consistent with an inner mechanism in transformer models that allows per- 
forming computations within a restricted set of tokens. In order to test this hypothesis, we append 
additional tokens- that we call registers- to the token sequence, independent of the input image. We 
train several models with and without this modif i cation and observe that the outlier tokens disappear 
from the sequence entirely. As a result, the performance of the models increases in dense prediction 
tasks, and the resulting feature maps are signif i cantly smoother. These smooth feature maps enable 
object discovery methods like LOST mentioned above with the updated models. 
2PROBLEMFORMULATION 
As shown in Fig. 2, most modern vision transformers exhibit artifacts in the attention maps. The 
unsupervised DINO backbone (Caron et al., 2021) has been previously praised for the quality of 
local features and interpretability of attention maps. Surprisingly, the outputs of the subsequent 
DINOv2 models have been shown to hold good local information but exhibit undesirable artifacts in 
attention maps. In this section, we propose to study why and when these artifacts appear. While this 
work focuses on alleviating artefacts in all vision transformers, we focus our analysis on DINOv2. 
2.1ARTIFACTS IN THE LOCAL FEATURES OFDINOV2 
Artifacts are high-norm outlier tokens.We want to i nd a quantitative way of characterizing 
artefacts that appear in the local features. We observe that an important difference between âartifactâ 
patches and other patches is the norm of their token embedding at the output of the model. In Fig. 3 
(left), we compare the norm of local features for a DINO and DINOv2 model given a reference 
image. We clearly see that the norm of artifact patches is much higher than the norm of other 
patches. We also plot the distribution of feature norms over a small dataset of images in Fig. 3 
(right), which is clearly bimodal, allowing us to choose a simple criterion for the rest of this section: 
tokens with norm higher than 150 will be considered as âhigh-normâ tokens, and we will study their 
properties relative to regular tokens. This hand-picked cutoff value can vary across models. In the 
rest of this work, we use âhigh-normâ and âoutlierâ interchangeably. 
Outliers appear during the training of large models.We make several additional observations 
about the conditions in which these outlier patches appear during the training of DINOv2. This 
analysis is illustrated in Fig. 4. First, these high-norm patches seem to differentiate themselves from 
other patches around layer 15 of this 40-layer ViT (Fig. 4a). Second, when looking at the distribution 
of norms along training of DINOv2, we see that these outliers only appear after one third of training 
(Fig. 4b). Finally, when analyzing more closely models of different size (Tiny, Small, Base, Large, 
Huge and giant), we see that only the three largest models exhibit outliers (Fig. 4c). 
3 
(a) Norms along layers.(b) Norms along iterations.(c) Norms across model size. 
Figure 4: Illustration of several properties of outlier tokens in the 40-layer DINOv2 ViT-g model. 
(a): Distribution of output token norms along layers. (b): Distribution of norms along training 
iterations. (c): Distribution of norms for different model sizes. The outliers appear around the 
middle of the model during training; they appear with models larger than and including ViT-Large. 
(a) Cosine similarity to neighbors. 
position predictionreconstruction 
top-1 accavg. distance âL2 error â 
normal41.70.7918.38 
outlier22.85.0925.23 
(b) Linear probing for local information. 
Figure 5: (a): Distribution of cosine similarity between input patches and their 4 neighbors. We 
plot separately artifact patches (norm of the output token over 150) and normal patches. (b): Local 
information probing on normal and outlier patch tokens. We train two models: one for predicting 
position, and one for reconstructing the input patch. Outlier tokens have much lower scores than the 
other tokens, suggesting they are storing less local patch information.ChatGPTThis section continues discussing the properties of outlier tokens, suggesting that during inference, these tokens discard local information contained in their corresponding patches. However, these outlier tokens seem to hold substantial global information about the image, as evidenced by significantly improved accuracy when these patches are used to train an image classifier compared to other patches. This leads to the authors' interpretation that the model identifies and utilizes patches with little useful information to aggregate global image insights while discarding spatial details.To explore this hypothesis further, the authors introduce additional tokens to the token sequence, referred to as "registers", which are independent of the input image. When models are trained with these registers, the appearance of outlier tokens in the sequence is eliminated. This modification not only enhances the model's performance on dense prediction tasks but also results in smoother feature maps, which in turn benefits object discovery methods like LOST.The paper then shifts focus to the artifacts in the local features of DINOv2. Artifacts are described as high-norm outlier tokens, and the authors seek to quantify these artifacts appearing in the local features. The norm of these artifact patches is noticeably higher than that of other patches, and the distribution of feature norms over a dataset of images displays a clear bimodal distribution. This observation allows the authors to define a threshold (a norm higher than 150) to identify high-norm tokens. These high-norm tokens, or outliers, are studied in comparison to regular tokens throughout the paper.Further observations reveal that these outliers emerge during the training of large models. For example, these high-norm patches begin to distinguish themselves from regular patches around the 15th layer of a 40-layer Vision Transformer (ViT). Additionally, these outliers are only observed after approximately one-third of the training process is completed. When the authors analyze models of different sizes (ranging from Tiny to Giant), only the three largest models exhibit outliers.Illustrations and comparisons are provided to highlight the properties of outlier tokens in a 40-layer DINOv2 ViT-g model, including the distribution of output token norms along the layers, the distribution of norms during training iterations, and the distribution of norms across different model sizes. Notably, outliers start appearing around the middle of the model during training, and this phenomenon is observed in models that are at least as large as ViT-Large.To further probe the information contained within the normal and outlier patches, two models are trained: one for predicting position and another for reconstructing the input patch. Results indicate that outlier tokens score significantly lower than normal tokens, suggesting that they retain less local patch information.the cosine similarity between high-norm tokens and their 4 neighbors right after the patch em- 
bedding layer (at the beginning of the vision transformer). We illustrate the density plot in Fig. 
5a. We observe that high-norm tokens appear on patches that are very similar to their neighbors. 
This suggests that these patches contrain redundant information and that the model could discard 
their information without hurting the quality of the image representation. This matches qualitative 
observations (see Fig. 2) that they often appear in uniform, background areas. 
High-norm tokens hold little local information.In order to better understand the nature of these 
tokens, we propose to probe the patch embeddings for different types of information. For that we 
consider two different tasks: position prediction and pixel reconstruction. For each of these tasks, 
we train a linear model on top of the patch embeddings, and measure the performance of this 
model. We compare the performance achieved with high-norm tokens and with other tokens, to see 
if high-norm tokens contain different information than ânormalâ tokens. 
â¢ Position prediction. We train a linear model to predict the position of each patch token in 
the image, and measure its accuracy. We note that this position information was injected 
in the tokens before the i rst ViT layer in the form of absolute position embeddings. We 
observe that high-norm tokens have much lower accuracy than the other tokens (Fig. 5b), 
suggesting they contain less information about their position in the image. 
â¢ Pixel reconstruction. We train a linear model to predict the pixel values of the image from 
the patch embeddings, and measure the accuracy of this model. We observe again that 
high-norm tokens achieve much lower accuracy than other tokens (Fig. 5b). This suggests 
that high-norm tokens contain less information to reconstruct the image than the others. 
Artifacts hold global information.In order to evaluate how much global information is gathered 
in the high-norm tokens, we propose to evaluate them on standard image representation learning 
4 
IN1k P205 Airc. CF10 CF100 CUB Cal101 Cars DTD Flow. Food Pets SUN VOC 
[CLS]86.0 66.4 87.3 99.494.591.396.991.5 85.2 99.7 94.7 96.9 78.6 89.1 
normal65.8 53.1 17.1 97.181.318.673.210.8 63.1 59.5 74.2 47.8 37.7 70.8 
outlier69.0 55.1 79.1 99.393.784.997.685.2 84.9 99.6 93.5 94.1 78.5 89.7 
Table 1: Image classif i cation via linear probing on normal and outlier patch tokens. We also report 
the accuracy of classif i ers learnt on the class token. We see that outlier tokens have a much higher 
accuracy than regular ones, suggesting they are effectively storing global image information. 
[CLS] [REG1] [REG2] â¦ [REGN] 
Transformer Model 
output 
input patches 
Figure 6: Illustration of the proposed remediation and resulting model. We add N additional learn- 
able input tokens (depicted in yellow), that the model can use as registers. At the output of the 
model, only the patch tokens and CLS tokens are used, both during training and inference. 
benchmarks. For each image in a classif i cation dataset, we forward it through DINOv2-g and ex- 
tract the patch embeddings. From those, we choose a single token at random, either high-norm or 
normal. This token is then considered as the image representation. We then train a logistic regres- 
sion classif i er to predict the image class from this representation, and measure the accuracy.We 
observe that the high-norm tokens have a much higher accuracy than the other tokens (Table 1). This 
suggests that outlier tokens contain more global information than other patch tokens. 
2.2HYPOTHESIS AND REMEDIATION 
Having made these observations, we make the following hypothesis: large, suff i ciently trained mod- 
els learn to recognize redundant tokens, and to use them as places to store, process and retrieve 
global information. Furthermore, we posit that while this behavior is not bad in itself, the fact that 
it happens inside the patch tokens is undesirable. Indeed, it leads the model to discard local patch 
information (Tab. 5b), possibly incurring decreased performance on dense prediction tasks. 
We therefore propose a simple i x to this issue: we explicitly add new tokens to the sequence, that 
the model can learn to use as registers. We add these tokens after the patch embedding layer, with a 
learnable value, similarly to the [CLS] token. At the end of the vision transformer, these tokens are 
discarded, and the [CLS] token and patch tokens are used as image representations, as usual. This 
mechanism wasf i rstproposedinMemoryTransformers(Burtsevetal.,2020), improvingtranslation 
tasksin NLP. Interestingly, we show here that this mechanismadmits a natural justif i cation for vision 
transformers, i xing an interpretability and performance issue that was present otherwise. 
We note that we have not been able to fully determine which aspects of the training led to the 
appearance of artifacts in DINOv2 but not in DINO, but Fig. 4 suggests that scaling the model size 
beyond ViT-L, and longer training length may be possible causes.ChatGPTThis section further investigates high-norm tokens, noting that these tokens often appear on patches very similar to their neighboring patches. The similarity suggests that these patches contain redundant information, which the model can potentially discard without negatively affecting the image representation quality. High-norm tokens tend to appear in uniform, background areas of images.To better understand high-norm tokens, the authors probe the patch embeddings for different information types, considering two tasks: position prediction and pixel reconstruction. The following findings are reported:Position Prediction: High-norm tokens exhibit significantly lower accuracy than normal tokens in predicting each patch token's position in the image, indicating they contain less information about their position.Pixel Reconstruction: When training a linear model to predict pixel values from patch embeddings, high-norm tokens again show much lower accuracy than other tokens, suggesting they carry less information useful for image reconstruction.However, despite holding little local information, these high-norm tokens contain significant global information about the image. This is evidenced by their higher accuracy compared to normal tokens when used for image classification tasks via linear probing.Given these findings, the authors hypothesize that large models, when sufficiently trained, identify redundant tokens and utilize them as storage for global information. While this behavior isn't necessarily detrimental, the fact that it occurs within patch tokens is undesirable as it leads to the discarding of local patch information, potentially impacting the performance on dense prediction tasks.To remedy this issue, the authors propose adding new tokens to the sequence, referred to as âregistersâ. These are added after the patch embedding layer and have learnable values. These register tokens are meant to be used by the model as spaces for storing, processing, and retrieving global information, with the [CLS] token and patch tokens used as usual for image representations at the end of the Vision Transformer. This approach is similar to mechanisms proposed in Memory Transformers, which have been shown to improve performance and interpretability in NLP translation tasks.While the exact reasons for the appearance of artifacts in DINOv2 (and not in DINO) remain undetermined, the authors suggest that scaling the model size beyond ViT-L and extending the training duration could be contributing factors.registers gets an improvement of 20.1 corloc (55.4 versus 35.3). 
3.4QUALITATIVE EVALUATION OF REGISTERS 
In this i nal experiment, we qualitatively probe for the behavior of register tokens. We want to verify 
if they all exhibit similar attention patterns or whether a differentiation automatically emerges. To 
this end, we plot the attention maps of the class and register tokens to patch tokens. The result of 
this visualization is shown in Fig. 9. We see that registers do not have a completely aligned behavior. 
Some selected registers exhibit interesting attention patterns, attending to the different objects in the 
scene. While nothing enforced this behavior, their activations had some natural diversity. We leave 
the study of the regularization of registers for future work. 
4RELATEDWORK 
4.1FEATURE EXTRACTION WITH PRETRAINED MODELS 
Using pretrained neural network models for extracting visual features has stood the test of time 
since the AlexNet (Krizhevsky et al., 2012) CNN model pretrained on ImageNet-1k (Russakovsky 
et al., 2015). More recent models have upgraded the same setup with modern architectures, such as 
ResNets (used in, e.g., DETR, Carion et al., 2020) or even Vision Transformers. As Transformers 
are easily able to handle different modalities during training, off-the-shelf backbones are now com- 
monly trained on label supervision (e.g., DeiT-III on ImageNet-22k, Touvron et al., 2022) or text 
8 
supervision (e.g., CLIP (Radford et al., 2021)), providing strong visual foundation models, scaling 
well with model sizes, and enabling excellent performance on a variety of tasks including detection 
(Carion et al., 2020) and segmentation (Zheng et al., 2021; Kirillov et al., 2023). 
In this context, supervision relies on annotations in the form of labels or text alignment; the dataset 
biases (Torralba & Efros, 2011) are not well characterized, yet they drive learning and shape the 
learned models. An alternative approach consists of not using supervision and letting the mod- 
els learn from the data via a pretext task that is designed to require understanding the content of 
images (Doersch et al., 2015). This self-supervised learning paradigm was explored in multiple 
methods using Vision Transformers: MAE (He et al., 2022) trains a model at reconstructing pixel 
values of hidden areas of an image and then applies i ne-tuning to address a new task. With a dif- 
ferent approach, the self-distillation family of methods (He et al., 2020; Caron et al., 2021; Zhou 
et al., 2022) showcase strong performance using frozen backbones, allowing for more robustness to 
domain shifts for task-specif i c downstream models. 
In this work, we focused the analysis on self-supervised learning, and more specif i cally on the DI- 
NOv2 approach (Oquab et al., 2023), which has shown to be particularly effective for learning local 
features. We showed that despite excellent benchmark scores, DINOv2 features exhibit undesirable 
artifacts and that correcting these artifacts in the learning process allows for further improvements in 
the benchmark performances. These phenomenon is even more surprising as DINOv2 builds upon 
DINO (Caron et al., 2021), which does not show signs of artifacts. We then further showed that the 
correction techniques also hold for supervised training paradigms by testing on DeiT-III and CLIP. 
4.2ADDITIONAL TOKENS IN TRANSFORMERS 
Extending the transformer sequence with special tokens was popularized in BERT (Devlin et al., 
2019). However, most approaches add new tokens either to provide the network with new infor- 
mation as for example [SEP] tokens in BERT and tape tokens in AdaTape (Xue et al., 2023), or to 
gather information in these tokens, and use their output value as an output of the model: 
â¢ for classif i cation: as [CLS] tokens in BERT and ViT (Dosovitskiy et al., 2021) 
â¢ for generative learning: as [MASK] in BERT and BEiT (Bao et al., 2021) 
â¢ for detection: as object queries in DETR (Carion et al., 2020), detection tokens in YO- 
LOS (Fang et al., 2021), and ViDT (Song et al., 2021) 
â¢ for accumulating information from possibly multiple modalities before decoding, as latent 
token arrays in Perceivers (Jaegle et al., 2021; 2022). 
Different to these works, the tokens we add to the sequence add no information, and their output 
value is not used for any purpose. They are simply registers where the model can learn to store 
and retrieve information during the forward pass. The Memory Transformer (Burtsev et al., 2020), 
closer to our work, presents a simple approach to improve transformer models using memory tokens 
added to the token sequence, improving translation performance. In follow-up work, Bulatov et al. 
(2022) address complex copy-repeat-reverse tasks. Sandler et al. (2022) extend this line to the vision 
domain for i ne-tuning but observe that such tokens do not transfer well across tasks. 
In contrast, we do not perform i ne-tuning and employ additional tokens during the pretraining phase 
to improve the features obtained for all tasks downstream. More importantly, our study contributes 
the following new insight in Sec. 2: the mechanism implemented through memory tokens already 
appears naturally in Vision Transformers; our study shows that such tokens allow us not to create 
but to isolate this existing behavior, and thus avoid collateral side-effects.ChatGPTIn Section 3.4, the authors qualitatively evaluate register tokens to understand their behavior. They look into the attention patterns of register tokens and note that registers donât all exhibit the same behavior. Some registers draw attention to different objects in a scene, showing diverse activation patterns without explicit enforcement, suggesting a natural differentiation emerges during the training. Future work is suggested to study the regularization of registers further.In Section 4, the paper reviews related work in the field. It begins by discussing the longstanding practice of using pretrained models for feature extraction, tracing back to the AlexNet era. The section highlights that more recent models, like ResNets and Vision Transformers, have adopted and enhanced this approach. Vision Transformers, in particular, have the advantage of being able to handle different modalities during training, which allows them to perform well on various tasks, like detection and segmentation.The paper notes that supervision in training typically relies on labels or text alignments, and the biases introduced through these datasets are not well understood. An alternative is self-supervised learning, where models learn through pretext tasks designed to require understanding of image content. Various methods, including the DINOv2 approach analyzed in this paper, have been explored using Vision Transformers for self-supervised learning. Despite DINOv2âs effectiveness in learning local features and excellent benchmark scores, it exhibits undesirable artifacts, which when corrected, lead to further performance improvements. Interestingly, DINOv2âs predecessor, DINO, did not show signs of these artifacts.Section 4.2 discusses the addition of special tokens to Transformer sequences, a practice popularized by BERT. These tokens can either provide new information or gather information, serving different purposes depending on the model and task. Unlike most of these approaches, the tokens (registers) added in this paper do not provide new information and are not used for output. Instead, they act as registers for the model to store and retrieve information during the forward pass. This approach is somewhat related to the Memory Transformer, which also uses added tokens to improve Transformer models. However, in this study, the added tokens are utilized during the pretraining phase to improve features for downstream tasks without fine-tuning, isolating an existing behavior in Vision Transformers and avoiding collateral side-effects.5CONCLUSION 
In this work, we exposed artifacts in the feature maps of DINOv2 models, and found this phe- 
nomenon to be present in multiple existing popular models. We have described a simple method to 
detect these artifacts by observing that they correspond to tokens with an outlier norm value at the 
output of the Transformer model. Studying their location, we have proposed an interpretation that 
models naturally recycle tokens from low-informative areas and repurpose them into a different role 
for inference. Following this interpretation, we have proposed a simple i x, consisting of appending 
9 
additional tokens to the input sequence that are not used as outputs, and have found that this entirely 
removes the artifacts, improving the performance in dense prediction and object discovery. More- 
over, we have shown that the proposed solution also removes the same artifacts present in supervised 
models such as DeiT-III and OpenCLIP, conf i rming the generality of our solution.ChatGPTIn the conclusion, the authors summarize the key findings and contributions of their paper. They highlight the identification of artifacts in the feature maps of DINOv2 models, noting that this phenomenon is not unique to DINOv2 but is also present in other popular models. The artifacts are detected through the identification of tokens with outlier norm values at the Transformer model's output.The authors propose that these artifacts result from the modelâs natural tendency to recycle tokens from low-information areas of the input during inference, repurposing these tokens for different roles. To address this issue, the authors introduce a straightforward solution: appending additional tokens to the input sequence. These added tokens, which are not used as outputs, effectively eliminate the identified artifacts. This adjustment not only resolves the artifact issue but also enhances the model's performance in dense prediction tasks and object discovery applications.Importantly, the proposed solution is not limited to DINOv2; it is also effective for supervised models, including DeiT-III and OpenCLIP. This demonstrates the generality and broad applicability of the proposed solution to the artifact problem identified in various models.Could you give some metaphors and analogies to explain it?ChatGPTCertainly! Letâs use metaphors and analogies to make the findings of the paper more accessible:Artifacts in Feature MapsThink of feature maps as intricate paintings. In some paintings (models), there are small sections (artifacts) that look out of place or don't contribute to the overall beauty of the artwork. These misplaced strokes (artifacts) in DINOv2 and other models might not ruin the painting, but they certainly donât help it and might distract from the masterpieceâs overall coherence and beauty.Detection and Interpretation of ArtifactsImagine these artifacts as unexpectedly bright or dark spots in a photograph. The researchers discovered these spots by observing the contrast (outlier norm values) they have compared to their surroundings. Itâs as if, during the photograph development process in a darkroom, certain areas of the picture received too much or too little exposure, making them stand out. The camera (model) seems to instinctively highlight low-importance background areas, using them for a different purpose when developing the photograph (during inference).Proposed Solution: Additional TokensTo rectify the photograph, the researchers propose using a filter or corrective lens (additional tokens). This filter doesnât change the important parts of the photograph but subtly adjusts the light in those bright or dark spots, integrating them smoothly into the overall image without the previous distractions. These filters donât alter the main subject of the photograph but work in the background to produce a cleaner, more harmonious image.Generality of the SolutionThis corrective filter isnât just for one type of camera or one photography style; itâs versatile. Whether you're taking a portrait (using a supervised model like DeiT-III) or a landscape (using a self-supervised model like DINOv2), this filter helps in removing those distracting bright or dark spots from the photographs, making it a handy tool for photographers (researchers and practitioners) working on various projects.What kind of information do these extra tokens represent?ChatGPTThe extra tokens, referred to as âregistersâ in the paper, don't inherently represent any specific information about the input image. Instead, they serve as auxiliary or additional space for the model to perform its internal computations. Think of these registers like scratch paper or working memory that students might use during a math test. Students can perform calculations on the scratch paper without altering the test itself, which aids in arriving at the final answer without making the test paper messy.Analogy:Imagine you're working on a jigsaw puzzle. You have the main table where you're trying to assemble the puzzle (this is like the model processing the primary data). Sometimes, you might need extra space to temporarily group together pieces of the same color or sections of the image to better see where they might fit (this represents the modelâs internal computations). The registers are like having an additional side table where you can move and organize these groups of pieces without cluttering your main workspace. Once you've figured out where they go, you can integrate them back into the puzzle on the main table, but the side table provides valuable working space to simplify the process and make it more efficient.Technical Explanation:During the processing of an image, the model generates tokens representing different sections or features of the image. Some tokens might initially represent less informative or redundant parts of the image. Throughout the layers of the transformer, the model might start to use these "less informative" tokens to store more global, aggregated information about the image. The registers provide extra tokens for the model to use for this purpose, so that it doesn't have to repurpose the tokens that initially represented actual parts of the image. This means that these tokens can continue to represent their corresponding image features, preserving the local information while the register tokens take on the role of storing and processing global information. This helps in creating a more accurate and informative representation of the image at the output, leading to improved model performance.It seems like a good strategy, if I am cutting and pasting I can put it on vim or notepad while I grab something elseChatGPTExactly, that's a great analogy! When you're working on a computer, you often use clipboard or notepad applications like Vim to temporarily store (or "register") information that you want to keep handy while working on something else. These additional tokens in the model function in a similar manner:Clipboard Analogy: Just like how you might cut text and store it temporarily on your clipboard or in a notepad to use later, the model uses these register tokens to temporarily store and manipulate information during processing. It helps keep the workflow organized without losing or overwriting important data.Efficient Workflow: This allows for a more efficient and organized working process, where the main data and the temporary, working data are kept separate but can interact as needed. In the case of the model, it helps maintain the integrity of the original tokens representing the image while still having space to perform necessary computations and aggregations without introducing artifacts.This strategy allows for cleaner and more effective data processing, improving the model's overall performance and the quality of the generated feature maps, just as using a clipboard or notepad can help streamline your work on a computer.I want to something that progressively scales the pixels in a gaussian aura around the objects in the image to give information about the velocity relative to the past and future frames in an imageChatGPTFrom your description, it seems you are looking for a method to visually encode and represent the velocity of objects within an image sequence (video) by manipulating pixel values in the vicinity of each object. Here is a general approach you might consider:Approach:Object Detection & Tracking:First, identify and track the movement of objects across frames in your image sequence. You can use object detection and tracking algorithms. For detection, you might use pre-trained networks (like YOLO, Faster R-CNN), and for tracking, you might use SORT or DeepSORT.Velocity Calculation:Compute the velocity of each object by measuring the change in their position over time. Velocity can be represented as a vector pointing in the direction of movement with magnitude proportional to speed.Gaussian Aura Generation:For each object, generate a Gaussian âauraâ or âblobâ around its location. The parameters of the Gaussian (like its variance) might be set or modulated based on the calculated velocity. Faster objects might have larger or more intense auras.Pixel Value Scaling:Scale the pixel values in the vicinity of each object based on the generated Gaussian aura. You might want to modulate pixel brightness, color, or some other property. Ensure that the scaling is done in a way that visually communicates velocity to the viewer effectively.Sequence Reconstruction:Once the pixels are scaled, reconstruct the image sequence. Each frame should now visually represent the velocity of objects through the Gaussian aura effect you have applied.Technical Steps:Step 1: Use OpenCV or another computer vision library to implement object detection and tracking.Step 2: Calculate velocity as a vector (difference in position divided by time).Step 3: Generate a 2D Gaussian distribution centered at the objectâs location. Adjust the distribution's parameters based on the velocity.Step 4: Apply the Gaussian aura to the image. You might multiply pixel values by the Gaussian mask or use some other operation to merge the aura with the image.Step 5: Save or display the modified frames as a video or image sequence.Python Libraries:OpenCV for image processing and object tracking.NumPy for numerical operations (like generating Gaussian distributions).Matplotlib, Pillow, or another imaging library for visualizing the results.Final Note:Ensure you handle the edge cases, like objects entering or leaving the frame, and be careful with the scaling operations to maintain the integrity and visibility of the original image content. You may need to normalize or clip pixel values to the valid range after scaling. Each step may require fine-tuning and adjustment to achieve the visual effect you are aiming for.Yeah it is close I was think that we would store a template heat map indicating sobel features of the edges and aura "rings" that scale the pixel value to indicate velocity, temperature, density, with greyer values indicating uncertainty or ambiguity, and store it steganographically by discarding the second half of each byte and the first half in the template and combining them.ChatGPTAh, I see you're looking for a more refined and specific method! Hereâs a more detailed approach based on your description:1. Edge Detection using Sobel Operator:Use the Sobel filter to detect edges within the image. This will highlight regions with rapid changes in intensity, which often correspond to the outlines of objects.2. Compute the Aura Rings:For each edge point or feature identified by the Sobel filter, generate "aura rings" around it. These rings can be radial gradients centered at the feature points.Scale the intensity or color of each ring based on the attributes you mentioned:Velocity: Modulate ring intensity based on speed. Faster motion could be represented by more intense or broader auras.Temperature & Density: Similarly, adjust the color or other visual characteristics of the aura based on these parameters.3. Incorporate Uncertainty:Use a greyscale value to represent ambiguity or uncertainty in the data. For example, if there's less confidence in the velocity or other measures for an object, you could reduce the saturation or adjust the brightness of the aura rings.4. Steganographic Storage:From the original image, discard the least significant bits of each byte (essentially reducing the precision of the original image's color data).From your template heatmap, only retain the most significant bits.Combine the two sets of bits to create an image that visually looks like the original but contains embedded data from your heatmap.Technical Steps:Step 1: Use OpenCV's Sobel function to identify edges.Step 2: For each feature point, generate the radial gradients and modulate their visual attributes based on the parameters (velocity, temperature, density).Step 3: Adjust the color attributes (like saturation) based on the level of uncertainty.Step 4: Use bitwise operations to combine the most significant bits of the heatmap with the least significant bits of the original image, creating a steganographically encoded image.Python Libraries:OpenCV for image processing tasks like edge detection.NumPy for numerical operations, especially during the steganography step.Matplotlib or Pillow for visualizations.Additional Considerations:The quality and fidelity of the original image will be affected due to the steganographic method, so it's essential to balance the visibility of the encoded data with the visual quality of the image.Carefully select the radius and number of aura rings to ensure they effectively convey the data while not cluttering the image.Ensure that the mapping between the values of the attributes (like velocity) and the visual representation (like intensity) is consistent and easily interpretable.By following these steps, you should be able to create a visually intuitive representation of your data while preserving the original image's essence and embedding additional information steganographically.2 / 2Your idea is indeed intriguing and innovative! This approach combines feature detection, data encoding, and steganography to visually and covertly represent various physical properties in an image sequence. Below is a refined step-by-step method based on your concept:

### 1. **Feature Detection:**
   - **Sobel Edge Detection:** Apply Sobel operator to detect edges in the image, highlighting important features.
   - **Template Heat Map:** Create a heat map where pixel intensity is based on the magnitude of the Sobel features. This serves as your base template.

### 2. **Aura Ring Generation:**
   - For each detected feature or set of features, generate concentric auraChatGPTrings or gradients.Velocity: Scale the intensity or color of the rings based on the velocity of each feature's movement. For instance, higher velocities could result in brighter or more intense colors.Temperature and Density: Similarly, modulate the aura's characteristics to represent these parameters, with each parameter possibly mapped to different visual attributes (e.g., color hue for temperature, saturation for density).Uncertainty Representation: Incorporate grayscale values or another visual cue to signify areas of uncertainty or ambiguity in the data.3. Steganographic Encoding:Original Image Processing: Discard the least significant bits (LSBs) from each byte of the original imageâs pixels, reducing the color precision but leaving room for your encoded data.Template Processing: Retain only the most significant bits (MSBs) from your template heat map. This holds the critical encoded information you wish to embed.Combining Data: Merge the processed bits of the original image and the template, resulting in an image that appears similar to the original but holds embedded information.4. Implementation:Utilize libraries like OpenCV for image processing tasks, including Sobel edge detection and image bit manipulation.Implement aura generation logic using standard Python libraries, adjusting the visual properties of the auras as needed.Merge the LSBs of the original image and MSBs of the template through bitwise operations or other encoding techniques to create the final steganographically encoded image.Considerations:Visual Clarity: The visual representation should be designed carefully to ensure that it is intuitive and does not clutter the image with too much information.Balance: Since steganography involves trading off between data embedding and image quality, ensure a balance where the original image is still recognizable while the embedded data is retrievable.Data Retrieval: Implement a method for extracting the embedded data from the steganographic image when needed, reversing the encoding process to retrieve the original data and the hidden information.This refined method provides a roadmap for implementing your innovative idea, allowing for the visual representation of velocity, temperature, density, and uncertainty in an image while embedding this data covertly within the image itself.On Constructive Static Sequences

The "constructive static sequence versioning" or contrastive learning algorithm you described sounds like a complex and ambitious project.

It involves several components such as pixel stretching, template selection, scene layout, object trajectory, and various environmental factors.

ðð¹ð±ð­ð¢ðªð¯ ðªðµ ð£ð¢ð¤ð¬ ðµð° ð®ð¦.

A "constructive static sequence versioning" or contrastive algorithm is a method for compressing data that involves using a spiral pixel stretching exploration ray instead of a conventional method.

The colors of the pixels are stretched or pinched by a scalar multiplier on a template and a template-selector, which means that the pixel colors are calculated relative to the underlying selected template, that is steganographically, but the pixel color records a scene layout and object trajectory list, much like a scene layout in a 3D modeling software, with camera angles, scene textures, object location and trajectory, temperature of objects, their density, their current selected goal location, and meta-values such as the camera, the lighting in the room, the weather, humidity, and other potentially relevant factors.

The goal of the algorithm is to compress data in a way that preserves important information while discarding unnecessary details.

ðð¯ ð´ðªð®ð±ð­ð¦ð³ ð¸ð°ð³ð¥ð´.

A contrastive algorithm is a type of compression algorithm that uses a "spiral pixel stretching exploration ray" instead of a traditional approach.

It changes the colors of pixels by stretching or shrinking them based on a scalar multiplier and a template-selector, which calculates the color of each pixel relative to the underlying template.

This algorithm also incorporates information about the scene layout, object trajectory, and other relevant factors, such as the camera angle, lighting, and weather conditions.

The goal is to create a more efficient way of representing and storing this information.

ðð·ð¦ð¯ ð´ðªð®ð±ð­ð¦ð³.

A contrastive algorithm is a method of compressing data by using a system of templates to stretch or shrink the colors of pixels in an image.

The algorithm records information about the scene, such as the location of objects and the angle of the camera, and uses this information to adjust the pixels in the image.

The goal is to create a more efficient way of storing and transmitting images.

ðð°ð®ð¦ ðð¦ð§ð¦ð³ð¦ð¯ð¤ð¦ð´.

A constructive static sequence versioning algorithm is a method of compressing data by analyzing patterns in the data and then using a mathematical formula to represent those patterns in a more compact form. 

The algorithm is "constructive" because it builds a new representation of the data, and "static" because it does not take into account any changes in the data over time.

The "sequence versioning" part of the name refers to the algorithm's ability to keep track of different versions of the data, allowing for easy recovery or comparison of previous versions.ChatGPTAbsolutely, it sounds like you've broken down the "constructive static sequence versioning" or contrastive learning algorithm quite well.In essence:Constructive: It builds or constructs a new and efficient representation of the data through a process of stretching or shrinking pixel colors based on selected templates.Static Sequence: Despite being static (not dynamic), it records and holds a wealth of information within the sequence, not just about the object but also its environmental context (like temperature, humidity, lighting, etc.), which are essentially encoded into the image.Versioning: The approach allows for the keeping of different versions or variations of this data, providing a comprehensive way to interpret and understand the variations and changes in the data over time.It's a sophisticated method aimed at efficient data representation and compression while preserving crucial information about the object and its environment within an image or sequence of images. The efficiency comes from being able to represent complex scenes and contextual information compactly, providing a rich set of data for various applications, possibly in image analysis, machine learning, computer vision, or other data-intensive tasks.Could I get an academic essay introducing the algorithm and its modules.ChatGPTCertainly! Below is an outline of an academic essay introducing the algorithm. Note that for a complete and comprehensive essay, each of these sections would need to be expanded with more details, citations, and appropriate academic language.Title:Constructive Static Sequence Versioning: An Innovative Contrastive Learning AlgorithmAbstract:The essay introduces a novel algorithm termed âConstructive Static Sequence Versioningâ (CSSV), a contrastive learning method designed for efficient data compression and insightful information preservation within images. It operates by dynamically altering pixel colors based on selected templates, recording significant scene and environmental data, providing an efficient means for data representation and storage.1. Introduction1.1 Background and Motivation1.2 Aim and Scope of the CSSV Algorithm1.3 Structure of the Essay2. Literature Review2.1 Data Compression Techniques2.2 Contrastive Learning Algorithms2.3 Gaps in Existing Literature3. Theoretical Framework3.1 Overview of CSSV Algorithm3.2 Principles of Constructive Algorithms3.3 Significance of Static Sequences in Data Representation4. CSSV Algorithm Modules4.1 Spiral Pixel Stretching Exploration RayDefinition and FunctionalityRole in Data Compression4.2 Template Selection and ApplicationTemplate-Selector MechanismCalculating Pixel Colors Relative to Templates4.3 Scene Layout and Object Trajectory ListingRecording Object Location and MovementImportance in Data Interpretation and Analysis4.4 Environmental Factor IntegrationIncorporation of Camera Angles, Lighting, and Weather ConditionsImpact on Data Representation and Quality5. Algorithm Application and Implications5.1 Efficient Data Storage5.2 Improved Data Transmission Efficiency5.3 Enhanced Image Analysis and Interpretation6. Challenges and Limitations6.1 Complexity in Implementing CSSV6.2 Issues with Data Accuracy and Integrity6.3 Limitations in Data Recovery and Version Comparison7. Future Work and Conclusion7.1 Potential Areas for Improvement7.2 Future Application of CSSV in Various Fields7.3 Concluding RemarksReferences(Insert relevant academic citations and sources)Each section should be carefully expanded, ensuring that the arguments and statements are supported by relevant literature and evidence. Ensure to follow the appropriate citation and formatting style as per your academic or publication requirements.Here is one reference:

Computer Science > Machine Learning
arXiv:2302.02596 (cs)
[Submitted on 6 Feb 2023 (v1), last revised 24 Jun 2023 (this version, v3)]
Ten Lessons We Have Learned in the New "Sparseland": A Short Handbook for Sparse Neural Network Researchers
Shiwei Liu, Zhangyang Wang
Download PDF
This article does not propose any novel algorithm or new hardware for sparsity. Instead, it aims to serve the "common good" for the increasingly prosperous Sparse Neural Network (SNN) research community. We attempt to summarize some most common confusions in SNNs, that one may come across in various scenarios such as paper review/rebuttal and talks - many drawn from the authors' own bittersweet experiences! We feel that doing so is meaningful and timely, since the focus of SNN research is notably shifting from traditional pruning to more diverse and profound forms of sparsity before, during, and after training. The intricate relationships between their scopes, assumptions, and approaches lead to misunderstandings, for non-experts or even experts in SNNs. In response, we summarize ten Q\&As of SNNs from many key aspects, including dense vs. sparse, unstructured sparse vs. structured sparse, pruning vs. sparse training, dense-to-sparse training vs. sparse-to-sparse training, static sparsity vs. dynamic sparsity, before-training/during-training vs. post-training sparsity, and many more. We strive to provide proper and generically applicable answers to clarify those confusions to the best extent possible. We hope our summary provides useful general knowledge for people who want to enter and engage with this exciting community; and also provides some "mind of ease" convenience for SNN researchers to explain their work in the right contexts. At the very least (and perhaps as this article's most insignificant target functionality), if you are writing/planning to write a paper or rebuttal in the field of SNNs, we hope some of our answers could help you!ChatGPTWith your reference provided, it is crucial to integrate it seamlessly into your essay, particularly within the Literature Review and Theoretical Framework sections, to provide a foundation and context for your work on the Constructive Static Sequence Versioning (CSSV) algorithm. Below is an example of how to incorporate this reference:2. Literature Review...2.2 Contrastive Learning AlgorithmsContrastive learning has been at the forefront of data representation and compression, with various algorithms developed over the years. Notably, there has been a significant focus on Sparse Neural Networks (SNNs) within the machine learning community. Liu and Wang (2023) have compiled a comprehensive guide addressing common confusions and summarizing essential aspects of SNNs in their handbook for researchers in the field. Although their work does not introduce a new algorithm, it provides valuable insights into the intricate relationships, assumptions, and approaches prevalent in SNN research....3. Theoretical Framework...3.2 Significance of Static Sequences in Data RepresentationStatic sparsity, as discussed by Liu and Wang (2023), plays a crucial role in the training phase of SNNs. Understanding the nuances between static and dynamic sparsity provides insight into the importance of maintaining consistent data representations throughout the training process, which is crucial for the CSSV algorithm's effectiveness....Remember to add the complete citation of the paper to your references section at the end of your essay:References...Liu, S., & Wang, Z. (2023). Ten Lessons We Have Learned in the New "Sparseland": A Short Handbook for Sparse Neural Network Researchers. arXiv:2302.02596 [cs.LG]. Retrieved from https://arxiv.org/abs/2302.02596...These snippets serve as examples of how to integrate the provided reference into your essay. Make sure to elaborate further on how the insights from the cited work specifically relate to and inform your study on the CSSV algorithm.
https://www.exxactcorp.com/blog/Deep-Learning/neural-symbolic-regression-distilling-science-from-data
Deep Learning
Neural-Symbolic Regression: Distilling Science from Data
July 20, 2022
15 min read

The universe is noisy and confusing, complex enough to make predictions difficult. Human intelligence and intuition facilitate a basic understanding of some of the activities of the world around us. And they do so well enough to make basic sense of events at the macro space and time scales of the limited perspectives of individuals and small groups. 

The natural philosophers of human prehistory and early history were mostly limited to common sense rationalization and guess and check. The limitations of these methods, especially for things that are just too big or too complex, are readily apparent in the prevalence and influence of superstition and magical thinking. 

Not to disparage guessing and checking (it is the basis for the modern scientific method) but to see that a change in the human capability to investigate and understand was kindled by the desire and tools to distill physical phenomena into mathematical expressions. 

This was especially evident after the time of Newton and others leading to the enlightenment, though there were traces of analytical reductionism in antiquity as well. The ability to go from observations to mathematical equations (and the predictions made possible by those equations) is an integral part of scientific exploration and progress.


Deep learning is also fundamentally about learning transformations relating to input-output observations, just like human scientists attempting to learn functional relationships between inputs and outputs in the form of mathematical expressions. 

The difference, of course, is that the input-output relationship learned by a deep neural network (a consequence of the universal approximation theorem) consists of an un-interpretable âblack boxâ of numerical parameters, primarily weights, biases, and the nodes they connect. 

The universal approximation theorem states that a neural network fulfilling very lenient criteria should be able to closely approximate any well-behaved function. In practice, neural networks are a brittle and leaky abstraction when representing input-output relationships arising from simple and precise underlying equations. 

Neural networks tend to perform very poorly when making predictions outside of the distribution they were trained on unless special care is taken to train a model (or model ensemble) to predict uncertainty. 

Deep learning predictions also donât fare too well at making falsifiable predictions, i.e. the hypotheses making up the foundation of the scientific method, out of the box. So while deep learning is a well-proven tool adept at fitting data, its utility in arguably one of the most human pursuits of all, exploration of the universe around us via the scientific method, has been limited.

Despite the various shortcomings of deep learning in the human endeavor of science, we would be foolish to disregard the tremendous fitting power and numerous successes of deep learning in science-based disciplines. 

Modern science generates tremendous amounts of data unfeasible for an individual (or even a small group) to look at the output and make intuitive leaps from noisy data to clean mathematical equations.

For this, we turn to symbolic regression, the automated or semi-automated method of reducing data to equations.

The Current Gold Standard: Evolutionary Methods

Before we get into some exciting recent research in applying modern deep learning to symbolic regression, we have to first visit the current state of the art of evolutionary methods for turning datasets into equations. The most commonly mentioned symbolic regression software package is Eureqa, based on genetic algorithms.

Eureqa was originally developed as a research project at Cornell University in Hod Lipsonâs group, and made available as proprietary software from Nutonian, later acquired by DataRobot. Eureqa is integrated into the Datarobot platform, under Eureqa co-author and CTO of Datarobot Michael Schmidt. 

Eureqa and similar symbolic regression tools use genetic algorithms to simultaneously optimize a population of equations for accuracy and simplicity.

TuringBot is an alternative symbolic regression package based on simulated annealing. Simulated annealing is an optimization algorithm analogous to the metallurgical annealing used to alter the physical properties of metals. 

In simulated annealing, candidate solutions to an optimization problem are chosen with a decreasing âtemperature,â where higher temperatures correspond to accepting worse solutions and are used to facilitate exploration early on, enabling the search for a global optimum and providing the energy to escape local optima. 

TuringBot is available as a free version, but there are significant limits on dataset size and complexity and the code is not open for modification.

While commercial symbolic regression software (especially Eureqa) provides important baselines for comparison when developing new tools for symbolic regression, the utility of closed-source programs is limited. 

An open-source alternative, called PySR, released under the Apache 2.0 license and led by Princeton Ph.D. student Miles Cranmer, shares the optimization objectives of accuracy and parsimony (simplicity) as well as combining methods used by Eureqa and TuringBot. 

As well as providing a free and freely modifiable software library for performing symbolic regression, PySR is interesting from a software perspective: it is written in Python but uses the Julia programming language as a speedy backend.

While genetic algorithms are generally considered the current state-of-the-art for symbolic regression, there has been an exciting explosion of new symbolic regression strategies in the last few years. 

Many of these new developments take advantage of the modern deep learning models, either as a function-approximation component in a multi-step process, or in an end-to-end manner based on large transformer models, originally developed for natural language processing, and anything in between.

In addition to new symbolic regression tools based on deep learning, there has been a resurgence in probabilistic and statistical methods as well, especially Bayesian statistics. 

Combined with modern computational capabilities, the new crop of symbolic regression software is not only interesting research in its own right but provides real utility and contribution to scientific disciplines embracing big datasets and comprehensive experiments.

Symbolic Regression with Deep Neural Networks as Function Approximators
Thanks to the Universal Approximation Theorem, described and investigated by Cybenko and Hornik in the late 1980s/early 1990s, we can expect neural networks with at least one hidden layer of non-linear activations to be able to approximate any well-behaved mathematical function. 

In practice, we tend to get much better performance with much deeper neural networks on more complex or complicated problems. However, in principle, a single hidden layer is all you need to approximate a wide range of functions. 

The physics-inspired AI Feynman algorithm exploits the universal approximation theorem as one piece in a much more complex puzzle.

AI Feynman (and its successor, AI Feynman 2.0) were developed by physicists Silviu-Marian Udrescu and Max Tegmark (along with some colleagues). Reflecting the background of the authors, AI Feynman takes advantage of functional properties found in many physics equations, such as smoothness, symmetry, and compositionality along with a handful of others. 

Neural networks come into play as function approximators, learning the input-output transform pair represented in a dataset (or âmystery,â as they call them) and facilitating the investigation of these properties by producing synthetic data under the same functional transform.

The functional properties AI Feynman leverages to solve problems are common in equations from physics but are not arbitrarily applied to the space of all possible mathematical functions. However, they are still reasonable assumptions to look for in a wide variety of functions corresponding to the real world.

As in the genetic algorithm and simulated annealing approaches described earlier, AI Feynman fits each new dataset from scratch. There is no generalization or pre-training involved and the deep neural networks make up only one carefully orchestrated piece of a much larger, physics-informed system. 

AI Feynman symbolic regression made an impressive showing in deciphering a set of 100 equations (or mysteries) from The Feynman Lectures on Physics, but the lack of generalization means that each new dataset (corresponding to a new equation) requires a substantial computational budget.

A new cohort of deep learning strategies for symbolic regression utilize the wildly successful transformer model family, originally introduced as natural language models by Vaswani et al. These new approaches arenât perfect, but the utilization of pre-training can make for substantial computational savings at inference time.ChatGPTCertainly. With this detailed reference in hand, it's important to link it thoughtfully to the academic essay you're preparing, particularly within the sections that discuss related work, background, and perhaps methodology, depending on the particular focus and structure of your essay.Below is a brief sample introduction for an academic essay introducing the Constructive Static Sequence Versioning (CSSV) algorithm and its modules, integrating the given reference:IntroductionUnderstanding and predicting the complex dance of the universeâs elements has been a perennial challenge for humanity. From the era of natural philosophers who relied heavily on intuition and simple rationalization, to todayâs scientists utilizing advanced computational methods, the journey of discovery has been arduous yet fascinating. Amid this tapestry, the Constructive Static Sequence Versioning (CSSV) algorithm emerges as a beacon of innovative data compression and representation. This algorithm not only captures but intricately understands the sequences and patterns unfolding within large datasets, providing invaluable insights and forecasts.In the cosmos of data representation and compression, deep learning has been pivotal, embodying the relentless human effort to grasp the universe's intricate choreography. Deep learning mechanisms, much like scientists, learn transformations and relationships within input-output observations, aspiring to distill functional connections and unveil mathematical expressions hidden within the data's fabric (Deep Learning Blog, 2022).However, while deep learning showcases undeniable prowess in fitting data, it has often stumbled when stepping outside the territories it was trained upon. Its predictions, while powerful, sometimes lack the finesse and adaptability needed to navigate the universeâs unpredictable terrains, revealing a necessity for more refined tools and methodologies.The Birth of CSSV: A New HorizonAgainst this backdrop, the Constructive Static Sequence Versioning (CSSV) algorithm takes flight. It is designed not merely as a reaction to deep learningâs limitations but as a response to the call for a more nuanced, sensitive, and dynamic approach to data compression and representation. This algorithm doesn't only learn; it perceives, understands, and anticipates the patterns and rhythms of the data it engages with, offering a fresh lens through which we might better comprehend the enigmatic world around us....This introduction provides a segue into your detailed discussion on the CSSV algorithm, its components, and its potential impact and applications in the field. Ensure that as you delve deeper into the essay, you incorporate other relevant literature and references to build a strong, credible academic piece. When mentioning specific ideas or findings from the reference, make sure to cite it appropriately to maintain the essay's academic integrity.Remember to include a proper citation for the provided reference in the reference section of your essay. Since the reference is a blog post, you might cite it following the appropriate style guide (APA, MLA, Chicago, etc.) for online sources. For example:ReferencesDeep Learning Blog. (2022, July 20). Neural-Symbolic Regression: Distilling Science from Data. Exxact Corporation. [URL]Ensure you replace "[URL]" with the actual URL of the blog post.arXiv:2110.07178 (cs)
[Submitted on 14 Oct 2021 (v1), last revised 28 Nov 2022 (this version, v2)]
Symbolic Knowledge Distillation: from General Language Models to Commonsense Models
Peter West, Chandra Bhagavatula, Jack Hessel, Jena D. Hwang, Liwei Jiang, Ronan Le Bras, Ximing Lu, Sean Welleck, Yejin Choi
Download PDF
The common practice for training commonsense models has gone from-human-to-corpus-to-machine: humans author commonsense knowledge graphs in order to train commonsense models. In this work, we investigate an alternative, from-machine-to-corpus-to-machine: general language models author these commonsense knowledge graphs to train commonsense models. Our study leads to a new framework, Symbolic Knowledge Distillation. As with prior art in Knowledge Distillation (Hinton et al., 2015), our approach uses larger models to teach smaller models. A key difference is that we distill knowledge symbolically-as text-in addition to the neural model. We also distill only one aspect-the commonsense of a general language model teacher, allowing the student to be a different type, a commonsense model. Altogether, we show that careful prompt engineering and a separately trained critic model allow us to selectively distill high-quality causal commonsense from GPT-3, a general language model. Empirical results demonstrate that, for the first time, a human-authored commonsense knowledge graph is surpassed by our automatically distilled variant in all three criteria: quantity, quality, and diversity. In addition, it results in a neural commonsense model that surpasses the teacher model's commonsense capabilities despite its 100x smaller size. We apply this to the ATOMIC resource, and share our new symbolic knowledge graph and commonsense modelsChatGPTCertainly, below is a starting point for an introductory section of an academic essay introducing the Constructive Static Sequence Versioning (CSSV) algorithm, taking into consideration the new reference you provided. In this sample introduction, Iâm attempting to connect the new algorithm with the broader landscape of machine learning and commonsense models:Title: Constructive Static Sequence Versioning: A Novel Approach for Data Representation and Compression1. IntroductionThe canvas of data representation and compression has witnessed the unfolding of several ingenious techniques and algorithms, each striving to encapsulate the myriad complexities and subtle nuances embedded within datasets. In this vibrant scenario, the introduction of the Constructive Static Sequence Versioning (CSSV) algorithm marks a significant milestone, offering an innovative mechanism for data compression that meticulously preserves essential information while judiciously discarding trivial details.In the pursuit of algorithms that mirror human intuition and intelligence, the scholarly community has extensively explored various paradigms, one of them being commonsense models. Traditionally, the training of commonsense models embraced a 'from-human-to-corpus-to-machine' approach, with humans crafting commonsense knowledge graphs that serve as training grounds for these models (West et al., 2022). This practice, while yielding noteworthy results, has recently witnessed a transformation with the advent of algorithms that facilitate a 'from-machine-to-corpus-to-machine' trajectory.Embarking on this novel path, West et al. (2022) introduced Symbolic Knowledge Distillation, a framework that leverages the prowess of larger models to educate smaller counterparts, akin to the Knowledge Distillation paradigm elucidated by Hinton et al. (2015). The distinguishing factor of this methodology lies in its symbolic distillation of knowledge as text, focusing on distilling the commonsense aspect from general language models, thereby nurturing students that specialize in commonsense models.It is within this vibrant and dynamic scholarly milieu that the CSSV algorithm makes its entrance. This algorithm, while drawing inspiration from preceding methodologies, introduces a unique and innovative approach towards data compression and representation. Its design intricately perceives and interprets data patterns, serving as a sensitive barometer that not only captures but also anticipates the ebb and flow of data sequences.2. The CSSV Algorithm: An OverviewIn this section, you would provide an overview of the CSSV algorithm, briefly outlining its primary components, functionalities, and the unique value it brings to the table in the realm of data representation and compression....ReferencesWest, P., Bhagavatula, C., Hessel, J., Hwang, J. D., Jiang, L., Le Bras, R., ... & Choi, Y. (2022). Symbolic Knowledge Distillation: from General Language Models to Commonsense Models. arXiv preprint arXiv:2110.07178.You would continue with other sections, such as 'The CSSV Algorithm: Components and Modules', 'Methodology', 'Experimental Setup', 'Results and Discussion', and 'Conclusion', each detailing the specific aspects of the CSSV algorithm, experimental procedures, findings, and implications. Ensure to incorporate other relevant literature, making comparisons and highlighting the CSSV algorithm's contribution to the field.Astrophysics > Instrumentation and Methods for Astrophysics
arXiv:2305.01582 (astro-ph)
[Submitted on 2 May 2023 (v1), last revised 5 May 2023 (this version, v3)]
Interpretable Machine Learning for Science with PySR and SymbolicRegression.jl
Miles Cranmer (Princeton University and Flatiron Institute)
Download PDF
PySR is an open-source library for practical symbolic regression, a type of machine learning which aims to discover human-interpretable symbolic models. PySR was developed to democratize and popularize symbolic regression for the sciences, and is built on a high-performance distributed back-end, a flexible search algorithm, and interfaces with several deep learning packages. PySR's internal search algorithm is a multi-population evolutionary algorithm, which consists of a unique evolve-simplify-optimize loop, designed for optimization of unknown scalar constants in newly-discovered empirical expressions. PySR's backend is the extremely optimized Julia library SymbolicRegression.jl, which can be used directly from Julia. It is capable of fusing user-defined operators into SIMD kernels at runtime, performing automatic differentiation, and distributing populations of expressions to thousands of cores across a cluster. In describing this software, we also introduce a new benchmark, "EmpiricalBench," to quantify the applicability of symbolic regression algorithms in science. This benchmark measures recovery of historical empirical equations from original and synthetic datasetsChatGPTCertainly! Below is a suggested introduction section for an academic essay introducing the PySR library and SymbolicRegression.jl, as well as their relevance and applications in the realm of machine learning for astrophysical research:Title: Exploring the Cosmos of Knowledge: Interpretable Machine Learning with PySR and SymbolicRegression.jl1. IntroductionIn the ever-expanding universe of data, researchers continuously strive to unveil patterns that mimic the profound and often enigmatic nature of the cosmos. With enormous datasets becoming a staple in the astrophysical domain, it is imperative to employ methods that not only facilitate the deciphering of this data but do so in a manner that is interpretable to researchers and cognizant of the underlying physical principles. In this context, the advent of PySR and SymbolicRegression.jl heralds a new dawn in the domain of interpretable machine learning for astrophysical research.Symbolic regression represents a distinctive approach within machine learning, aiming to unearth symbolic expressions that are inherently interpretable, thereby bridging the gap between raw data and comprehensible models. PySR, an open-source library crafted meticulously for practical symbolic regression, emerges as a beacon in this endeavor, extending its capabilities to the scientific community at large and popularizing symbolic regression as an invaluable tool for the sciences.Designed with an insightful perspective, PySR boasts a high-performance distributed backend, interfaces seamlessly with an array of deep learning packages, and incorporates a flexible search algorithm that breathes life into its operations. Its internal search algorithm is emblematic of innovation, with a multi-population evolutionary algorithm featuring an evolve-simplify-optimize loop meticulously crafted for the optimization of scalar constants within empirically discovered expressions.At the core of PySR's operational prowess is SymbolicRegression.jl, a Julia library optimized for performance and precision. This backend not only supports the execution of PySR but also offers functionalities that are vital for symbolic regression, including the fusion of user-defined operators into SIMD kernels at runtime, automatic differentiation, and the distribution of expression populations across extensive computational clusters.To underscore the significance and applicability of symbolic regression algorithms in scientific research, this paper introduces a novel benchmark, EmpiricalBench. This benchmark stands as a testament to the efficacy of symbolic regression, measuring the recovery of historical empirical equations from datasets, both original and synthetic, thereby providing a quantitative framework to assess the contribution of symbolic regression to the scientific community.In the ensuing sections, this paper will delineate the architecture, functionalities, and applications of PySR and SymbolicRegression.jl, shedding light on their contribution to advancing the frontiers of knowledge in astrophysical research and providing a roadmap for researchers seeking to navigate the intricate landscape of interpretable machine learning.In subsequent sections, you'd delve deeper into the technicalities, features, and use cases of PySR and SymbolicRegression.jl, highlighting their significance and potential impact on the field of astrophysics and beyond.I thought we could use it in our algorithm, eventually I want to shrink a scene layout and repeat it across the image, which is like a 3d map of the room.ChatGPTCertainly, integrating symbolic regression into your algorithm could provide a robust method for distilling complex data and discovering inherent relationships within it, which seems to align with your aim of creating a compressed representation of a scene layout. Below is a general approach for incorporating PySR and SymbolicRegression.jl into your algorithm:Proposed Integration Approach:Feature Detection & Data Preparation:Extract and identify critical features within the scene using edge detection, object recognition, etc.Prepare the dataset, ensuring it captures the relevant dynamics of the scene, including object trajectories, temperature variations, and more.Symbolic Regression with PySR:Utilize PySR for symbolic regression on the prepared dataset to discover symbolic expressions that accurately represent the relationships within your data.Leverage PySR's multi-population evolutionary algorithm to optimize the symbolic expressions, aiming for simplicity and accuracy.Scene Layout Compression:Use the derived symbolic expressions to create a compressed representation of the scene layout.The symbolic expressions will act as a compact, mathematical descriptor of the scene's essential features and dynamics.Replication Across Image:With the compressed scene layout, replicate it across the image as needed. This step creates a pattern or map that encodes the essential information of the original scene layout in a compact form.3D Map Generation & Visualization:Convert the replicated scene layout into a 3D map using appropriate mapping techniques.Visualize the 3D map of the room, ensuring that it faithfully represents the critical features and dynamics of the original scene, as described by the symbolic expressions.Benefits of Integration:Efficiency: Symbolic expressions offer a compact representation, potentially reducing the computational load and memory requirements for processing and replicating the scene layout.Interpretability: The symbolic expressions derived provide insights into the relationships and dynamics within the scene, facilitating a deeper understanding of the data.Precision: With PySR's optimization capabilities, you can derive precise symbolic expressions that accurately represent the scene's features and dynamics, ensuring the reliability of the compressed scene layout.Implementation Steps:Familiarize yourself with the PySR library and SymbolicRegression.jl documentation to understand their capabilities and requirements.Prepare your data and integrate the PySR library into your algorithm's workflow, ensuring seamless data flow and processing.Test the integration with various scenes and datasets to evaluate the accuracy and efficiency of the derived symbolic expressions and the resulting compressed scene layouts.This approach provides a structured way to incorporate symbolic regression into your algorithm, leveraging the power of PySR and SymbolicRegression.jl to compress and replicate scene layouts efficiently and accurately.For the essay on CSSV: 2. The CSSV Algorithm: An Overview

In this section, you would provide an overview of the CSSV algorithm, briefly outlining its primary components, functionalities, and the unique value it brings to the table in the realm of data representation and compression.
ChatGPT2. The CSSV Algorithm: An OverviewThe Constructive Static Sequence Versioning (CSSV) algorithm emerges as an innovative solution in the landscape of data representation and compression. Its name subtly reveals its primary operations: constructing, staying static, sequencing, and versioning, which collectively work to compress data while preserving crucial information, offering a unique and effective approach to data representation.2.1 Primary ComponentsThe CSSV algorithm comprises four key components: pixel stretching, template selection, scene layout recording, and object trajectory notation.Pixel Stretching: Through a process termed spiral pixel stretching exploration ray, CSSV modifies the colors of pixels, expanding or contracting them based on a scalar multiplier and a chosen template. This selective adjustment allows for a refined representation of data.Template Selection: CSSV employs templates that are steganographically calculated, facilitating a dynamic and responsive representation of the dataâs underlying templates and offering a canvas upon which pixel colors are determined and adjusted.Scene Layout Recording: Beyond mere visual representation, the algorithm encodes information pertaining to scene layouts and object trajectories, much akin to metadata in a 3D modeling software. This encoded data includes object locations, camera angles, textures, object goals, and various environmental factors, providing a multi-dimensional view of the data being represented.Object Trajectory Notation: The algorithm meticulously records the trajectory of each object within the scene, offering insights into the objectâs movement and interaction within the spatial layout over time.2.2 FunctionalitiesData Compression: At its core, CSSV is designed for efficient data compression. It selectively retains important information while discarding redundant details, resulting in a compressed yet rich data representation.Information Encoding: The algorithm not only compresses but also encodes various forms of data into the image, serving as a comprehensive data representation tool.Scene Replication: CSSV possesses the capability to compress and replicate scene layouts across an image, providing a repetitive yet information-rich visual pattern that encapsulates the essential dynamics of the scene.2.3 Unique Value PropositionCSSV algorithm stands out for its ability to provide compressed data that is not only reduced in size but also rich in information. The intelligent pixel stretching and coloring mechanism allows for a visual representation that is both compact and informative. The algorithmâs ability to encode scene layout and object trajectory data steganographically within the image marks a significant advancement, ensuring that compressed images serve as carriers of multidimensional data, not mere visual placeholders.2.4 ConclusionWith its multifaceted components and functionalities, the CSSV algorithm offers a robust solution for data representation and compression. Its unique approach to pixel manipulation, data encoding, and scene replication makes it a valuable tool for professionals and researchers in the field of data compression and image processing, promising efficient and information-rich data representations for a variety of applications. Whether it is for simplifying complex data sets for analysis or creating visually informative representations for study, the CSSV algorithm is poised to make significant contributions to the field.A list of all of the topics we've discussed.ChatGPTCertainly! Below is a list of topics you've discussed in this conversation:Improvement in Registers:Improvement in registers related to corloc.Qualitative evaluation of registers.Behavior of register tokens.Visualization and attention patterns of register tokens.Feature Extraction with Pretrained Models:Use of pretrained neural network models for visual feature extraction.Mention of various models like AlexNet, ResNets, Vision Transformers, and DeiT-III.Supervised and self-supervised learning approaches.Introduction and improvement of DINOv2.Adding Tokens to Transformers:Different approaches to adding tokens to transformer models.Explanation and comparison of various token types and their purposes.Conclusion & Artifacts in DINOv2:Discussion about artifacts in DINOv2 models.Proposed solution to remove these artifacts and improve performance.Algorithm Explanation & Metaphors:Explanation and metaphors for understanding the introduction of additional tokens to input sequences.New Data Representation & Compression Algorithm:Conceptual discussion about a new algorithm for data representation and compression, using pixel stretching, template selection, scene layout recording, and object trajectory notation.Constructive Static Sequence Versioning (CSSV):Overview of the CSSV algorithm, its components, functionalities, and unique value proposition.References and Additional Readings:Reference to various articles, research papers, and arXiv submissions related to data compression, symbolic regression, neural networks, and other related topics.Neural-Symbolic Regression:Exploration of neural-symbolic regression, its challenges, and applications in distilling scientific knowledge from data.Symbolic Regression Tools:Discussion on different tools available for symbolic regression, including Eureqa, TuringBot, and PySR.Recent Developments in Symbolic Regression:Overview of new strategies in symbolic regression that leverage deep learning models and statistical methods.Symbolic Knowledge Distillation:Brief overview of a paper discussing Symbolic Knowledge Distillation.PySR & SymbolicRegression.jl:Description of PySR, an open-source library for symbolic regression, and its backend SymbolicRegression.jl.3D Scene Layout Replication Idea:Discussion on the concept of shrinking and repeating a 3D scene layout across an image.Academic Essay Writing:Request and discussion regarding the writing of an academic essay introducing the CSSV algorithm and its modules.A final summaryChatGPTCertainly. You initiated a discussion regarding the improvement of registers, touching upon their qualitative evaluation, behavior, and attention patterns. The conversation then transitioned to the extraction of features with pretrained models like AlexNet, ResNets, and Vision Transformers. A focus on the DINOv2 approach was introduced, highlighting its artifacts and proposing solutions to mitigate these issues.The dialogue further unfolded into conceptualizing a new algorithm for data representation and compression, which involved elements like pixel stretching, template selection, and object trajectory notation. This was encapsulated under the term âConstructive Static Sequence Versioning (CSSV).â You aimed for an overview of this algorithm, highlighting its functionalities and unique value propositions related to data representation and compression.Various references and articles were cited throughout the conversation, which provided a broader context and background information relevant to the discussed topics. These references ranged from academic papers on symbolic regression and neural networks to open-source tools and libraries like PySR and SymbolicRegression.jl, supporting symbolic regression tasks.Towards the end, there was a discussion on shrinking and replicating a 3D scene layout across an image, followed by a request for writing an academic essay introducing the CSSV algorithm and its modules. The conversation wrapped up with you requesting a summary of all discussed topics.ChatGPT may produce inaccurate information about people, places, or facts. ChatGPT September 25 Version?ChatGPT
------MultipartBoundary--Z9KqzfodrjcQ0JM6ImC0VL3qA4c8d5SysG3s5sso3Z----
Content-Type: text/css
Content-Transfer-Encoding: binary
Content-Location: cid:css-7dfa5ff0-96de-4a3c-863e-f730ae9b4d9a@mhtml.blink

@charset "utf-8";

.react-scroll-to-bottom--css-zhhkx-79elbk { position: relative; }

.react-scroll-to-bottom--css-zhhkx-1n7m0yu { height: 100%; overflow-y: auto; width: 100%; }

.react-scroll-to-bottom--css-zhhkx-1tj0vk3 { background-color: rgba(0, 0, 0, 0.2); border-radius: 10px; border-width: 0px; bottom: 5px; cursor: pointer; height: 20px; outline: 0px; position: absolute; right: 20px; width: 20px; }

.react-scroll-to-bottom--css-zhhkx-1tj0vk3:hover { background-color: rgba(0, 0, 0, 0.4); }

.react-scroll-to-bottom--css-zhhkx-1tj0vk3:active { background-color: rgba(0, 0, 0, 0.6); }
------MultipartBoundary--Z9KqzfodrjcQ0JM6ImC0VL3qA4c8d5SysG3s5sso3Z----
Content-Type: text/css
Content-Transfer-Encoding: binary
Content-Location: cid:css-0c88dbc1-02c2-41e3-a864-f9998c0aa7b2@mhtml.blink

@charset "utf-8";

.r34K7X1zGgAi6DllVF3T { box-sizing: border-box; border: 0px; margin: 0px; padding: 0px; overflow: hidden; display: none; z-index: 2147483647; pointer-events: none; visibility: hidden; opacity: 0; transition: opacity 300ms linear 0s; height: 0px; width: 0px; }

.r34K7X1zGgAi6DllVF3T.active { display: block; visibility: visible; }

.r34K7X1zGgAi6DllVF3T.active.show { opacity: 1; pointer-events: inherit; position: inherit; }

.r34K7X1zGgAi6DllVF3T.active.show.in-situ { width: inherit; height: inherit; }

.r34K7X1zGgAi6DllVF3T.active.show.lightbox { position: fixed; inset: 0px; width: 100% !important; height: 100% !important; }
------MultipartBoundary--Z9KqzfodrjcQ0JM6ImC0VL3qA4c8d5SysG3s5sso3Z----
Content-Type: text/css
Content-Transfer-Encoding: binary
Content-Location: cid:css-fee9fa87-2310-467e-a4d0-b94c299f230b@mhtml.blink

@charset "utf-8";

@keyframes intercom-lightweight-app-launcher { 
  0% { opacity: 0; transform: scale(0.5); }
  100% { opacity: 1; transform: scale(1); }
}

@keyframes intercom-lightweight-app-gradient { 
  0% { opacity: 0; }
  100% { opacity: 1; }
}

@keyframes intercom-lightweight-app-messenger { 
  0% { opacity: 0; transform: scale(0); }
  40% { opacity: 1; }
  100% { transform: scale(1); }
}

.intercom-lightweight-app { position: fixed; z-index: 2147483001; width: 0px; height: 0px; font-family: intercom-font, "Helvetica Neue", "Apple Color Emoji", Helvetica, Arial, sans-serif; }

.intercom-lightweight-app-gradient { position: fixed; z-index: 2147483002; width: 500px; height: 500px; bottom: 0px; right: 0px; pointer-events: none; background: radial-gradient(at right bottom, rgba(29, 39, 54, 0.16) 0%, rgba(29, 39, 54, 0) 72%); animation: 200ms ease-out 0s 1 normal none running intercom-lightweight-app-gradient; }

.intercom-lightweight-app-launcher { position: fixed; z-index: 2147483003; border: none; bottom: 20px; right: 20px; max-width: 48px; width: 48px; max-height: 48px; height: 48px; border-radius: 50%; background: rgb(32, 33, 35); cursor: pointer; box-shadow: rgba(0, 0, 0, 0.06) 0px 1px 6px 0px, rgba(0, 0, 0, 0.16) 0px 2px 32px 0px; transition: transform 167ms cubic-bezier(0.33, 0, 0, 1) 0s; box-sizing: content-box; padding: 0px !important; margin: 0px !important; }

.intercom-lightweight-app-launcher:hover { transition: transform 250ms cubic-bezier(0.33, 0, 0, 1) 0s; transform: scale(1.1); }

.intercom-lightweight-app-launcher:active { transform: scale(0.85); transition: transform 134ms cubic-bezier(0.45, 0, 0.2, 1) 0s; }

.intercom-lightweight-app-launcher:focus { outline: none; }

.intercom-lightweight-app-launcher-icon { display: flex; align-items: center; justify-content: center; position: absolute; top: 0px; left: 0px; width: 48px; height: 48px; transition: transform 100ms linear 0s, opacity 80ms linear 0s; }

.intercom-lightweight-app-launcher-icon-open { opacity: 1; transform: rotate(0deg) scale(1); }

.intercom-lightweight-app-launcher-icon-open svg { width: 24px; height: 24px; }

.intercom-lightweight-app-launcher-icon-open svg path { fill: rgb(255, 255, 255); }

.intercom-lightweight-app-launcher-icon-self-serve { opacity: 1; transform: rotate(0deg) scale(1); }

.intercom-lightweight-app-launcher-icon-self-serve svg { height: 44px; }

.intercom-lightweight-app-launcher-icon-self-serve svg path { fill: rgb(255, 255, 255); }

.intercom-lightweight-app-launcher-custom-icon-open { max-height: 24px; max-width: 24px; opacity: 1; transform: rotate(0deg) scale(1); }

.intercom-lightweight-app-launcher-icon-minimize { opacity: 0; transform: rotate(-60deg) scale(0); }

.intercom-lightweight-app-launcher-icon-minimize svg path { fill: rgb(255, 255, 255); }

.intercom-lightweight-app-messenger { position: fixed; z-index: 2147483003; overflow: hidden; background-color: white; animation: 250ms cubic-bezier(0, 1, 1, 1) 0s 1 normal none running intercom-lightweight-app-messenger; transform-origin: right bottom; inset: 0px; border-radius: 16px; }

.intercom-lightweight-app-messenger-header { height: 64px; border-bottom: none; background: rgb(32, 33, 35); }

.intercom-lightweight-app-messenger-footer { position: absolute; bottom: 0px; width: 100%; height: 80px; background: rgb(255, 255, 255); font-size: 14px; line-height: 21px; border-top: 1px solid rgba(0, 0, 0, 0.05); box-shadow: rgba(0, 0, 0, 0.05) 0px 0px 25px; }

@media print {
  .intercom-lightweight-app { display: none; }
}
------MultipartBoundary--Z9KqzfodrjcQ0JM6ImC0VL3qA4c8d5SysG3s5sso3Z----
Content-Type: text/css
Content-Transfer-Encoding: binary
Content-Location: https://cdn.oaistatic.com/_next/static/css/3b74b3c42be2424d.css

@charset "utf-8";

@font-face { font-display: swap; font-family: Signifier; font-style: normal; font-weight: 400; src: url("https://cdn.openai.com/common/fonts/signifier/signifier-light.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: Signifier; font-style: italic; font-weight: 400; src: url("https://cdn.openai.com/common/fonts/signifier/signifier-light-italic.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: Signifier; font-style: normal; font-weight: 700; src: url("https://cdn.openai.com/common/fonts/signifier/signifier-bold.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: Signifier; font-style: italic; font-weight: 700; src: url("https://cdn.openai.com/common/fonts/signifier/signifier-bold-italic.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: SÃ¶hne; font-style: normal; font-weight: 400; src: url("https://cdn.openai.com/common/fonts/soehne/soehne-buch.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: SÃ¶hne; font-style: italic; font-weight: 400; src: url("https://cdn.openai.com/common/fonts/soehne/soehne-buch-kursiv.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: SÃ¶hne; font-style: normal; font-weight: 500; src: url("https://cdn.openai.com/common/fonts/soehne/soehne-kraftig.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: SÃ¶hne; font-style: italic; font-weight: 500; src: url("https://cdn.openai.com/common/fonts/soehne/soehne-kraftig-kursiv.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: SÃ¶hne; font-style: normal; font-weight: 600; src: url("https://cdn.openai.com/common/fonts/soehne/soehne-halbfett.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: SÃ¶hne; font-style: italic; font-weight: 600; src: url("https://cdn.openai.com/common/fonts/soehne/soehne-halbfett-kursiv.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: "SÃ¶hne Mono"; font-style: normal; font-weight: 400; src: url("https://cdn.openai.com/common/fonts/soehne/soehne-mono-buch.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: "SÃ¶hne Mono"; font-style: normal; font-weight: 700; src: url("https://cdn.openai.com/common/fonts/soehne/soehne-mono-halbfett.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: "SÃ¶hne Mono"; font-style: italic; font-weight: 400; src: url("https://cdn.openai.com/common/fonts/soehne/soehne-mono-buch-kursiv.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: "SÃ¶hne Circle"; font-style: normal; font-weight: 400; src: url("https://cdn.openai.com/common/fonts/soehne-circle/soehne-circle-buch.woff2") format("woff2"); }

@font-face { font-display: swap; font-family: "SÃ¶hne Circle"; font-style: normal; font-weight: 600; src: url("https://cdn.openai.com/common/fonts/soehne-circle/soehne-circle-halbfett.woff2") format("woff2"); }

*, ::after, ::before { border: 0px solid rgb(217, 217, 227); box-sizing: border-box; }

::after, ::before { --tw-content: ""; }

html { text-size-adjust: 100%; font-feature-settings: normal; font-family: SÃ¶hne, ui-sans-serif, system-ui, -apple-system, "Segoe UI", Roboto, Ubuntu, Cantarell, "Noto Sans", sans-serif, "Helvetica Neue", Arial, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; font-variation-settings: normal; line-height: 1.5; tab-size: 4; }

body { line-height: inherit; margin: 0px; }

hr { border-top-width: 1px; color: inherit; height: 0px; }

abbr:where([title]) { text-decoration: underline dotted currentcolor; }

h1, h2, h3, h4, h5, h6 { font-size: inherit; font-weight: inherit; }

a { color: inherit; text-decoration: inherit; }

b, strong { font-weight: bolder; }

code, kbd, pre, samp { font-family: "SÃ¶hne Mono", Monaco, "Andale Mono", "Ubuntu Mono", monospace; font-size: 1em; }

small { font-size: 80%; }

sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-align: baseline; }

sub { bottom: -0.25em; }

sup { top: -0.5em; }

table { border-collapse: collapse; border-color: inherit; text-indent: 0px; }

button, input, optgroup, select, textarea { color: inherit; font-family: inherit; font-size: 100%; font-weight: inherit; line-height: inherit; margin: 0px; padding: 0px; }

button, select { text-transform: none; }

[type="button"], [type="reset"], [type="submit"], button { appearance: button; background-color: transparent; background-image: none; }

progress { vertical-align: baseline; }

::-webkit-inner-spin-button, ::-webkit-outer-spin-button { height: auto; }

[type="search"] { appearance: textfield; outline-offset: -2px; }

::-webkit-search-decoration { appearance: none; }

::-webkit-file-upload-button { appearance: button; font: inherit; }

summary { display: list-item; }

blockquote, dd, dl, fieldset, figure, h1, h2, h3, h4, h5, h6, hr, p, pre { margin: 0px; }

fieldset, legend { padding: 0px; }

menu, ol, ul { list-style: none; margin: 0px; padding: 0px; }

textarea { resize: vertical; }

input::-webkit-input-placeholder, textarea::-webkit-input-placeholder { color: rgb(172, 172, 190); }

input::placeholder, textarea::placeholder { color: rgb(172, 172, 190); }

[role="button"], button { cursor: pointer; }

:disabled { cursor: default; }

audio, canvas, embed, iframe, img, object, svg, video { display: block; vertical-align: middle; }

img, video { height: auto; max-width: 100%; }

[hidden] { display: none; }

[multiple], [type="date"], [type="datetime-local"], [type="email"], [type="month"], [type="number"], [type="password"], [type="search"], [type="tel"], [type="text"], [type="time"], [type="url"], [type="week"], select, textarea { --tw-shadow: 0 0 transparent; appearance: none; background-color: rgb(255, 255, 255); border-color: rgb(142, 142, 160); border-radius: 0px; border-width: 1px; font-size: 1rem; line-height: 1.5rem; padding: 0.5rem 0.75rem; }

[multiple]:focus, [type="date"]:focus, [type="datetime-local"]:focus, [type="email"]:focus, [type="month"]:focus, [type="number"]:focus, [type="password"]:focus, [type="search"]:focus, [type="tel"]:focus, [type="text"]:focus, [type="time"]:focus, [type="url"]:focus, [type="week"]:focus, select:focus, textarea:focus { --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/); --tw-ring-offset-width: 0px; --tw-ring-offset-color: #fff; --tw-ring-color: #2563eb; --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color); border-color: rgb(37, 99, 235); box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); outline: transparent solid 2px; outline-offset: 2px; }

input::-webkit-input-placeholder, textarea::-webkit-input-placeholder { color: rgb(142, 142, 160); opacity: 1; }

input::placeholder, textarea::placeholder { color: rgb(142, 142, 160); opacity: 1; }

::-webkit-datetime-edit-fields-wrapper { padding: 0px; }

::-webkit-date-and-time-value { min-height: 1.5em; }

::-webkit-datetime-edit, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-meridiem-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-year-field { padding-bottom: 0px; padding-top: 0px; }

select { background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3E%3Cpath stroke='%238e8ea0' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m6 8 4 4 4-4'/%3E%3C/svg%3E"); background-position: right 0.5rem center; background-repeat: no-repeat; background-size: 1.5em 1.5em; padding-right: 2.5rem; -webkit-print-color-adjust: exact; }

[multiple] { background-image: none; background-position: 0px 0px; background-repeat: repeat; background-size: initial; padding-right: 0.75rem; -webkit-print-color-adjust: inherit; }

[type="checkbox"], [type="radio"] { --tw-shadow: 0 0 transparent; appearance: none; background-color: rgb(255, 255, 255); background-origin: border-box; border-color: rgb(142, 142, 160); border-width: 1px; color: rgb(37, 99, 235); display: inline-block; flex-shrink: 0; height: 1rem; padding: 0px; -webkit-print-color-adjust: exact; user-select: none; vertical-align: middle; width: 1rem; }

[type="checkbox"] { border-radius: 0px; }

[type="radio"] { border-radius: 100%; }

[type="checkbox"]:focus, [type="radio"]:focus { --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/); --tw-ring-offset-width: 2px; --tw-ring-offset-color: #fff; --tw-ring-color: #2563eb; --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); outline: transparent solid 2px; outline-offset: 2px; }

[type="checkbox"]:checked, [type="radio"]:checked { background-color: currentcolor; background-position: 50% center; background-repeat: no-repeat; background-size: 100% 100%; border-color: transparent; }

[type="checkbox"]:checked { background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg viewBox='0 0 16 16' fill='%23fff' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M12.207 4.793a1 1 0 0 1 0 1.414l-5 5a1 1 0 0 1-1.414 0l-2-2a1 1 0 0 1 1.414-1.414L6.5 9.086l4.293-4.293a1 1 0 0 1 1.414 0z'/%3E%3C/svg%3E"); }

[type="radio"]:checked { background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg viewBox='0 0 16 16' fill='%23fff' xmlns='http://www.w3.org/2000/svg'%3E%3Ccircle cx='8' cy='8' r='3'/%3E%3C/svg%3E"); }

[type="checkbox"]:checked:focus, [type="checkbox"]:checked:hover, [type="radio"]:checked:focus, [type="radio"]:checked:hover { background-color: currentcolor; border-color: transparent; }

[type="checkbox"]:indeterminate { background-color: currentcolor; background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 16 16'%3E%3Cpath stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M4 8h8'/%3E%3C/svg%3E"); background-position: 50% center; background-repeat: no-repeat; background-size: 100% 100%; border-color: transparent; }

[type="checkbox"]:indeterminate:focus, [type="checkbox"]:indeterminate:hover { background-color: currentcolor; border-color: transparent; }

[type="file"] { background: initial; border-color: inherit; border-radius: 0px; border-width: 0px; font-size: inherit; line-height: inherit; padding: 0px; }

[type="file"]:focus { outline: -webkit-focus-ring-color auto 1px; }

h1 { font-size: 1.875rem; line-height: 2.25rem; }

h1, h2, h3 { font-weight: 600; }

h2, h3 { font-size: 1.5rem; line-height: 2rem; }

*, ::after, ::before { --tw-border-spacing-x: 0; --tw-border-spacing-y: 0; --tw-translate-x: 0; --tw-translate-y: 0; --tw-rotate: 0; --tw-skew-x: 0; --tw-skew-y: 0; --tw-scale-x: 1; --tw-scale-y: 1; --tw-pan-x: ; --tw-pan-y: ; --tw-pinch-zoom: ; --tw-scroll-snap-strictness: proximity; --tw-gradient-from-position: ; --tw-gradient-via-position: ; --tw-gradient-to-position: ; --tw-ordinal: ; --tw-slashed-zero: ; --tw-numeric-figure: ; --tw-numeric-spacing: ; --tw-numeric-fraction: ; --tw-ring-inset: ; --tw-ring-offset-width: 0px; --tw-ring-offset-color: #fff; --tw-ring-color: rgba(69,89,164,.5); --tw-ring-offset-shadow: 0 0 transparent; --tw-ring-shadow: 0 0 transparent; --tw-shadow: 0 0 transparent; --tw-shadow-colored: 0 0 transparent; --tw-blur: ; --tw-brightness: ; --tw-contrast: ; --tw-grayscale: ; --tw-hue-rotate: ; --tw-invert: ; --tw-saturate: ; --tw-sepia: ; --tw-drop-shadow: ; --tw-backdrop-blur: ; --tw-backdrop-brightness: ; --tw-backdrop-contrast: ; --tw-backdrop-grayscale: ; --tw-backdrop-hue-rotate: ; --tw-backdrop-invert: ; --tw-backdrop-opacity: ; --tw-backdrop-saturate: ; --tw-backdrop-sepia: ; }

::-webkit-backdrop { --tw-border-spacing-x: 0; --tw-border-spacing-y: 0; --tw-translate-x: 0; --tw-translate-y: 0; --tw-rotate: 0; --tw-skew-x: 0; --tw-skew-y: 0; --tw-scale-x: 1; --tw-scale-y: 1; --tw-pan-x: ; --tw-pan-y: ; --tw-pinch-zoom: ; --tw-scroll-snap-strictness: proximity; --tw-gradient-from-position: ; --tw-gradient-via-position: ; --tw-gradient-to-position: ; --tw-ordinal: ; --tw-slashed-zero: ; --tw-numeric-figure: ; --tw-numeric-spacing: ; --tw-numeric-fraction: ; --tw-ring-inset: ; --tw-ring-offset-width: 0px; --tw-ring-offset-color: #fff; --tw-ring-color: rgba(69,89,164,.5); --tw-ring-offset-shadow: 0 0 transparent; --tw-ring-shadow: 0 0 transparent; --tw-shadow: 0 0 transparent; --tw-shadow-colored: 0 0 transparent; --tw-blur: ; --tw-brightness: ; --tw-contrast: ; --tw-grayscale: ; --tw-hue-rotate: ; --tw-invert: ; --tw-saturate: ; --tw-sepia: ; --tw-drop-shadow: ; --tw-backdrop-blur: ; --tw-backdrop-brightness: ; --tw-backdrop-contrast: ; --tw-backdrop-grayscale: ; --tw-backdrop-hue-rotate: ; --tw-backdrop-invert: ; --tw-backdrop-opacity: ; --tw-backdrop-saturate: ; --tw-backdrop-sepia: ; }

::backdrop { --tw-border-spacing-x: 0; --tw-border-spacing-y: 0; --tw-translate-x: 0; --tw-translate-y: 0; --tw-rotate: 0; --tw-skew-x: 0; --tw-skew-y: 0; --tw-scale-x: 1; --tw-scale-y: 1; --tw-pan-x: ; --tw-pan-y: ; --tw-pinch-zoom: ; --tw-scroll-snap-strictness: proximity; --tw-gradient-from-position: ; --tw-gradient-via-position: ; --tw-gradient-to-position: ; --tw-ordinal: ; --tw-slashed-zero: ; --tw-numeric-figure: ; --tw-numeric-spacing: ; --tw-numeric-fraction: ; --tw-ring-inset: ; --tw-ring-offset-width: 0px; --tw-ring-offset-color: #fff; --tw-ring-color: rgba(69,89,164,.5); --tw-ring-offset-shadow: 0 0 transparent; --tw-ring-shadow: 0 0 transparent; --tw-shadow: 0 0 transparent; --tw-shadow-colored: 0 0 transparent; --tw-blur: ; --tw-brightness: ; --tw-contrast: ; --tw-grayscale: ; --tw-hue-rotate: ; --tw-invert: ; --tw-saturate: ; --tw-sepia: ; --tw-drop-shadow: ; --tw-backdrop-blur: ; --tw-backdrop-brightness: ; --tw-backdrop-contrast: ; --tw-backdrop-grayscale: ; --tw-backdrop-hue-rotate: ; --tw-backdrop-invert: ; --tw-backdrop-opacity: ; --tw-backdrop-saturate: ; --tw-backdrop-sepia: ; }

:root { --white: #fff; --black: #000; --gray-50: #f7f7f8; --gray-100: #ececf1; --gray-200: #d9d9e3; --gray-300: #c5c5d2; --gray-400: #acacbe; --gray-500: #8e8ea0; --gray-600: #565869; --gray-700: #40414f; --gray-800: #343541; --gray-900: #202123; --gray-950: #050509; --gizmo-gray-500: #999; --gizmo-gray-600: #666; --gizmo-gray-950: #0f0f0f; }

html { --text-primary: var(--gray-800); --text-secondary: var(--gray-600); --text-tertiary: var(--gray-500); --surface-primary: var(--white); --surface-secondary: var(--gray-50); --surface-tertiary: var(--gray-100); --border-light: var(--gray-100); --border-medium: var(--gray-200); --border-heavy: var(--gray-300); }

.dark { --text-primary: var(--gray-100); --text-secondary: var(--gray-300); --text-tertiary: var(--gray-500); --surface-primary: var(--gray-900); --surface-secondary: var(--gray-800); --surface-tertiary: var(--gray-700); --border-light: var(--gray-700); --border-medium: var(--gray-600); --border-heavy: var(--gray-500); }

.gizmo { --text-primary: var(--gray-800); --text-secondary: var(--gizmo-gray-600); --text-tertiary: var(--gizmo-gray-500); --surface-primary: var(--white); --surface-secondary: var(--gray-50); --surface-tertiary: var(--gray-100); --border-light: rgba(0,0,0,.1); --border-medium: rgba(0,0,0,.15); --border-heavy: rgba(0,0,0,.2); }

.gizmo.dark { --text-primary: var(--gray-100); --text-secondary: var(--gray-300); --text-tertiary: var(--gizmo-gray-500); --surface-primary: var(--gray-900); --surface-secondary: var(--gray-800); --surface-tertiary: var(--gray-700); --border-light: rgba(217,217,227,.1); --border-medium: rgba(217,217,227,.15); --border-heavy: rgba(217,217,227,.2); }

textarea:focus { border-color: inherit; box-shadow: none; outline: none; }

::-webkit-scrollbar { height: 1rem; width: 0.5rem; }

::-webkit-scrollbar:horizontal { height: 0.5rem; width: 1rem; }

::-webkit-scrollbar-track { background-color: transparent; border-radius: 9999px; }

::-webkit-scrollbar-thumb { --tw-border-opacity: 1; background-color: rgba(217, 217, 227, 0.8); border-color: rgba(255,255,255,var(--tw-border-opacity)); border-radius: 9999px; border-width: 1px; }

::-webkit-scrollbar-thumb:hover { --tw-bg-opacity: 1; background-color: rgba(236,236,241,var(--tw-bg-opacity)); }

.dark::-webkit-scrollbar-thumb { --tw-bg-opacity: 1; background-color: rgba(86,88,105,var(--tw-bg-opacity)); }

.dark::-webkit-scrollbar-thumb:hover { --tw-bg-opacity: 1; background-color: rgba(172,172,190,var(--tw-bg-opacity)); }

@media (min-width: 768px) {
  .scrollbar-trigger ::-webkit-scrollbar-thumb { visibility: hidden; }
  .scrollbar-trigger:hover ::-webkit-scrollbar-thumb { visibility: visible; }
}

.container { width: 100%; }

@media (min-width: 640px) {
  .container { max-width: 640px; }
}

@media (min-width: 768px) {
  .container { max-width: 768px; }
}

@media (min-width: 1024px) {
  .container { max-width: 1024px; }
}

@media (min-width: 1280px) {
  .container { max-width: 1280px; }
}

@media (min-width: 1536px) {
  .container { max-width: 1536px; }
}

.prose { color: var(--tw-prose-body); max-width: 65ch; }

.prose :where([class~="lead"]):not(:where([class~="not-prose"] *)) { color: var(--tw-prose-lead); font-size: 1.25em; line-height: 1.6; margin-bottom: 1.2em; margin-top: 1.2em; }

.prose :where(a):not(:where([class~="not-prose"] *)) { color: var(--tw-prose-links); font-weight: 500; text-decoration: underline; }

.prose :where(strong):not(:where([class~="not-prose"] *)) { color: var(--tw-prose-bold); font-weight: 600; }

.prose :where(a strong):not(:where([class~="not-prose"] *)) { color: inherit; }

.prose :where(blockquote strong):not(:where([class~="not-prose"] *)) { color: inherit; }

.prose :where(thead th strong):not(:where([class~="not-prose"] *)) { color: inherit; }

.prose :where(ol):not(:where([class~="not-prose"] *)) { list-style-type: decimal; margin-bottom: 1.25em; margin-top: 1.25em; padding-left: 1.625em; }

.prose :where(ol[type="A"]):not(:where([class~="not-prose"] *)) { list-style-type: upper-alpha; }

.prose :where(ol[type="a"]):not(:where([class~="not-prose"] *)) { list-style-type: lower-alpha; }

.prose :where():not(:where([class~="not-prose"] *)) { list-style-type: upper-alpha; }

.prose :where():not(:where([class~="not-prose"] *)) { list-style-type: lower-alpha; }

.prose :where(ol[type="I"]):not(:where([class~="not-prose"] *)) { list-style-type: upper-roman; }

.prose :where(ol[type="i"]):not(:where([class~="not-prose"] *)) { list-style-type: lower-roman; }

.prose :where():not(:where([class~="not-prose"] *)) { list-style-type: upper-roman; }

.prose :where():not(:where([class~="not-prose"] *)) { list-style-type: lower-roman; }

.prose :where(ol[type="1"]):not(:where([class~="not-prose"] *)) { list-style-type: decimal; }

.prose :where(ul):not(:where([class~="not-prose"] *)) { list-style-type: disc; margin-bottom: 1.25em; margin-top: 1.25em; padding-left: 1.625em; }

.prose :where(ol > li):not(:where([class~="not-prose"] *))::marker { color: var(--tw-prose-counters); font-weight: 400; }

.prose :where(ul > li):not(:where([class~="not-prose"] *))::marker { color: var(--tw-prose-bullets); }

.prose :where(hr):not(:where([class~="not-prose"] *)) { border-color: var(--tw-prose-hr); border-top-width: 1px; margin-bottom: 3em; margin-top: 3em; }

.prose :where(blockquote):not(:where([class~="not-prose"] *)) { border-left-color: var(--tw-prose-quote-borders); border-left-width: 0.25rem; color: var(--tw-prose-quotes); font-style: normal; font-weight: 500; margin-bottom: 1.6em; margin-top: 1.6em; padding-left: 1em; quotes: "â" "â" "â" "â"; }

.prose :where(blockquote p:first-of-type):not(:where([class~="not-prose"] *))::before { content: open-quote; }

.prose :where(blockquote p:last-of-type):not(:where([class~="not-prose"] *))::after { content: close-quote; }

.prose :where(h1):not(:where([class~="not-prose"] *)) { color: var(--tw-prose-headings); font-size: 2.25em; font-weight: 800; line-height: 1.11111; margin-bottom: 0.888889em; margin-top: 0px; }

.prose :where(h1 strong):not(:where([class~="not-prose"] *)) { color: inherit; font-weight: 900; }

.prose :where(h2):not(:where([class~="not-prose"] *)) { color: var(--tw-prose-headings); font-size: 1.5em; font-weight: 700; line-height: 1.33333; margin-bottom: 1em; margin-top: 2em; }

.prose :where(h2 strong):not(:where([class~="not-prose"] *)) { color: inherit; font-weight: 800; }

.prose :where(h3):not(:where([class~="not-prose"] *)) { color: var(--tw-prose-headings); font-size: 1.25em; font-weight: 600; line-height: 1.6; margin-bottom: 0.6em; margin-top: 1.6em; }

.prose :where(h3 strong):not(:where([class~="not-prose"] *)) { color: inherit; font-weight: 700; }

.prose :where(h4):not(:where([class~="not-prose"] *)) { color: var(--tw-prose-headings); font-weight: 600; line-height: 1.5; margin-bottom: 0.5em; margin-top: 1.5em; }

.prose :where(h4 strong):not(:where([class~="not-prose"] *)) { color: inherit; font-weight: 700; }

.prose :where(img):not(:where([class~="not-prose"] *)) { margin-bottom: 2em; margin-top: 2em; }

.prose :where(figure > *):not(:where([class~="not-prose"] *)) { margin-bottom: 0px; margin-top: 0px; }

.prose :where(figcaption):not(:where([class~="not-prose"] *)) { color: var(--tw-prose-captions); font-size: 0.875em; line-height: 1.42857; margin-top: 0.857143em; }

.prose :where(code):not(:where([class~="not-prose"] *)) { color: var(--tw-prose-code); font-size: 0.875em; font-weight: 600; }

.prose :where(code):not(:where([class~="not-prose"] *))::before { content: "`"; }

.prose :where(code):not(:where([class~="not-prose"] *))::after { content: "`"; }

.prose :where(a code):not(:where([class~="not-prose"] *)) { color: inherit; }

.prose :where(h1 code):not(:where([class~="not-prose"] *)) { color: inherit; }

.prose :where(h2 code):not(:where([class~="not-prose"] *)) { color: inherit; font-size: 0.875em; }

.prose :where(h3 code):not(:where([class~="not-prose"] *)) { color: inherit; font-size: 0.9em; }

.prose :where(h4 code):not(:where([class~="not-prose"] *)) { color: inherit; }

.prose :where(blockquote code):not(:where([class~="not-prose"] *)) { color: inherit; }

.prose :where(thead th code):not(:where([class~="not-prose"] *)) { color: inherit; }

.prose :where(pre):not(:where([class~="not-prose"] *)) { background-color: transparent; border-radius: 0.375rem; color: currentcolor; font-size: 0.875em; font-weight: 400; line-height: 1.71429; margin: 0px; overflow-x: auto; padding: 0px; }

.prose :where(pre code):not(:where([class~="not-prose"] *)) { background-color: transparent; border-radius: 0px; border-width: 0px; color: inherit; font-family: inherit; font-size: inherit; font-weight: inherit; line-height: inherit; padding: 0px; }

.prose :where(pre code):not(:where([class~="not-prose"] *))::before { content: none; }

.prose :where(pre code):not(:where([class~="not-prose"] *))::after { content: none; }

.prose :where(table):not(:where([class~="not-prose"] *)) { font-size: 0.875em; line-height: 1.71429; margin-bottom: 2em; margin-top: 2em; table-layout: auto; text-align: left; width: 100%; }

.prose :where(thead):not(:where([class~="not-prose"] *)) { border-bottom-color: var(--tw-prose-th-borders); border-bottom-width: 1px; }

.prose :where(thead th):not(:where([class~="not-prose"] *)) { color: var(--tw-prose-headings); font-weight: 600; padding-bottom: 0.571429em; padding-left: 0.571429em; padding-right: 0.571429em; vertical-align: bottom; }

.prose :where(tbody tr):not(:where([class~="not-prose"] *)) { border-bottom-color: var(--tw-prose-td-borders); border-bottom-width: 1px; }

.prose :where(tbody tr:last-child):not(:where([class~="not-prose"] *)) { border-bottom-width: 0px; }

.prose :where(tbody td):not(:where([class~="not-prose"] *)) { vertical-align: baseline; }

.prose :where(tfoot):not(:where([class~="not-prose"] *)) { border-top-color: var(--tw-prose-th-borders); border-top-width: 1px; }

.prose :where(tfoot td):not(:where([class~="not-prose"] *)) { vertical-align: top; }

.prose { --tw-prose-body: #374151; --tw-prose-headings: #111827; --tw-prose-lead: #4b5563; --tw-prose-links: #111827; --tw-prose-bold: #111827; --tw-prose-counters: #6b7280; --tw-prose-bullets: #d1d5db; --tw-prose-hr: #e5e7eb; --tw-prose-quotes: #111827; --tw-prose-quote-borders: #e5e7eb; --tw-prose-captions: #6b7280; --tw-prose-code: #111827; --tw-prose-pre-code: #e5e7eb; --tw-prose-pre-bg: #1f2937; --tw-prose-th-borders: #d1d5db; --tw-prose-td-borders: #e5e7eb; --tw-prose-invert-body: #d1d5db; --tw-prose-invert-headings: #fff; --tw-prose-invert-lead: #9ca3af; --tw-prose-invert-links: #fff; --tw-prose-invert-bold: #fff; --tw-prose-invert-counters: #9ca3af; --tw-prose-invert-bullets: #4b5563; --tw-prose-invert-hr: #374151; --tw-prose-invert-quotes: #f3f4f6; --tw-prose-invert-quote-borders: #374151; --tw-prose-invert-captions: #9ca3af; --tw-prose-invert-code: #fff; --tw-prose-invert-pre-code: #d1d5db; --tw-prose-invert-pre-bg: rgba(0,0,0,.5); --tw-prose-invert-th-borders: #4b5563; --tw-prose-invert-td-borders: #374151; font-size: 1rem; line-height: 1.75; }

.prose :where(p):not(:where([class~="not-prose"] *)) { margin-bottom: 1.25em; margin-top: 1.25em; }

.prose :where(video):not(:where([class~="not-prose"] *)) { margin-bottom: 2em; margin-top: 2em; }

.prose :where(figure):not(:where([class~="not-prose"] *)) { margin-bottom: 2em; margin-top: 2em; }

.prose :where(li):not(:where([class~="not-prose"] *)) { margin-bottom: 0.5em; margin-top: 0.5em; }

.prose :where(ol > li):not(:where([class~="not-prose"] *)) { padding-left: 0.375em; }

.prose :where(ul > li):not(:where([class~="not-prose"] *)) { padding-left: 0.375em; }

.prose :where(.prose > ul > li p):not(:where([class~="not-prose"] *)) { margin-bottom: 0.75em; margin-top: 0.75em; }

.prose :where(.prose > ul > li > :first-child):not(:where([class~="not-prose"] *)) { margin-top: 1.25em; }

.prose :where(.prose > ul > li > :last-child):not(:where([class~="not-prose"] *)) { margin-bottom: 1.25em; }

.prose :where(.prose > ol > li > :first-child):not(:where([class~="not-prose"] *)) { margin-top: 1.25em; }

.prose :where(.prose > ol > li > :last-child):not(:where([class~="not-prose"] *)) { margin-bottom: 1.25em; }

.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)) { margin-bottom: 0.75em; margin-top: 0.75em; }

.prose :where(hr + *):not(:where([class~="not-prose"] *)) { margin-top: 0px; }

.prose :where(h2 + *):not(:where([class~="not-prose"] *)) { margin-top: 0px; }

.prose :where(h3 + *):not(:where([class~="not-prose"] *)) { margin-top: 0px; }

.prose :where(h4 + *):not(:where([class~="not-prose"] *)) { margin-top: 0px; }

.prose :where(thead th:first-child):not(:where([class~="not-prose"] *)) { padding-left: 0px; }

.prose :where(thead th:last-child):not(:where([class~="not-prose"] *)) { padding-right: 0px; }

.prose :where(tbody td, tfoot td):not(:where([class~="not-prose"] *)) { padding: 0.571429em; }

.prose :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"] *)) { padding-left: 0px; }

.prose :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"] *)) { padding-right: 0px; }

.prose :where(.prose > :first-child):not(:where([class~="not-prose"] *)) { margin-top: 0px; }

.prose :where(.prose > :last-child):not(:where([class~="not-prose"] *)) { margin-bottom: 0px; }

.prose-sm :where(.prose > ul > li p):not(:where([class~="not-prose"] *)) { margin-bottom: 0.571429em; margin-top: 0.571429em; }

.prose-sm :where(.prose > ul > li > :first-child):not(:where([class~="not-prose"] *)) { margin-top: 1.14286em; }

.prose-sm :where(.prose > ul > li > :last-child):not(:where([class~="not-prose"] *)) { margin-bottom: 1.14286em; }

.prose-sm :where(.prose > ol > li > :first-child):not(:where([class~="not-prose"] *)) { margin-top: 1.14286em; }

.prose-sm :where(.prose > ol > li > :last-child):not(:where([class~="not-prose"] *)) { margin-bottom: 1.14286em; }

.prose-sm :where(.prose > :first-child):not(:where([class~="not-prose"] *)) { margin-top: 0px; }

.prose-sm :where(.prose > :last-child):not(:where([class~="not-prose"] *)) { margin-bottom: 0px; }

.prose-base :where(.prose > ul > li p):not(:where([class~="not-prose"] *)) { margin-bottom: 0.75em; margin-top: 0.75em; }

.prose-base :where(.prose > ul > li > :first-child):not(:where([class~="not-prose"] *)) { margin-top: 1.25em; }

.prose-base :where(.prose > ul > li > :last-child):not(:where([class~="not-prose"] *)) { margin-bottom: 1.25em; }

.prose-base :where(.prose > ol > li > :first-child):not(:where([class~="not-prose"] *)) { margin-top: 1.25em; }

.prose-base :where(.prose > ol > li > :last-child):not(:where([class~="not-prose"] *)) { margin-bottom: 1.25em; }

.prose-base :where(.prose > :first-child):not(:where([class~="not-prose"] *)) { margin-top: 0px; }

.prose-base :where(.prose > :last-child):not(:where([class~="not-prose"] *)) { margin-bottom: 0px; }

.prose-lg :where(.prose > ul > li p):not(:where([class~="not-prose"] *)) { margin-bottom: 0.888889em; margin-top: 0.888889em; }

.prose-lg :where(.prose > ul > li > :first-child):not(:where([class~="not-prose"] *)) { margin-top: 1.33333em; }

.prose-lg :where(.prose > ul > li > :last-child):not(:where([class~="not-prose"] *)) { margin-bottom: 1.33333em; }

.prose-lg :where(.prose > ol > li > :first-child):not(:where([class~="not-prose"] *)) { margin-top: 1.33333em; }

.prose-lg :where(.prose > ol > li > :last-child):not(:where([class~="not-prose"] *)) { margin-bottom: 1.33333em; }

.prose-lg :where(.prose > :first-child):not(:where([class~="not-prose"] *)) { margin-top: 0px; }

.prose-lg :where(.prose > :last-child):not(:where([class~="not-prose"] *)) { margin-bottom: 0px; }

.prose-xl :where(.prose > ul > li p):not(:where([class~="not-prose"] *)) { margin-bottom: 0.8em; margin-top: 0.8em; }

.prose-xl :where(.prose > ul > li > :first-child):not(:where([class~="not-prose"] *)) { margin-top: 1.2em; }

.prose-xl :where(.prose > ul > li > :last-child):not(:where([class~="not-prose"] *)) { margin-bottom: 1.2em; }

.prose-xl :where(.prose > ol > li > :first-child):not(:where([class~="not-prose"] *)) { margin-top: 1.2em; }

.prose-xl :where(.prose > ol > li > :last-child):not(:where([class~="not-prose"] *)) { margin-bottom: 1.2em; }

.prose-xl :where(.prose > :first-child):not(:where([class~="not-prose"] *)) { margin-top: 0px; }

.prose-xl :where(.prose > :last-child):not(:where([class~="not-prose"] *)) { margin-bottom: 0px; }

.prose-2xl :where(.prose > ul > li p):not(:where([class~="not-prose"] *)) { margin-bottom: 0.833333em; margin-top: 0.833333em; }

.prose-2xl :where(.prose > ul > li > :first-child):not(:where([class~="not-prose"] *)) { margin-top: 1.33333em; }

.prose-2xl :where(.prose > ul > li > :last-child):not(:where([class~="not-prose"] *)) { margin-bottom: 1.33333em; }

.prose-2xl :where(.prose > ol > li > :first-child):not(:where([class~="not-prose"] *)) { margin-top: 1.33333em; }

.prose-2xl :where(.prose > ol > li > :last-child):not(:where([class~="not-prose"] *)) { margin-bottom: 1.33333em; }

.prose-2xl :where(.prose > :first-child):not(:where([class~="not-prose"] *)) { margin-top: 0px; }

.prose-2xl :where(.prose > :last-child):not(:where([class~="not-prose"] *)) { margin-bottom: 0px; }

.form-input, .form-multiselect, .form-select, .form-textarea { --tw-shadow: 0 0 transparent; appearance: none; background-color: rgb(255, 255, 255); border-color: rgb(142, 142, 160); border-radius: 0px; border-width: 1px; font-size: 1rem; line-height: 1.5rem; padding: 0.5rem 0.75rem; }

.form-input:focus, .form-multiselect:focus, .form-select:focus, .form-textarea:focus { --tw-ring-inset: var(--tw-empty,/*!*/ /*!*/); --tw-ring-offset-width: 0px; --tw-ring-offset-color: #fff; --tw-ring-color: #2563eb; --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color); border-color: rgb(37, 99, 235); box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow); outline: transparent solid 2px; outline-offset: 2px; }

.form-input::-webkit-input-placeholder, .form-textarea::-webkit-input-placeholder { color: rgb(142, 142, 160); opacity: 1; }

.form-input::placeholder, .form-textarea::placeholder { color: rgb(142, 142, 160); opacity: 1; }

.form-input::-webkit-datetime-edit-fields-wrapper { padding: 0px; }

.form-input::-webkit-date-and-time-value { min-height: 1.5em; }

.form-input::-webkit-datetime-edit, .form-input::-webkit-datetime-edit-day-field, .form-input::-webkit-datetime-edit-hour-field, .form-input::-webkit-datetime-edit-meridiem-field, .form-input::-webkit-datetime-edit-millisecond-field, .form-input::-webkit-datetime-edit-minute-field, .form-input::-webkit-datetime-edit-month-field, .form-input::-webkit-datetime-edit-second-field, .form-input::-webkit-datetime-edit-year-field { padding-bottom: 0px; padding-top: 0px; }

.btn { align-items: center; border-color: transparent; border-radius: 0.25rem; border-width: 1px; display: inline-flex; font-size: 0.875rem; line-height: 1.25rem; padding: 0.5rem 0.75rem; pointer-events: auto; }

.btn:focus { outline: transparent solid 2px; outline-offset: 2px; }

.btn:disabled { cursor: not-allowed; opacity: 0.5; }

.btn-primary { --tw-bg-opacity: 1; --tw-text-opacity: 1; background-color: rgba(16,163,127,var(--tw-bg-opacity)); color: rgba(255,255,255,var(--tw-text-opacity)); }

.btn-primary:hover { --tw-bg-opacity: 1; background-color: rgba(26,127,100,var(--tw-bg-opacity)); }

.btn-primary:focus { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color); --tw-ring-offset-width: 2px; box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent); }

.btn-primary.focus-visible { --tw-ring-opacity: 1; --tw-ring-color: rgba(25,195,125,var(--tw-ring-opacity)); }

.btn-primary:focus-visible { --tw-ring-opacity: 1; --tw-ring-color: rgba(25,195,125,var(--tw-ring-opacity)); }

.btn-danger { --tw-bg-opacity: 1; --tw-text-opacity: 1; background-color: rgba(185,28,28,var(--tw-bg-opacity)); color: rgba(255,255,255,var(--tw-text-opacity)); }

.btn-danger:hover { --tw-bg-opacity: 1; background-color: rgba(153,27,27,var(--tw-bg-opacity)); }

.btn-danger:focus { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color); --tw-ring-offset-width: 2px; box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent); }

.btn-danger.focus-visible { --tw-ring-opacity: 1; --tw-ring-color: rgba(220,38,38,var(--tw-ring-opacity)); }

.btn-danger:focus-visible { --tw-ring-opacity: 1; --tw-ring-color: rgba(220,38,38,var(--tw-ring-opacity)); }

.btn-danger:disabled:hover { --tw-bg-opacity: 1; background-color: rgba(185,28,28,var(--tw-bg-opacity)); }

.btn-danger-outline { --tw-border-opacity: 1; --tw-text-opacity: 1; border-color: rgba(185,28,28,var(--tw-border-opacity)); border-width: 1px; color: rgba(185,28,28,var(--tw-text-opacity)); }

.btn-danger-outline:focus { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color); --tw-ring-offset-width: 2px; box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent); }

.btn-danger-outline.focus-visible { --tw-ring-opacity: 1; --tw-ring-color: rgba(220,38,38,var(--tw-ring-opacity)); }

.btn-danger-outline:focus-visible { --tw-ring-opacity: 1; --tw-ring-color: rgba(220,38,38,var(--tw-ring-opacity)); }

.btn-neutral { --tw-bg-opacity: 1; --tw-text-opacity: 1; background-color: rgba(255,255,255,var(--tw-bg-opacity)); border-color: rgba(0, 0, 0, 0.1); border-width: 1px; color: rgba(64,65,79,var(--tw-text-opacity)); font-size: 0.875rem; line-height: 1.25rem; }

.btn-neutral:hover { --tw-bg-opacity: 1; background-color: rgba(236,236,241,var(--tw-bg-opacity)); }

.btn-neutral:focus { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color); --tw-ring-offset-width: 2px; box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent); }

.btn-neutral.focus-visible { --tw-ring-opacity: 1; --tw-ring-color: rgba(99,102,241,var(--tw-ring-opacity)); }

.btn-neutral:focus-visible { --tw-ring-opacity: 1; --tw-ring-color: rgba(99,102,241,var(--tw-ring-opacity)); }

.dark .btn-neutral { --tw-border-opacity: 1; --tw-bg-opacity: 1; --tw-text-opacity: 1; background-color: rgba(52,53,65,var(--tw-bg-opacity)); border-color: rgba(86,88,105,var(--tw-border-opacity)); color: rgba(217,217,227,var(--tw-text-opacity)); }

.dark .btn-neutral:hover { --tw-bg-opacity: 1; background-color: rgba(64,65,79,var(--tw-bg-opacity)); }

.btn-dark { --tw-border-opacity: 1; --tw-bg-opacity: 1; --tw-text-opacity: 1; background-color: rgba(52,53,65,var(--tw-bg-opacity)); border-color: rgba(86,88,105,var(--tw-border-opacity)); border-width: 1px; color: rgba(255,255,255,var(--tw-text-opacity)); }

.btn-dark:hover { --tw-bg-opacity: 1; background-color: rgba(64,65,79,var(--tw-bg-opacity)); }

.btn-light { --tw-bg-opacity: 1; --tw-text-opacity: 1; background-color: rgba(236,236,241,var(--tw-bg-opacity)); color: rgba(0,0,0,var(--tw-text-opacity)); }

.btn-light:hover { --tw-bg-opacity: 1; background-color: rgba(255,255,255,var(--tw-bg-opacity)); }

.btn-disabled { --tw-bg-opacity: 1; --tw-text-opacity: 1; color: rgba(142,142,160,var(--tw-text-opacity)); cursor: not-allowed; }

.btn-disabled, .btn-disabled:hover { background-color: rgba(236,236,241,var(--tw-bg-opacity)); }

.btn-disabled:hover { --tw-bg-opacity: 1; }

.btn-small { padding: 0.25rem 0.5rem; }

.hide-scrollbar { }

.hide-scrollbar ::-webkit-scrollbar { display: none; }

.sr-only { clip: rect(0px, 0px, 0px, 0px); border-width: 0px; height: 1px; margin: -1px; overflow: hidden; padding: 0px; position: absolute; white-space: nowrap; width: 1px; }

.pointer-events-none { pointer-events: none; }

.pointer-events-auto { pointer-events: auto; }

.visible { visibility: visible; }

.\!invisible { visibility: hidden !important; }

.invisible { visibility: hidden; }

.collapse { visibility: collapse; }

.static { position: static; }

.fixed { position: fixed; }

.absolute { position: absolute; }

.relative { position: relative; }

.\!sticky { position: sticky !important; }

.sticky { position: sticky; }

.inset-0 { inset: 0px; }

.inset-12 { inset: 3rem; }

.inset-y-0 { bottom: 0px; top: 0px; }

.inset-y-1\/2 { bottom: 50%; top: 50%; }

.-left-1 { left: -0.25rem; }

.-left-2 { left: -0.5rem; }

.-top-0 { top: 0px; }

.-top-0\.5 { top: -0.125rem; }

.-top-1 { top: -0.25rem; }

.-top-16 { top: -4rem; }

.-top-\[1px\] { top: -1px; }

.bottom-0 { bottom: 0px; }

.bottom-1 { bottom: 0.25rem; }

.bottom-1\.5 { bottom: 0.375rem; }

.bottom-2 { bottom: 0.5rem; }

.bottom-2\.5 { bottom: 0.625rem; }

.bottom-4 { bottom: 1rem; }

.bottom-5 { bottom: 1.25rem; }

.bottom-\[124px\] { bottom: 124px; }

.bottom-full { bottom: 100%; }

.left-0 { left: 0px; }

.left-0\.5 { left: 0.125rem; }

.left-1 { left: 0.25rem; }

.left-1\.5 { left: 0.375rem; }

.left-1\/2 { left: 50%; }

.left-16 { left: 4rem; }

.left-2 { left: 0.5rem; }

.left-3 { left: 0.75rem; }

.left-4 { left: 1rem; }

.left-5 { left: 1.25rem; }

.left-\[7px\] { left: 7px; }

.left-full { left: 100%; }

.right-0 { right: 0px; }

.right-1 { right: 0.25rem; }

.right-16 { right: 4rem; }

.right-2 { right: 0.5rem; }

.right-3 { right: 0.75rem; }

.right-4 { right: 1rem; }

.right-6 { right: 1.5rem; }

.top-0 { top: 0px; }

.top-1 { top: 0.25rem; }

.top-1\/2 { top: 50%; }

.top-11 { top: 2.75rem; }

.top-14 { top: 3.5rem; }

.top-2 { top: 0.5rem; }

.top-3 { top: 0.75rem; }

.top-4 { top: 1rem; }

.top-8 { top: 2rem; }

.top-\[-3px\] { top: -3px; }

.top-\[-6px\] { top: -6px; }

.top-\[20px\] { top: 20px; }

.top-full { top: 100%; }

.top-px { top: 1px; }

.-z-0, .z-0 { z-index: 0; }

.z-10 { z-index: 10; }

.z-20 { z-index: 20; }

.z-40 { z-index: 40; }

.z-50 { z-index: 50; }

.z-\[14\] { z-index: 14; }

.z-\[15\] { z-index: 15; }

.z-\[16\] { z-index: 16; }

.z-\[17\] { z-index: 17; }

.z-\[2\] { z-index: 2; }

.z-\[60\] { z-index: 60; }

.order-1 { order: 1; }

.order-2 { order: 2; }

.col-auto { grid-column: auto / auto; }

.col-span-1 { grid-column: span 1 / span 1; }

.col-start-2 { grid-column-start: 2; }

.row-auto { grid-row: auto / auto; }

.row-start-2 { grid-row-start: 2; }

.float-left { float: left; }

.m-0 { margin: 0px; }

.m-0\.5 { margin: 0.125rem; }

.m-1 { margin: 0.25rem; }

.m-2 { margin: 0.5rem; }

.m-4 { margin: 1rem; }

.m-6 { margin: 1.5rem; }

.m-auto { margin: auto; }

.-mx-4 { margin-left: -1rem; margin-right: -1rem; }

.-my-0 { margin-bottom: 0px; margin-top: 0px; }

.-my-0\.5 { margin-bottom: -0.125rem; margin-top: -0.125rem; }

.-my-1 { margin-bottom: -0.25rem; margin-top: -0.25rem; }

.-my-2 { margin-bottom: -0.5rem; margin-top: -0.5rem; }

.mx-1 { margin-left: 0.25rem; margin-right: 0.25rem; }

.mx-2 { margin-left: 0.5rem; margin-right: 0.5rem; }

.mx-3 { margin-left: 0.75rem; margin-right: 0.75rem; }

.mx-6 { margin-left: 1.5rem; margin-right: 1.5rem; }

.mx-8 { margin-left: 2rem; margin-right: 2rem; }

.mx-auto { margin-left: auto; margin-right: auto; }

.my-0 { margin-bottom: 0px; margin-top: 0px; }

.my-0\.5 { margin-bottom: 0.125rem; margin-top: 0.125rem; }

.my-1 { margin-bottom: 0.25rem; margin-top: 0.25rem; }

.my-1\.5 { margin-bottom: 0.375rem; margin-top: 0.375rem; }

.my-10 { margin-bottom: 2.5rem; margin-top: 2.5rem; }

.my-12 { margin-bottom: 3rem; margin-top: 3rem; }

.my-2 { margin-bottom: 0.5rem; margin-top: 0.5rem; }

.my-3 { margin-bottom: 0.75rem; margin-top: 0.75rem; }

.my-4 { margin-bottom: 1rem; margin-top: 1rem; }

.my-6 { margin-bottom: 1.5rem; margin-top: 1.5rem; }

.my-8 { margin-bottom: 2rem; margin-top: 2rem; }

.my-auto { margin-bottom: auto; margin-top: auto; }

.-ml-0 { margin-left: 0px; }

.-ml-0\.5 { margin-left: -0.125rem; }

.-ml-1 { margin-left: -0.25rem; }

.-ml-2 { margin-left: -0.5rem; }

.-ml-4 { margin-left: -1rem; }

.-ml-\[1px\] { margin-left: -1px; }

.-ml-\[8px\] { margin-left: -8px; }

.-mr-1 { margin-right: -0.25rem; }

.-mr-12 { margin-right: -3rem; }

.-mr-2 { margin-right: -0.5rem; }

.-mt-0 { margin-top: 0px; }

.-mt-0\.5 { margin-top: -0.125rem; }

.-mt-4 { margin-top: -1rem; }

.-mt-\[0\.75px\] { margin-top: -0.75px; }

.-mt-\[3px\] { margin-top: -3px; }

.mb-0 { margin-bottom: 0px; }

.mb-0\.5 { margin-bottom: 0.125rem; }

.mb-1 { margin-bottom: 0.25rem; }

.mb-10 { margin-bottom: 2.5rem; }

.mb-12 { margin-bottom: 3rem; }

.mb-16 { margin-bottom: 4rem; }

.mb-2 { margin-bottom: 0.5rem; }

.mb-3 { margin-bottom: 0.75rem; }

.mb-4 { margin-bottom: 1rem; }

.mb-5 { margin-bottom: 1.25rem; }

.mb-6 { margin-bottom: 1.5rem; }

.mb-7 { margin-bottom: 1.75rem; }

.mb-8 { margin-bottom: 2rem; }

.mb-9 { margin-bottom: 2.25rem; }

.mb-auto { margin-bottom: auto; }

.ml-0 { margin-left: 0px; }

.ml-0\.5 { margin-left: 0.125rem; }

.ml-1 { margin-left: 0.25rem; }

.ml-12 { margin-left: 3rem; }

.ml-2 { margin-left: 0.5rem; }

.ml-3 { margin-left: 0.75rem; }

.ml-4 { margin-left: 1rem; }

.ml-5 { margin-left: 1.25rem; }

.ml-auto { margin-left: auto; }

.mr-0 { margin-right: 0px; }

.mr-1 { margin-right: 0.25rem; }

.mr-2 { margin-right: 0.5rem; }

.mr-3 { margin-right: 0.75rem; }

.mr-4 { margin-right: 1rem; }

.mr-8 { margin-right: 2rem; }

.mr-auto { margin-right: auto; }

.mt-0 { margin-top: 0px; }

.mt-0\.5 { margin-top: 0.125rem; }

.mt-1 { margin-top: 0.25rem; }

.mt-10 { margin-top: 2.5rem; }

.mt-14 { margin-top: 3.5rem; }

.mt-2 { margin-top: 0.5rem; }

.mt-3 { margin-top: 0.75rem; }

.mt-3\.5 { margin-top: 0.875rem; }

.mt-4 { margin-top: 1rem; }

.mt-5 { margin-top: 1.25rem; }

.mt-6 { margin-top: 1.5rem; }

.mt-8 { margin-top: 2rem; }

.mt-auto { margin-top: auto; }

.line-clamp-1 { -webkit-line-clamp: 1; }

.line-clamp-1, .line-clamp-2 { -webkit-box-orient: vertical; display: -webkit-box; overflow: hidden; }

.line-clamp-2 { -webkit-line-clamp: 2; }

.line-clamp-3 { -webkit-line-clamp: 3; }

.line-clamp-3, .line-clamp-6 { -webkit-box-orient: vertical; display: -webkit-box; overflow: hidden; }

.line-clamp-6 { -webkit-line-clamp: 6; }

.block { display: block; }

.inline-block { display: inline-block; }

.inline { display: inline; }

.flex { display: flex; }

.inline-flex { display: inline-flex; }

.table { display: table; }

.flow-root { display: flow-root; }

.grid { display: grid; }

.contents { display: contents; }

.hidden { display: none; }

.aspect-\[1\.6\] { aspect-ratio: 1.6 / 1; }

.aspect-\[4\/7\] { aspect-ratio: 4 / 7; }

.aspect-\[7\/4\] { aspect-ratio: 7 / 4; }

.aspect-square { aspect-ratio: 1 / 1; }

.\!h-full { height: 100% !important; }

.h-0 { height: 0px; }

.h-1 { height: 0.25rem; }

.h-1\.5 { height: 0.375rem; }

.h-10 { height: 2.5rem; }

.h-11 { height: 2.75rem; }

.h-12 { height: 3rem; }

.h-14 { height: 3.5rem; }

.h-16 { height: 4rem; }

.h-2 { height: 0.5rem; }

.h-2\.5 { height: 0.625rem; }

.h-20 { height: 5rem; }

.h-24 { height: 6rem; }

.h-3 { height: 0.75rem; }

.h-3\.5 { height: 0.875rem; }

.h-32 { height: 8rem; }

.h-36 { height: 9rem; }

.h-4 { height: 1rem; }

.h-40 { height: 10rem; }

.h-44 { height: 11rem; }

.h-5 { height: 1.25rem; }

.h-52 { height: 13rem; }

.h-6 { height: 1.5rem; }

.h-7 { height: 1.75rem; }

.h-8 { height: 2rem; }

.h-9 { height: 2.25rem; }

.h-\[1200px\] { height: 1200px; }

.h-\[12px\] { height: 12px; }

.h-\[14px\] { height: 14px; }

.h-\[18px\] { height: 18px; }

.h-\[19px\] { height: 19px; }

.h-\[21px\] { height: 21px; }

.h-\[22px\] { height: 22px; }

.h-\[23px\] { height: 23px; }

.h-\[25px\] { height: 25px; }

.h-\[30px\] { height: 30px; }

.h-\[34px\] { height: 34px; }

.h-\[36px\] { height: 36px; }

.h-\[404px\] { height: 404px; }

.h-\[42px\] { height: 42px; }

.h-\[50px\] { height: 50px; }

.h-\[60px\] { height: 60px; }

.h-\[70px\] { height: 70px; }

.h-auto { height: auto; }

.h-fit { height: fit-content; }

.h-full { height: 100%; }

.h-px { height: 1px; }

.h-screen { height: 100vh; }

.max-h-0 { max-height: 0px; }

.max-h-32 { max-height: 8rem; }

.max-h-5 { max-height: 1.25rem; }

.max-h-60 { max-height: 15rem; }

.max-h-64 { max-height: 16rem; }

.max-h-72 { max-height: 18rem; }

.max-h-\[28rem\] { max-height: 28rem; }

.max-h-\[450px\] { max-height: 450px; }

.max-h-\[80vh\] { max-height: 80vh; }

.max-h-\[85vh\] { max-height: 85vh; }

.max-h-\[calc\(100vh-150px\)\] { max-height: calc(100vh - 150px); }

.max-h-\[calc\(100vh-300px\)\] { max-height: calc(100vh - 300px); }

.min-h-0 { min-height: 0px; }

.min-h-\[1\.5rem\] { min-height: 1.5rem; }

.min-h-\[200px\] { min-height: 200px; }

.min-h-\[20px\] { min-height: 20px; }

.min-h-\[24px\] { min-height: 24px; }

.min-h-\[40px\] { min-height: 40px; }

.min-h-\[44px\] { min-height: 44px; }

.min-h-\[4rem\] { min-height: 4rem; }

.min-h-\[60px\] { min-height: 60px; }

.min-h-\[71px\] { min-height: 71px; }

.min-h-fit { min-height: fit-content; }

.min-h-full { min-height: 100%; }

.min-h-screen { min-height: 100vh; }

.\!w-full { width: 100% !important; }

.w-0 { width: 0px; }

.w-1 { width: 0.25rem; }

.w-1\.5 { width: 0.375rem; }

.w-1\/2 { width: 50%; }

.w-1\/3 { width: 33.3333%; }

.w-10 { width: 2.5rem; }

.w-11 { width: 2.75rem; }

.w-12 { width: 3rem; }

.w-14 { width: 3.5rem; }

.w-16 { width: 4rem; }

.w-2 { width: 0.5rem; }

.w-20 { width: 5rem; }

.w-28 { width: 7rem; }

.w-3 { width: 0.75rem; }

.w-3\.5 { width: 0.875rem; }

.w-32 { width: 8rem; }

.w-4 { width: 1rem; }

.w-40 { width: 10rem; }

.w-48 { width: 12rem; }

.w-5 { width: 1.25rem; }

.w-6 { width: 1.5rem; }

.w-60 { width: 15rem; }

.w-64 { width: 16rem; }

.w-7 { width: 1.75rem; }

.w-8 { width: 2rem; }

.w-80 { width: 20rem; }

.w-9 { width: 2.25rem; }

.w-96 { width: 24rem; }

.w-\[103px\] { width: 103px; }

.w-\[120px\] { width: 120px; }

.w-\[184px\] { width: 184px; }

.w-\[18px\] { width: 18px; }

.w-\[2\.5px\] { width: 2.5px; }

.w-\[209px\] { width: 209px; }

.w-\[218px\] { width: 218px; }

.w-\[21px\] { width: 21px; }

.w-\[23px\] { width: 23px; }

.w-\[25vw\] { width: 25vw; }

.w-\[260px\] { width: 260px; }

.w-\[280px\] { width: 280px; }

.w-\[30px\] { width: 30px; }

.w-\[34px\] { width: 34px; }

.w-\[42px\] { width: 42px; }

.w-\[70px\] { width: 70px; }

.w-\[860px\] { width: 860px; }

.w-\[88px\] { width: 88px; }

.w-\[960px\] { width: 960px; }

.w-\[calc\(100\%-50px\)\] { width: calc(100% - 50px); }

.w-auto { width: auto; }

.w-fit { width: fit-content; }

.w-full { width: 100%; }

.w-min { width: min-content; }

.w-screen { width: 100vw; }

.min-w-0 { min-width: 0px; }

.min-w-\[100vw\] { min-width: 100vw; }

.min-w-\[175px\] { min-width: 175px; }

.min-w-\[180px\] { min-width: 180px; }

.min-w-\[220px\] { min-width: 220px; }

.min-w-\[256px\] { min-width: 256px; }

.min-w-\[280px\] { min-width: 280px; }

.min-w-\[300px\] { min-width: 300px; }

.min-w-\[32px\] { min-width: 32px; }

.min-w-\[50px\] { min-width: 50px; }

.min-w-\[8rem\] { min-width: 8rem; }

.min-w-full { min-width: 100%; }

.max-w-2xl { max-width: 42rem; }

.max-w-3xl { max-width: 48rem; }

.max-w-5xl { max-width: 64rem; }

.max-w-6xl { max-width: 72rem; }

.max-w-7xl { max-width: 80rem; }

.max-w-\[100vw\] { max-width: 100vw; }

.max-w-\[160px\] { max-width: 160px; }

.max-w-\[200px\] { max-width: 200px; }

.max-w-\[220px\] { max-width: 220px; }

.max-w-\[250px\] { max-width: 250px; }

.max-w-\[320px\] { max-width: 320px; }

.max-w-\[350px\] { max-width: 350px; }

.max-w-\[372px\] { max-width: 372px; }

.max-w-\[400px\] { max-width: 400px; }

.max-w-\[440px\] { max-width: 440px; }

.max-w-\[46rem\] { max-width: 46rem; }

.max-w-\[480px\] { max-width: 480px; }

.max-w-\[550px\] { max-width: 550px; }

.max-w-\[560px\] { max-width: 560px; }

.max-w-\[650px\] { max-width: 650px; }

.max-w-\[90vw\] { max-width: 90vw; }

.max-w-\[calc\(100vw-3rem\)\] { max-width: calc(100vw - 3rem); }

.max-w-full { max-width: 100%; }

.max-w-lg { max-width: 32rem; }

.max-w-md { max-width: 28rem; }

.max-w-sm { max-width: 24rem; }

.max-w-xl { max-width: 36rem; }

.max-w-xs { max-width: 20rem; }

.flex-1 { flex: 1 1 0%; }

.flex-auto { flex: 1 1 auto; }

.flex-none { flex: 0 0 auto; }

.flex-shrink { flex-shrink: 1; }

.flex-shrink-0 { flex-shrink: 0; }

.shrink { flex-shrink: 1; }

.shrink-0 { flex-shrink: 0; }

.flex-grow { flex-grow: 1; }

.flex-grow-0 { flex-grow: 0; }

.grow { flex-grow: 1; }

.basis-0 { flex-basis: 0px; }

.basis-\[25vw\] { flex-basis: 25vw; }

.basis-\[75vw\] { flex-basis: 75vw; }

.table-auto { table-layout: auto; }

.table-fixed { table-layout: fixed; }

.border-separate { border-collapse: separate; }

.border-spacing-0 { --tw-border-spacing-x: 0px; --tw-border-spacing-y: 0px; border-spacing: var(--tw-border-spacing-x) var(--tw-border-spacing-y); }

.origin-\[50\%_50\%\] { transform-origin: 50% 50%; }

.-translate-x-1\/2 { --tw-translate-x: -50%; }

.-translate-x-1\/2, .-translate-x-\[calc\(100\%\+4px\)\] { transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.-translate-x-\[calc\(100\%\+4px\)\] { --tw-translate-x: calc(-100% + -4px); }

.-translate-x-full { --tw-translate-x: -100%; }

.-translate-x-full, .-translate-y-1\/2 { transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.-translate-y-1\/2 { --tw-translate-y: -50%; }

.translate-x-0 { --tw-translate-x: 0px; }

.translate-x-0, .translate-x-0\.5 { transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.translate-x-0\.5 { --tw-translate-x: 0.125rem; }

.translate-x-1 { --tw-translate-x: 0.25rem; }

.translate-x-1, .translate-x-1\/2 { transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.translate-x-1\/2 { --tw-translate-x: 50%; }

.translate-x-full { --tw-translate-x: 100%; }

.translate-x-full, .translate-y-0 { transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.translate-y-0 { --tw-translate-y: 0px; }

.translate-y-1 { --tw-translate-y: 0.25rem; }

.translate-y-1, .translate-y-3 { transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.translate-y-3 { --tw-translate-y: 0.75rem; }

.translate-y-\[calc\(-50\%-1em\)\] { --tw-translate-y: calc(-50% - 1em); }

.translate-y-\[calc\(-50\%-1em\)\], .translate-y-\[calc\(-50\%-1em\+16px\)\] { transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.translate-y-\[calc\(-50\%-1em\+16px\)\] { --tw-translate-y: calc(-50% - 1em + 16px); }

.translate-y-\[calc\(-50\%-1em-16px\)\] { --tw-translate-y: calc(-50% - 1em - 16px); }

.translate-y-\[calc\(-50\%-1em-16px\)\], .translate-y-\[calc\(100\%-71px\)\] { transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.translate-y-\[calc\(100\%-71px\)\] { --tw-translate-y: calc(100% - 71px); }

.-rotate-180 { --tw-rotate: -180deg; }

.-rotate-180, .-rotate-45 { transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.-rotate-45 { --tw-rotate: -45deg; }

.-rotate-90 { --tw-rotate: -90deg; }

.-rotate-90, .rotate-180 { transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.rotate-180 { --tw-rotate: 180deg; }

.rotate-45 { --tw-rotate: 45deg; }

.rotate-45, .rotate-90 { transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.rotate-90 { --tw-rotate: 90deg; }

.scale-0 { --tw-scale-x: 0; --tw-scale-y: 0; }

.scale-0, .scale-x-75 { transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.scale-x-75 { --tw-scale-x: .75; }

.transform { transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

@-webkit-keyframes pulse { 
  50% { opacity: 0.5; }
}

@keyframes pulse { 
  50% { opacity: 0.5; }
}

.animate-pulse { animation: 2s cubic-bezier(0.4, 0, 0.6, 1) 0s infinite normal none running pulse; }

@-webkit-keyframes slideDownAndFade { 
  0% { opacity: 0; transform: translateY(-2px); }
  100% { opacity: 1; transform: translateY(0px); }
}

.animate-slideDownAndFade { animation: 0.4s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running slideDownAndFade; }

@-webkit-keyframes slideLeftAndFade { 
  0% { opacity: 0; transform: translateX(2px); }
  100% { opacity: 1; transform: translateX(0px); }
}

.animate-slideLeftAndFade { animation: 0.4s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running slideLeftAndFade; }

@-webkit-keyframes spin { 
  100% { transform: rotate(1turn); }
}

@keyframes spin { 
  100% { transform: rotate(1turn); }
}

.animate-spin { animation: 1s linear 0s infinite normal none running spin; }

.cursor-auto { cursor: auto; }

.cursor-default { cursor: default; }

.cursor-not-allowed { cursor: not-allowed; }

.cursor-pointer { cursor: pointer; }

.cursor-progress { cursor: progress; }

.select-none { user-select: none; }

.resize-none { resize: none; }

.resize { resize: both; }

.list-inside { list-style-position: inside; }

.list-decimal { list-style-type: decimal; }

.list-disc { list-style-type: disc; }

.list-none { list-style-type: none; }

.appearance-none { appearance: none; }

.break-inside-avoid { break-inside: avoid; }

.grid-flow-row { grid-auto-flow: row; }

.grid-cols-1 { grid-template-columns: repeat(1, minmax(0px, 1fr)); }

.grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }

.grid-cols-3 { grid-template-columns: repeat(3, minmax(0px, 1fr)); }

.grid-cols-5 { grid-template-columns: repeat(5, minmax(0px, 1fr)); }

.grid-cols-\[10px_1fr_10px\] { grid-template-columns: 10px 1fr 10px; }

.grid-cols-\[auto_max-content\] { grid-template-columns: auto max-content; }

.grid-cols-\[repeat\(auto-fit\,minmax\(250px\,1fr\)\)\] { grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); }

.grid-rows-\[minmax\(10px\,_1fr\)_auto_minmax\(10px\,_1fr\)\] { grid-template-rows: minmax(10px, 1fr) auto minmax(10px, 1fr); }

.flex-row { flex-direction: row; }

.flex-col { flex-direction: column; }

.flex-col-reverse { flex-direction: column-reverse; }

.flex-wrap { flex-wrap: wrap; }

.flex-wrap-reverse { flex-wrap: wrap-reverse; }

.place-items-center { place-items: center; }

.items-start { align-items: flex-start; }

.items-end { align-items: flex-end; }

.items-center { align-items: center; }

.items-stretch { align-items: stretch; }

.justify-start { justify-content: flex-start; }

.justify-end { justify-content: flex-end; }

.justify-center { justify-content: center; }

.justify-between { justify-content: space-between; }

.justify-around { justify-content: space-around; }

.justify-stretch { justify-content: stretch; }

.justify-items-center { justify-items: center; }

.gap-0 { gap: 0px; }

.gap-1 { gap: 0.25rem; }

.gap-1\.5 { gap: 0.375rem; }

.gap-2 { gap: 0.5rem; }

.gap-2\.5 { gap: 0.625rem; }

.gap-3 { gap: 0.75rem; }

.gap-3\.5 { gap: 0.875rem; }

.gap-4 { gap: 1rem; }

.gap-5 { gap: 1.25rem; }

.gap-6 { gap: 1.5rem; }

.gap-7 { gap: 1.75rem; }

.gap-x-1 { column-gap: 0.25rem; }

.gap-x-1\.5 { column-gap: 0.375rem; }

.gap-x-3 { column-gap: 0.75rem; }

.gap-x-4 { column-gap: 1rem; }

.gap-x-6 { column-gap: 1.5rem; }

.gap-x-9 { column-gap: 2.25rem; }

.gap-y-2 { row-gap: 0.5rem; }

.gap-y-4 { row-gap: 1rem; }

.space-x-1 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; margin-left: calc(.25rem*(1 - var(--tw-space-x-reverse))); margin-right: calc(.25rem*var(--tw-space-x-reverse)); }

.space-x-1\.5 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; margin-left: calc(.375rem*(1 - var(--tw-space-x-reverse))); margin-right: calc(.375rem*var(--tw-space-x-reverse)); }

.space-x-2 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; margin-left: calc(.5rem*(1 - var(--tw-space-x-reverse))); margin-right: calc(.5rem*var(--tw-space-x-reverse)); }

.space-x-4 > :not([hidden]) ~ :not([hidden]) { --tw-space-x-reverse: 0; margin-left: calc(1rem*(1 - var(--tw-space-x-reverse))); margin-right: calc(1rem*var(--tw-space-x-reverse)); }

.space-y-0 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; margin-bottom: calc(0px*var(--tw-space-y-reverse)); margin-top: calc(0px*(1 - var(--tw-space-y-reverse))); }

.space-y-0\.5 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; margin-bottom: calc(.125rem*var(--tw-space-y-reverse)); margin-top: calc(.125rem*(1 - var(--tw-space-y-reverse))); }

.space-y-1 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; margin-bottom: calc(.25rem*var(--tw-space-y-reverse)); margin-top: calc(.25rem*(1 - var(--tw-space-y-reverse))); }

.space-y-1\.5 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; margin-bottom: calc(.375rem*var(--tw-space-y-reverse)); margin-top: calc(.375rem*(1 - var(--tw-space-y-reverse))); }

.space-y-2 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; margin-bottom: calc(.5rem*var(--tw-space-y-reverse)); margin-top: calc(.5rem*(1 - var(--tw-space-y-reverse))); }

.space-y-3 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; margin-bottom: calc(.75rem*var(--tw-space-y-reverse)); margin-top: calc(.75rem*(1 - var(--tw-space-y-reverse))); }

.space-y-4 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; margin-bottom: calc(1rem*var(--tw-space-y-reverse)); margin-top: calc(1rem*(1 - var(--tw-space-y-reverse))); }

.space-y-6 > :not([hidden]) ~ :not([hidden]) { --tw-space-y-reverse: 0; margin-bottom: calc(1.5rem*var(--tw-space-y-reverse)); margin-top: calc(1.5rem*(1 - var(--tw-space-y-reverse))); }

.divide-x > :not([hidden]) ~ :not([hidden]) { --tw-divide-x-reverse: 0; border-left-width: calc(1px*(1 - var(--tw-divide-x-reverse))); border-right-width: calc(1px*var(--tw-divide-x-reverse)); }

.divide-y > :not([hidden]) ~ :not([hidden]) { --tw-divide-y-reverse: 0; border-bottom-width: calc(1px*var(--tw-divide-y-reverse)); border-top-width: calc(1px*(1 - var(--tw-divide-y-reverse))); }

.divide-gray-200 > :not([hidden]) ~ :not([hidden]) { --tw-divide-opacity: 1; border-color: rgba(217,217,227,var(--tw-divide-opacity)); }

.divide-white\/10 > :not([hidden]) ~ :not([hidden]) { border-color: rgba(255, 255, 255, 0.1); }

.self-end { align-self: flex-end; }

.self-center { align-self: center; }

.self-stretch { align-self: stretch; }

.justify-self-start { justify-self: start; }

.overflow-auto { overflow: auto; }

.overflow-hidden { overflow: hidden; }

.overflow-scroll { overflow: scroll; }

.overflow-x-auto { overflow-x: auto; }

.overflow-y-auto { overflow-y: auto; }

.overflow-x-hidden { overflow-x: hidden; }

.overflow-y-hidden { overflow-y: hidden; }

.overflow-y-scroll { overflow-y: scroll; }

.truncate { overflow: hidden; white-space: nowrap; }

.overflow-ellipsis, .text-ellipsis, .truncate { text-overflow: ellipsis; }

.text-clip { text-overflow: clip; }

.whitespace-nowrap { white-space: nowrap; }

.\!whitespace-pre { white-space: pre !important; }

.whitespace-pre-line { white-space: pre-line; }

.\!whitespace-pre-wrap { white-space: pre-wrap !important; }

.whitespace-pre-wrap { white-space: pre-wrap; }

.break-words { overflow-wrap: break-word; }

.break-all { word-break: break-all; }

.\!rounded-2xl { border-radius: 1rem !important; }

.\!rounded-lg { border-radius: 0.5rem !important; }

.rounded { border-radius: 0.25rem; }

.rounded-2xl { border-radius: 1rem; }

.rounded-\[10px\] { border-radius: 10px; }

.rounded-\[4px\] { border-radius: 4px; }

.rounded-\[5px\] { border-radius: 5px; }

.rounded-full { border-radius: 9999px; }

.rounded-lg { border-radius: 0.5rem; }

.rounded-md { border-radius: 0.375rem; }

.rounded-none { border-radius: 0px; }

.rounded-sm { border-radius: 0.125rem; }

.rounded-xl { border-radius: 0.75rem; }

.rounded-b-lg { border-bottom-left-radius: 0.5rem; border-bottom-right-radius: 0.5rem; }

.rounded-l-md { border-bottom-left-radius: 0.375rem; border-top-left-radius: 0.375rem; }

.rounded-r-md { border-bottom-right-radius: 0.375rem; border-top-right-radius: 0.375rem; }

.rounded-t-\[30px\] { border-top-left-radius: 30px; border-top-right-radius: 30px; }

.rounded-t-md { border-top-left-radius: 0.375rem; border-top-right-radius: 0.375rem; }

.rounded-t-xl { border-top-left-radius: 0.75rem; border-top-right-radius: 0.75rem; }

.rounded-br-sm { border-bottom-right-radius: 0.125rem; }

.border { border-width: 1px; }

.border-0 { border-width: 0px; }

.border-2 { border-width: 2px; }

.border-\[0\.5px\] { border-width: 0.5px; }

.border-b { border-bottom-width: 1px; }

.border-b-\[0\.5px\] { border-bottom-width: 0.5px; }

.border-l { border-left-width: 1px; }

.border-l-4 { border-left-width: 4px; }

.border-l-8 { border-left-width: 8px; }

.border-r { border-right-width: 1px; }

.border-r-0 { border-right-width: 0px; }

.border-r-8 { border-right-width: 8px; }

.border-t { border-top-width: 1px; }

.border-t-8 { border-top-width: 8px; }

.border-none { border-style: none; }

.border-\[rgba\(0\,0\,0\,\.15\)\] { border-color: rgba(0, 0, 0, 0.15); }

.border-black\/10 { border-color: rgba(0, 0, 0, 0.1); }

.border-black\/20 { border-color: rgba(0, 0, 0, 0.2); }

.border-black\/30 { border-color: rgba(0, 0, 0, 0.3); }

.border-black\/5 { border-color: rgba(0, 0, 0, 0.05); }

.border-brand-green { --tw-border-opacity: 1; border-color: rgba(25,195,125,var(--tw-border-opacity)); }

.border-gizmo-gray-950 { --tw-border-opacity: 1; border-color: rgba(15,15,15,var(--tw-border-opacity)); }

.border-gray-100 { --tw-border-opacity: 1; border-color: rgba(236,236,241,var(--tw-border-opacity)); }

.border-gray-200 { --tw-border-opacity: 1; border-color: rgba(217,217,227,var(--tw-border-opacity)); }

.border-gray-300 { --tw-border-opacity: 1; border-color: rgba(197,197,210,var(--tw-border-opacity)); }

.border-gray-400 { --tw-border-opacity: 1; border-color: rgba(172,172,190,var(--tw-border-opacity)); }

.border-gray-50 { --tw-border-opacity: 1; border-color: rgba(247,247,248,var(--tw-border-opacity)); }

.border-gray-500 { --tw-border-opacity: 1; border-color: rgba(142,142,160,var(--tw-border-opacity)); }

.border-gray-700 { --tw-border-opacity: 1; border-color: rgba(64,65,79,var(--tw-border-opacity)); }

.border-gray-800 { --tw-border-opacity: 1; border-color: rgba(52,53,65,var(--tw-border-opacity)); }

.border-green-500 { --tw-border-opacity: 1; border-color: rgba(25,195,125,var(--tw-border-opacity)); }

.border-orange-400 { --tw-border-opacity: 1; border-color: rgba(255,128,82,var(--tw-border-opacity)); }

.border-orange-500 { --tw-border-opacity: 1; border-color: rgba(224,108,43,var(--tw-border-opacity)); }

.border-red-500 { --tw-border-opacity: 1; border-color: rgba(239,68,68,var(--tw-border-opacity)); }

.border-token-border-light { border-color: var(--border-light); }

.border-token-border-medium { border-color: var(--border-medium); }

.border-transparent { border-color: transparent; }

.border-white { --tw-border-opacity: 1; border-color: rgba(255,255,255,var(--tw-border-opacity)); }

.border-white\/20 { border-color: rgba(255, 255, 255, 0.2); }

.border-l-transparent { border-left-color: transparent; }

.border-r-transparent { border-right-color: transparent; }

.border-t-\[\#0077FF\] { --tw-border-opacity: 1; border-top-color: rgba(0,119,255,var(--tw-border-opacity)); }

.border-opacity-75 { --tw-border-opacity: 0.75; }

.\!bg-brand-purple { --tw-bg-opacity: 1 !important; background-color: rgba(171,104,255,var(--tw-bg-opacity)) !important; }

.\!bg-gray-200 { --tw-bg-opacity: 1 !important; background-color: rgba(217,217,227,var(--tw-bg-opacity)) !important; }

.\!bg-gray-700 { --tw-bg-opacity: 1 !important; background-color: rgba(64,65,79,var(--tw-bg-opacity)) !important; }

.\!bg-transparent { background-color: transparent !important; }

.bg-\[\#0077FF\] { --tw-bg-opacity: 1; background-color: rgba(0,119,255,var(--tw-bg-opacity)); }

.bg-\[\#10A37F\] { --tw-bg-opacity: 1; background-color: rgba(16,163,127,var(--tw-bg-opacity)); }

.bg-\[\#3C46FF\] { --tw-bg-opacity: 1; background-color: rgba(60,70,255,var(--tw-bg-opacity)); }

.bg-\[\#4046EC\] { --tw-bg-opacity: 1; background-color: rgba(64,70,236,var(--tw-bg-opacity)); }

.bg-\[\#B161FD\] { --tw-bg-opacity: 1; background-color: rgba(177,97,253,var(--tw-bg-opacity)); }

.bg-\[\#F8CA27\] { --tw-bg-opacity: 1; background-color: rgba(248,202,39,var(--tw-bg-opacity)); }

.bg-\[\#FF5588\] { --tw-bg-opacity: 1; background-color: rgba(255,85,136,var(--tw-bg-opacity)); }

.bg-\[\#FF6E3C\] { --tw-bg-opacity: 1; background-color: rgba(255,110,60,var(--tw-bg-opacity)); }

.bg-\[rgba\(30\,203\,239\,0\.07\)\] { background-color: rgba(30, 203, 239, 0.07); }

.bg-black { --tw-bg-opacity: 1; background-color: rgba(0,0,0,var(--tw-bg-opacity)); }

.bg-black\/20 { background-color: rgba(0, 0, 0, 0.2); }

.bg-black\/5 { background-color: rgba(0, 0, 0, 0.05); }

.bg-black\/90 { background-color: rgba(0, 0, 0, 0.9); }

.bg-black\/\[\.04\] { background-color: rgba(0, 0, 0, 0.04); }

.bg-black\/\[\.08\] { background-color: rgba(0, 0, 0, 0.08); }

.bg-black\/\[\.12\] { background-color: rgba(0, 0, 0, 0.12); }

.bg-blue-200 { --tw-bg-opacity: 1; background-color: rgba(191,219,254,var(--tw-bg-opacity)); }

.bg-blue-300 { --tw-bg-opacity: 1; background-color: rgba(121,137,255,var(--tw-bg-opacity)); }

.bg-blue-400 { --tw-bg-opacity: 1; background-color: rgba(58,136,255,var(--tw-bg-opacity)); }

.bg-blue-500 { --tw-bg-opacity: 1; background-color: rgba(69,89,164,var(--tw-bg-opacity)); }

.bg-blue-950 { --tw-bg-opacity: 1; background-color: rgba(23,37,84,var(--tw-bg-opacity)); }

.bg-brand-green\/20 { background-color: rgba(25, 195, 125, 0.2); }

.bg-brand-green\/40 { background-color: rgba(25, 195, 125, 0.4); }

.bg-brand-purple { --tw-bg-opacity: 1; background-color: rgba(171,104,255,var(--tw-bg-opacity)); }

.bg-gray-100 { --tw-bg-opacity: 1; background-color: rgba(236,236,241,var(--tw-bg-opacity)); }

.bg-gray-200 { --tw-bg-opacity: 1; background-color: rgba(217,217,227,var(--tw-bg-opacity)); }

.bg-gray-300 { --tw-bg-opacity: 1; background-color: rgba(197,197,210,var(--tw-bg-opacity)); }

.bg-gray-300\/70 { background-color: rgba(197, 197, 210, 0.7); }

.bg-gray-400 { --tw-bg-opacity: 1; background-color: rgba(172,172,190,var(--tw-bg-opacity)); }

.bg-gray-50 { --tw-bg-opacity: 1; background-color: rgba(247,247,248,var(--tw-bg-opacity)); }

.bg-gray-500 { --tw-bg-opacity: 1; background-color: rgba(142,142,160,var(--tw-bg-opacity)); }

.bg-gray-600 { --tw-bg-opacity: 1; background-color: rgba(86,88,105,var(--tw-bg-opacity)); }

.bg-gray-700 { --tw-bg-opacity: 1; background-color: rgba(64,65,79,var(--tw-bg-opacity)); }

.bg-gray-800 { --tw-bg-opacity: 1; background-color: rgba(52,53,65,var(--tw-bg-opacity)); }

.bg-gray-900 { --tw-bg-opacity: 1; background-color: rgba(32,33,35,var(--tw-bg-opacity)); }

.bg-green-100 { --tw-bg-opacity: 1; background-color: rgba(210,244,211,var(--tw-bg-opacity)); }

.bg-green-200 { --tw-bg-opacity: 1; background-color: rgba(185,238,188,var(--tw-bg-opacity)); }

.bg-green-500 { --tw-bg-opacity: 1; background-color: rgba(25,195,125,var(--tw-bg-opacity)); }

.bg-green-500\/10 { background-color: rgba(25, 195, 125, 0.1); }

.bg-green-600 { --tw-bg-opacity: 1; background-color: rgba(16,163,127,var(--tw-bg-opacity)); }

.bg-orange-500 { --tw-bg-opacity: 1; background-color: rgba(224,108,43,var(--tw-bg-opacity)); }

.bg-orange-500\/10 { background-color: rgba(224, 108, 43, 0.1); }

.bg-red-100 { --tw-bg-opacity: 1; background-color: rgba(254,226,226,var(--tw-bg-opacity)); }

.bg-red-200 { --tw-bg-opacity: 1; background-color: rgba(254,202,202,var(--tw-bg-opacity)); }

.bg-red-500 { --tw-bg-opacity: 1; background-color: rgba(239,68,68,var(--tw-bg-opacity)); }

.bg-red-500\/10 { background-color: rgba(239, 68, 68, 0.1); }

.bg-red-600 { --tw-bg-opacity: 1; background-color: rgba(220,38,38,var(--tw-bg-opacity)); }

.bg-token-surface-primary { background-color: var(--surface-primary); }

.bg-token-surface-secondary { background-color: var(--surface-secondary); }

.bg-token-surface-tertiary { background-color: var(--surface-tertiary); }

.bg-transparent { background-color: transparent; }

.bg-white { --tw-bg-opacity: 1; background-color: rgba(255,255,255,var(--tw-bg-opacity)); }

.bg-white\/20 { background-color: rgba(255, 255, 255, 0.2); }

.bg-white\/25 { background-color: rgba(255, 255, 255, 0.25); }

.bg-white\/95 { background-color: rgba(255, 255, 255, 0.95); }

.bg-yellow-100 { --tw-bg-opacity: 1; background-color: rgba(254,249,195,var(--tw-bg-opacity)); }

.bg-yellow-200 { --tw-bg-opacity: 1; background-color: rgba(250,230,158,var(--tw-bg-opacity)); }

.bg-yellow-300 { --tw-bg-opacity: 1; background-color: rgba(255,243,201,var(--tw-bg-opacity)); }

.bg-yellow-400 { --tw-bg-opacity: 1; background-color: rgba(255,198,87,var(--tw-bg-opacity)); }

.bg-opacity-75 { --tw-bg-opacity: 0.75; }

.bg-opacity-95 { --tw-bg-opacity: 0.95; }

.bg-gradient-to-b { background-image: linear-gradient(to bottom,var(--tw-gradient-stops)); }

.bg-gradient-to-l { background-image: linear-gradient(to left,var(--tw-gradient-stops)); }

.bg-gradient-to-t { background-image: linear-gradient(to top,var(--tw-gradient-stops)); }

.from-gray-100 { --tw-gradient-from: #ececf1 var(--tw-gradient-from-position); --tw-gradient-to: rgba(236,236,241,0) var(--tw-gradient-to-position); --tw-gradient-stops: var(--tw-gradient-from),var(--tw-gradient-to); }

.from-gray-50 { --tw-gradient-from: #f7f7f8 var(--tw-gradient-from-position); --tw-gradient-to: hsla(240,7%,97%,0) var(--tw-gradient-to-position); --tw-gradient-stops: var(--tw-gradient-from),var(--tw-gradient-to); }

.from-gray-900\/0 { --tw-gradient-from: rgba(32,33,35,0) var(--tw-gradient-from-position); --tw-gradient-to: rgba(32,33,35,0) var(--tw-gradient-to-position); --tw-gradient-stops: var(--tw-gradient-from),var(--tw-gradient-to); }

.from-token-surface-tertiary { --tw-gradient-from: var(--surface-tertiary) var(--tw-gradient-from-position); --tw-gradient-to: hsla(0,0%,100%,0) var(--tw-gradient-to-position); --tw-gradient-stops: var(--tw-gradient-from),var(--tw-gradient-to); }

.from-transparent { --tw-gradient-from: transparent var(--tw-gradient-from-position); --tw-gradient-to: transparent var(--tw-gradient-to-position); --tw-gradient-stops: var(--tw-gradient-from),var(--tw-gradient-to); }

.from-60\%, .from-\[60\%\] { --tw-gradient-from-position: 60%; }

.to-gray-100 { --tw-gradient-to: #ececf1 var(--tw-gradient-to-position); }

.to-gray-900 { --tw-gradient-to: #202123 var(--tw-gradient-to-position); }

.to-transparent { --tw-gradient-to: transparent var(--tw-gradient-to-position); }

.bg-contain { background-size: contain; }

.bg-cover { background-size: cover; }

.bg-center { background-position: 50% center; }

.bg-no-repeat { background-repeat: no-repeat; }

.fill-gray-800 { fill: rgb(52, 53, 65); }

.fill-yellow-500 { fill: rgb(234, 179, 8); }

.stroke-black { stroke: rgb(0, 0, 0); }

.stroke-brand-purple\/25 { stroke: rgba(171, 104, 255, 0.25); }

.stroke-gray-400 { stroke: rgb(172, 172, 190); }

.stroke-white { stroke: rgb(255, 255, 255); }

.stroke-0 { stroke-width: 0; }

.stroke-1 { stroke-width: 1; }

.stroke-2 { stroke-width: 2; }

.stroke-\[2\.5\] { stroke-width: 2.5; }

.stroke-\[4\] { stroke-width: 4; }

.object-contain { object-fit: contain; }

.object-cover { object-fit: cover; }

.p-0 { padding: 0px; }

.p-0\.5 { padding: 0.125rem; }

.p-1 { padding: 0.25rem; }

.p-1\.5 { padding: 0.375rem; }

.p-2 { padding: 0.5rem; }

.p-3 { padding: 0.75rem; }

.p-4 { padding: 1rem; }

.p-5 { padding: 1.25rem; }

.p-6 { padding: 1.5rem; }

.p-7 { padding: 1.75rem; }

.p-\[5px\] { padding: 5px; }

.\!px-1 { padding-left: 0.25rem !important; padding-right: 0.25rem !important; }

.\!px-1\.5 { padding-left: 0.375rem !important; padding-right: 0.375rem !important; }

.\!py-0 { padding-bottom: 0px !important; padding-top: 0px !important; }

.\!py-0\.5 { padding-bottom: 0.125rem !important; padding-top: 0.125rem !important; }

.px-0 { padding-left: 0px; padding-right: 0px; }

.px-0\.5 { padding-left: 0.125rem; padding-right: 0.125rem; }

.px-1 { padding-left: 0.25rem; padding-right: 0.25rem; }

.px-1\.5 { padding-left: 0.375rem; padding-right: 0.375rem; }

.px-10 { padding-left: 2.5rem; padding-right: 2.5rem; }

.px-2 { padding-left: 0.5rem; padding-right: 0.5rem; }

.px-2\.5 { padding-left: 0.625rem; padding-right: 0.625rem; }

.px-3 { padding-left: 0.75rem; padding-right: 0.75rem; }

.px-4 { padding-left: 1rem; padding-right: 1rem; }

.px-5 { padding-left: 1.25rem; padding-right: 1.25rem; }

.px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }

.px-8 { padding-left: 2rem; padding-right: 2rem; }

.py-0 { padding-bottom: 0px; padding-top: 0px; }

.py-0\.5 { padding-bottom: 0.125rem; padding-top: 0.125rem; }

.py-1 { padding-bottom: 0.25rem; padding-top: 0.25rem; }

.py-1\.5 { padding-bottom: 0.375rem; padding-top: 0.375rem; }

.py-12 { padding-bottom: 3rem; padding-top: 3rem; }

.py-2 { padding-bottom: 0.5rem; padding-top: 0.5rem; }

.py-20 { padding-bottom: 5rem; padding-top: 5rem; }

.py-3 { padding-bottom: 0.75rem; padding-top: 0.75rem; }

.py-3\.5 { padding-bottom: 0.875rem; padding-top: 0.875rem; }

.py-4 { padding-bottom: 1rem; padding-top: 1rem; }

.py-6 { padding-bottom: 1.5rem; padding-top: 1.5rem; }

.py-8 { padding-bottom: 2rem; padding-top: 2rem; }

.py-\[10px\] { padding-bottom: 10px; padding-top: 10px; }

.\!pr-2 { padding-right: 0.5rem !important; }

.\!pt-0 { padding-top: 0px !important; }

.pb-0 { padding-bottom: 0px; }

.pb-0\.5 { padding-bottom: 0.125rem; }

.pb-1 { padding-bottom: 0.25rem; }

.pb-1\.5 { padding-bottom: 0.375rem; }

.pb-10 { padding-bottom: 2.5rem; }

.pb-12 { padding-bottom: 3rem; }

.pb-16 { padding-bottom: 4rem; }

.pb-2 { padding-bottom: 0.5rem; }

.pb-3 { padding-bottom: 0.75rem; }

.pb-4 { padding-bottom: 1rem; }

.pb-5 { padding-bottom: 1.25rem; }

.pb-64 { padding-bottom: 16rem; }

.pb-8 { padding-bottom: 2rem; }

.pl-0 { padding-left: 0px; }

.pl-1 { padding-left: 0.25rem; }

.pl-10 { padding-left: 2.5rem; }

.pl-12 { padding-left: 3rem; }

.pl-2 { padding-left: 0.5rem; }

.pl-3 { padding-left: 0.75rem; }

.pl-4 { padding-left: 1rem; }

.pl-5 { padding-left: 1.25rem; }

.pl-6 { padding-left: 1.5rem; }

.pl-8 { padding-left: 2rem; }

.pr-1 { padding-right: 0.25rem; }

.pr-1\.5 { padding-right: 0.375rem; }

.pr-10 { padding-right: 2.5rem; }

.pr-11 { padding-right: 2.75rem; }

.pr-12 { padding-right: 3rem; }

.pr-14 { padding-right: 3.5rem; }

.pr-16 { padding-right: 4rem; }

.pr-2 { padding-right: 0.5rem; }

.pr-3 { padding-right: 0.75rem; }

.pr-4 { padding-right: 1rem; }

.pr-5 { padding-right: 1.25rem; }

.pr-6 { padding-right: 1.5rem; }

.pr-7 { padding-right: 1.75rem; }

.pr-9 { padding-right: 2.25rem; }

.pt-0 { padding-top: 0px; }

.pt-0\.5 { padding-top: 0.125rem; }

.pt-1 { padding-top: 0.25rem; }

.pt-2 { padding-top: 0.5rem; }

.pt-20 { padding-top: 5rem; }

.pt-3 { padding-top: 0.75rem; }

.pt-4 { padding-top: 1rem; }

.pt-5 { padding-top: 1.25rem; }

.pt-8 { padding-top: 2rem; }

.pt-\[36vh\] { padding-top: 36vh; }

.pt-\[67\%\] { padding-top: 67%; }

.text-left { text-align: left; }

.text-center { text-align: center; }

.text-right { text-align: right; }

.align-top { vertical-align: top; }

.align-middle { vertical-align: middle; }

.font-mono { font-family: "SÃ¶hne Mono", Monaco, "Andale Mono", "Ubuntu Mono", monospace; }

.font-sans { font-family: SÃ¶hne, ui-sans-serif, system-ui, -apple-system, "Segoe UI", Roboto, Ubuntu, Cantarell, "Noto Sans", sans-serif, "Helvetica Neue", Arial, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; }

.text-2xl { font-size: 1.5rem; line-height: 2rem; }

.text-3xl { font-size: 1.875rem; line-height: 2.25rem; }

.text-4xl { font-size: 2.25rem; line-height: 2.5rem; }

.text-\[0\.8rem\] { font-size: 0.8rem; }

.text-\[10px\] { font-size: 10px; }

.text-\[13px\] { font-size: 13px; }

.text-\[20px\] { font-size: 20px; }

.text-\[28px\] { font-size: 28px; }

.text-\[32px\] { font-size: 32px; }

.text-base { font-size: 1rem; line-height: 1.5rem; }

.text-lg { font-size: 1.125rem; line-height: 1.75rem; }

.text-sm { font-size: 0.875rem; line-height: 1.25rem; }

.text-xl { font-size: 1.25rem; line-height: 1.75rem; }

.text-xs { font-size: 0.75rem; line-height: 1rem; }

.font-bold { font-weight: 700; }

.font-light { font-weight: 300; }

.font-medium { font-weight: 500; }

.font-normal { font-weight: 400; }

.font-semibold { font-weight: 600; }

.uppercase { text-transform: uppercase; }

.capitalize { text-transform: capitalize; }

.normal-case { text-transform: none; }

.italic { font-style: italic; }

.tabular-nums { --tw-numeric-spacing: tabular-nums; font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction); }

.leading-3 { line-height: 0.75rem; }

.leading-5 { line-height: 1.25rem; }

.leading-6 { line-height: 1.5rem; }

.leading-\[1\.2\] { line-height: 1.2; }

.leading-\[18px\] { line-height: 18px; }

.leading-none { line-height: 1; }

.leading-normal { line-height: 1.5; }

.leading-tight { line-height: 1.25; }

.tracking-tight { letter-spacing: -0.025em; }

.tracking-widest { letter-spacing: 0.1em; }

.\!text-gray-500 { --tw-text-opacity: 1 !important; color: rgba(142,142,160,var(--tw-text-opacity)) !important; }

.text-\[\#756B5C\] { --tw-text-opacity: 1; color: rgba(117,107,92,var(--tw-text-opacity)); }

.text-\[\#FE7600\] { --tw-text-opacity: 1; color: rgba(254,118,0,var(--tw-text-opacity)); }

.text-\[\#cdcdcd\] { --tw-text-opacity: 1; color: rgba(205,205,205,var(--tw-text-opacity)); }

.text-\[\#fff\] { --tw-text-opacity: 1; color: rgba(255,255,255,var(--tw-text-opacity)); }

.text-black { --tw-text-opacity: 1; color: rgba(0,0,0,var(--tw-text-opacity)); }

.text-black\/50 { color: rgba(0, 0, 0, 0.5); }

.text-black\/60 { color: rgba(0, 0, 0, 0.6); }

.text-black\/70 { color: rgba(0, 0, 0, 0.7); }

.text-blue-400 { --tw-text-opacity: 1; color: rgba(58,136,255,var(--tw-text-opacity)); }

.text-blue-500 { --tw-text-opacity: 1; color: rgba(69,89,164,var(--tw-text-opacity)); }

.text-blue-600 { --tw-text-opacity: 1; color: rgba(37,99,235,var(--tw-text-opacity)); }

.text-blue-700 { --tw-text-opacity: 1; color: rgba(29,78,216,var(--tw-text-opacity)); }

.text-brand-green { --tw-text-opacity: 1; color: rgba(25,195,125,var(--tw-text-opacity)); }

.text-brand-purple { --tw-text-opacity: 1; color: rgba(171,104,255,var(--tw-text-opacity)); }

.text-gizmo-gray-950 { --tw-text-opacity: 1; color: rgba(15,15,15,var(--tw-text-opacity)); }

.text-gray-100 { --tw-text-opacity: 1; color: rgba(236,236,241,var(--tw-text-opacity)); }

.text-gray-200 { --tw-text-opacity: 1; color: rgba(217,217,227,var(--tw-text-opacity)); }

.text-gray-300 { --tw-text-opacity: 1; color: rgba(197,197,210,var(--tw-text-opacity)); }

.text-gray-400 { --tw-text-opacity: 1; color: rgba(172,172,190,var(--tw-text-opacity)); }

.text-gray-50 { --tw-text-opacity: 1; color: rgba(247,247,248,var(--tw-text-opacity)); }

.text-gray-500 { --tw-text-opacity: 1; color: rgba(142,142,160,var(--tw-text-opacity)); }

.text-gray-600 { --tw-text-opacity: 1; color: rgba(86,88,105,var(--tw-text-opacity)); }

.text-gray-600\/50 { color: rgba(86, 88, 105, 0.5); }

.text-gray-700 { --tw-text-opacity: 1; color: rgba(64,65,79,var(--tw-text-opacity)); }

.text-gray-800 { --tw-text-opacity: 1; color: rgba(52,53,65,var(--tw-text-opacity)); }

.text-gray-900 { --tw-text-opacity: 1; color: rgba(32,33,35,var(--tw-text-opacity)); }

.text-green-500 { --tw-text-opacity: 1; color: rgba(25,195,125,var(--tw-text-opacity)); }

.text-green-600 { --tw-text-opacity: 1; color: rgba(16,163,127,var(--tw-text-opacity)); }

.text-green-700 { --tw-text-opacity: 1; color: rgba(26,127,100,var(--tw-text-opacity)); }

.text-orange-300 { --tw-text-opacity: 1; color: rgba(255,160,69,var(--tw-text-opacity)); }

.text-orange-400 { --tw-text-opacity: 1; color: rgba(255,128,82,var(--tw-text-opacity)); }

.text-orange-500 { --tw-text-opacity: 1; color: rgba(224,108,43,var(--tw-text-opacity)); }

.text-red-400 { --tw-text-opacity: 1; color: rgba(248,113,113,var(--tw-text-opacity)); }

.text-red-500 { --tw-text-opacity: 1; color: rgba(239,68,68,var(--tw-text-opacity)); }

.text-red-600 { --tw-text-opacity: 1; color: rgba(220,38,38,var(--tw-text-opacity)); }

.text-red-700 { --tw-text-opacity: 1; color: rgba(185,28,28,var(--tw-text-opacity)); }

.text-red-800 { --tw-text-opacity: 1; color: rgba(153,27,27,var(--tw-text-opacity)); }

.text-token-text-primary { color: var(--text-primary); }

.text-token-text-secondary { color: var(--text-secondary); }

.text-token-text-tertiary { color: var(--text-tertiary); }

.text-white { --tw-text-opacity: 1; color: rgba(255,255,255,var(--tw-text-opacity)); }

.text-white\/25 { color: rgba(255, 255, 255, 0.25); }

.text-white\/50 { color: rgba(255, 255, 255, 0.5); }

.text-white\/80 { color: rgba(255, 255, 255, 0.8); }

.text-yellow-500 { --tw-text-opacity: 1; color: rgba(234,179,8,var(--tw-text-opacity)); }

.text-yellow-700 { --tw-text-opacity: 1; color: rgba(161,98,7,var(--tw-text-opacity)); }

.text-yellow-800 { --tw-text-opacity: 1; color: rgba(133,77,14,var(--tw-text-opacity)); }

.text-yellow-900 { --tw-text-opacity: 1; color: rgba(146,114,1,var(--tw-text-opacity)); }

.underline { text-decoration-line: underline; }

.line-through { text-decoration-line: line-through; }

.\!no-underline { text-decoration-line: none !important; }

.antialiased { -webkit-font-smoothing: antialiased; }

.placeholder-gray-500::-webkit-input-placeholder { --tw-placeholder-opacity: 1; color: rgba(142,142,160,var(--tw-placeholder-opacity)); }

.placeholder-gray-500::placeholder { --tw-placeholder-opacity: 1; color: rgba(142,142,160,var(--tw-placeholder-opacity)); }

.opacity-0 { opacity: 0; }

.opacity-100 { opacity: 1; }

.opacity-20 { opacity: 0.2; }

.opacity-25 { opacity: 0.25; }

.opacity-50 { opacity: 0.5; }

.opacity-70 { opacity: 0.7; }

.opacity-75 { opacity: 0.75; }

.opacity-80 { opacity: 0.8; }

.\!shadow-none { --tw-shadow: 0 0 transparent !important; --tw-shadow-colored: 0 0 transparent !important; box-shadow: var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow) !important; }

.shadow { --tw-shadow: 0 1px 3px 0 rgba(0,0,0,.1),0 1px 2px -1px rgba(0,0,0,.1); --tw-shadow-colored: 0 1px 3px 0 var(--tw-shadow-color),0 1px 2px -1px var(--tw-shadow-color); }

.shadow, .shadow-\[0_1px_1px_0_rgba\(0\,0\,0\,0\.08\)\] { box-shadow: var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.shadow-\[0_1px_1px_0_rgba\(0\,0\,0\,0\.08\)\] { --tw-shadow: 0 1px 1px 0 rgba(0,0,0,.08); --tw-shadow-colored: 0 1px 1px 0 var(--tw-shadow-color); }

.shadow-\[0_1px_2px_rgba\(0\,0\,0\,0\.45\)\] { --tw-shadow: 0 1px 2px rgba(0,0,0,.45); --tw-shadow-colored: 0 1px 2px var(--tw-shadow-color); }

.shadow-\[0_1px_2px_rgba\(0\,0\,0\,0\.45\)\], .shadow-\[0_1px_7px_0_rgba\(0\,0\,0\,0\.03\)\] { box-shadow: var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.shadow-\[0_1px_7px_0_rgba\(0\,0\,0\,0\.03\)\] { --tw-shadow: 0 1px 7px 0 rgba(0,0,0,.03); --tw-shadow-colored: 0 1px 7px 0 var(--tw-shadow-color); }

.shadow-\[0_1px_7px_0px_rgba\(0\,0\,0\,0\.06\)\] { --tw-shadow: 0 1px 7px 0px rgba(0,0,0,.06); --tw-shadow-colored: 0 1px 7px 0px var(--tw-shadow-color); }

.shadow-\[0_1px_7px_0px_rgba\(0\,0\,0\,0\.06\)\], .shadow-\[0_2px_12px_0px_rgba\(0\,0\,0\,0\.08\)\] { box-shadow: var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.shadow-\[0_2px_12px_0px_rgba\(0\,0\,0\,0\.08\)\] { --tw-shadow: 0 2px 12px 0px rgba(0,0,0,.08); --tw-shadow-colored: 0 2px 12px 0px var(--tw-shadow-color); }

.shadow-\[0_2px_24px_rgba\(0\,0\,0\,0\.05\)\] { --tw-shadow: 0 2px 24px rgba(0,0,0,.05); --tw-shadow-colored: 0 2px 24px var(--tw-shadow-color); }

.shadow-\[0_2px_24px_rgba\(0\,0\,0\,0\.05\)\], .shadow-\[0px_1px_6px_0px_rgba\(0\,0\,0\,0\.02\)\] { box-shadow: var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.shadow-\[0px_1px_6px_0px_rgba\(0\,0\,0\,0\.02\)\] { --tw-shadow: 0px 1px 6px 0px rgba(0,0,0,.02); --tw-shadow-colored: 0px 1px 6px 0px var(--tw-shadow-color); }

.shadow-\[0px_4px_14px_rgba\(0\,0\,0\,0\.06\)\] { --tw-shadow: 0px 4px 14px rgba(0,0,0,.06); --tw-shadow-colored: 0px 4px 14px var(--tw-shadow-color); }

.shadow-\[0px_4px_14px_rgba\(0\,0\,0\,0\.06\)\], .shadow-\[inset_0_0_0_1px_rgba\(0\,0\,0\,0\.1\)\] { box-shadow: var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.shadow-\[inset_0_0_0_1px_rgba\(0\,0\,0\,0\.1\)\] { --tw-shadow: inset 0 0 0 1px rgba(0,0,0,.1); --tw-shadow-colored: inset 0 0 0 1px var(--tw-shadow-color); }

.shadow-lg { --tw-shadow: 0 10px 15px -3px rgba(0,0,0,.1),0 4px 6px -4px rgba(0,0,0,.1); --tw-shadow-colored: 0 10px 15px -3px var(--tw-shadow-color),0 4px 6px -4px var(--tw-shadow-color); }

.shadow-lg, .shadow-md { box-shadow: var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.shadow-md { --tw-shadow: 0 4px 6px -1px rgba(0,0,0,.1),0 2px 4px -2px rgba(0,0,0,.1); --tw-shadow-colored: 0 4px 6px -1px var(--tw-shadow-color),0 2px 4px -2px var(--tw-shadow-color); }

.shadow-none { --tw-shadow: 0 0 transparent; --tw-shadow-colored: 0 0 transparent; }

.shadow-none, .shadow-sm { box-shadow: var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.shadow-sm { --tw-shadow: 0 1px 2px 0 rgba(0,0,0,.05); --tw-shadow-colored: 0 1px 2px 0 var(--tw-shadow-color); }

.shadow-xl { --tw-shadow: 0 20px 25px -5px rgba(0,0,0,.1),0 8px 10px -6px rgba(0,0,0,.1); --tw-shadow-colored: 0 20px 25px -5px var(--tw-shadow-color),0 8px 10px -6px var(--tw-shadow-color); }

.shadow-xl, .shadow-xs { box-shadow: var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.shadow-xs { --tw-shadow: 0 0 15px rgba(0,0,0,.1); --tw-shadow-colored: 0 0 15px var(--tw-shadow-color); }

.shadow-xxs { --tw-shadow: 0 1px 7px 0 rgba(0,0,0,.03); --tw-shadow-colored: 0 1px 7px 0 var(--tw-shadow-color); box-shadow: var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.outline-none { outline: transparent solid 2px; outline-offset: 2px; }

.outline { outline-style: solid; }

.outline-0 { outline-width: 0px; }

.outline-2 { outline-width: 2px; }

.outline-offset-2 { outline-offset: 2px; }

.ring-0 { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color); }

.ring-0, .ring-1 { box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent); }

.ring-1 { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color); }

.ring-2 { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent); }

.ring-inset { --tw-ring-inset: inset; }

.ring-black { --tw-ring-opacity: 1; --tw-ring-color: rgba(0,0,0,var(--tw-ring-opacity)); }

.ring-black\/10 { --tw-ring-color: rgba(0,0,0,.1); }

.ring-white { --tw-ring-opacity: 1; --tw-ring-color: rgba(255,255,255,var(--tw-ring-opacity)); }

.ring-opacity-5 { --tw-ring-opacity: 0.05; }

.ring-offset-4 { --tw-ring-offset-width: 4px; }

.ring-offset-black { --tw-ring-offset-color: #000; }

.blur { --tw-blur: blur(8px); }

.blur, .blur-xl { filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow); }

.blur-xl { --tw-blur: blur(24px); }

.filter { filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow); }

.backdrop-blur-sm { --tw-backdrop-blur: blur(4px); }

.backdrop-blur-sm, .backdrop-blur-xl { backdrop-filter: var(--tw-backdrop-blur) var(--tw-backdrop-brightness) var(--tw-backdrop-contrast) var(--tw-backdrop-grayscale) var(--tw-backdrop-hue-rotate) var(--tw-backdrop-invert) var(--tw-backdrop-opacity) var(--tw-backdrop-saturate) var(--tw-backdrop-sepia); }

.backdrop-blur-xl { --tw-backdrop-blur: blur(24px); }

.transition { transition-duration: 0.15s; transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-transform, -webkit-filter, -webkit-backdrop-filter; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.transition-\[flex-basis\] { transition-duration: 0.15s; transition-property: flex-basis; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.transition-\[stroke-dashoffset\] { transition-duration: 0.15s; transition-property: stroke-dashoffset; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.transition-\[transform\,opacity\] { transition-duration: 0.15s; transition-property: transform, opacity, -webkit-transform; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.transition-all { transition-duration: 0.15s; transition-property: all; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.transition-colors { transition-duration: 0.15s; transition-property: color, background-color, border-color, text-decoration-color, fill, stroke; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.transition-opacity { transition-duration: 0.15s; transition-property: opacity; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.transition-transform { transition-duration: 0.15s; transition-property: transform, -webkit-transform; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.transition-width { transition-duration: 0.15s; transition-property: width; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.delay-100 { transition-delay: 0.1s; }

.delay-\[300ms\] { transition-delay: 0.3s; }

.delay-\[500ms\] { transition-delay: 0.5s; }

.duration-100 { transition-duration: 0.1s; }

.duration-150 { transition-duration: 0.15s; }

.duration-200 { transition-duration: 0.2s; }

.duration-300 { transition-duration: 0.3s; }

.duration-500 { transition-duration: 0.5s; }

.ease-in { transition-timing-function: cubic-bezier(0.4, 0, 1, 1); }

.ease-in-out { transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.ease-linear { transition-timing-function: linear; }

.ease-out { transition-timing-function: cubic-bezier(0, 0, 0.2, 1); }

.will-change-\[opacity\,transform\] { will-change: opacity, transform; }

.will-change-transform { will-change: transform; }

.\[grid-area\:_title\] { grid-area: title / title / title / title; }

.\[grid-template-areas\:_\'title_action\'_\'description_action\'\] { grid-template-areas: "title action" "description action"; }

body, html { height: 100%; }

.dark body, .dark html { --tw-bg-opacity: 1; background-color: rgba(52,53,65,var(--tw-bg-opacity)); }

#__next, #root { height: 100%; }

.markdown { max-width: none; }

.markdown h1 { font-weight: 600; }

.markdown h1:first-child { margin-top: 0px; }

.markdown h2 { font-weight: 600; margin-bottom: 1rem; margin-top: 2rem; }

.markdown h2:first-child { margin-top: 0px; }

.markdown h3 { font-weight: 600; margin-bottom: 0.5rem; margin-top: 1rem; }

.markdown h3:first-child { margin-top: 0px; }

.markdown h4 { font-weight: 400; margin-bottom: 0.5rem; margin-top: 1rem; }

.markdown h4:first-child { margin-top: 0px; }

.markdown h5 { font-weight: 600; }

.markdown h5:first-child { margin-top: 0px; }

.markdown blockquote { --tw-border-opacity: 1; border-color: rgba(142,142,160,var(--tw-border-opacity)); border-left-width: 2px; line-height: 1.5rem; margin: 0px; padding-bottom: 0.5rem; padding-left: 1rem; padding-top: 0.5rem; }

.markdown blockquote > p { margin: 0px; }

.markdown blockquote > p::after, .markdown blockquote > p::before { display: none; }

.markdown ol { counter-reset: list-number 0; display: flex; flex-direction: column; list-style-type: none; padding-left: 0px; }

.markdown ol:first-child > li { padding-left: 1.25rem; }

.markdown ol > li { counter-increment: list-number 1; display: block; margin-bottom: 0px; margin-top: 0px; min-height: 28px; }

.markdown ol > li::before { --tw-translate-x: -100%; --tw-numeric-spacing: tabular-nums; --tw-text-opacity: 1; color: rgba(142,142,160,var(--tw-text-opacity)); content: counters(list-number, ".") "."; font-variant-numeric: var(--tw-ordinal) var(--tw-slashed-zero) var(--tw-numeric-figure) var(--tw-numeric-spacing) var(--tw-numeric-fraction); padding-right: 0.5rem; position: absolute; transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

:is(.dark .markdown ol > li)::before { --tw-text-opacity: 1; color: rgba(172,172,190,var(--tw-text-opacity)); }

.markdown ul { display: flex; flex-direction: column; padding-left: 0px; }

.markdown ul:first-child > li { padding-left: 1.25rem; }

.markdown ul > li { display: block; margin: 0px; min-height: 28px; }

.markdown ul > li::before { --tw-translate-x: -100%; content: "â¢"; font-size: 0.875rem; line-height: 1.25rem; padding-right: 0.5rem; position: absolute; transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.markdown ol li > p, .markdown ol li > pre, .markdown ul li > p, .markdown ul li > pre { margin: 0px; }

.markdown ol ol, .markdown ol ul, .markdown ul ol, .markdown ul ul { margin-bottom: 0px; margin-left: 1rem; margin-top: 0px; }

.markdown table { --tw-border-spacing-x: 0px; --tw-border-spacing-y: 0px; border-collapse: separate; border-spacing: var(--tw-border-spacing-x) var(--tw-border-spacing-y); width: 100%; }

.markdown th { background-color: rgba(236, 236, 241, 0.2); border-bottom-width: 1px; border-left-width: 1px; border-top-width: 1px; padding: 0.25rem 0.75rem; }

.markdown th:first-child { border-top-left-radius: 0.375rem; }

.markdown th:last-child { border-right-width: 1px; border-top-right-radius: 0.375rem; }

.markdown td { border-bottom-width: 1px; border-left-width: 1px; padding: 0.25rem 0.75rem; }

.markdown td:last-child { border-right-width: 1px; }

.markdown tbody tr:last-child td:first-child { border-bottom-left-radius: 0.375rem; }

.markdown tbody tr:last-child td:last-child { border-bottom-right-radius: 0.375rem; }

.markdown a { text-decoration-line: underline; text-underline-offset: 2px; }

.gizmo .markdown > :not(pre), .gizmo .markdown > :not(pre) > * { color: var(--text-primary); }

.conversation-item-time::before { content: attr(data-time); }

button.scroll-convo { display: none; }

@-webkit-keyframes blink { 
  100% { visibility: hidden; }
}

@keyframes blink { 
  100% { visibility: hidden; }
}

.animate-flash { animation: 2s steps(60, start) 0s 1 normal none running flash; }

@-webkit-keyframes flash { 
  0% { background-color: rgba(255, 255, 255, 0.4); }
}

@keyframes flash { 
  0% { background-color: rgba(255, 255, 255, 0.4); }
}

.result-streaming > :not(ol):not(ul):not(pre):last-child::after, .result-streaming > pre:last-child code::after { content: "â"; font-family: "SÃ¶hne Circle", system-ui, -apple-system, "Segoe UI", Roboto, Ubuntu, Cantarell, "Noto Sans", sans-serif; margin-left: 0.25rem; vertical-align: baseline; }

@supports (selector(:has(*))) {
  .result-streaming > ol:last-child > li:last-child > ol:last-child > li:last-child::after, .result-streaming > ol:last-child > li:last-child > ol:last-child > li:last-child > ol:last-child > li:last-child::after, .result-streaming > ol:last-child > li:last-child > ol:last-child > li:last-child > ul:last-child > li:last-child::after, .result-streaming > ol:last-child > li:last-child > ul:last-child > li:last-child::after, .result-streaming > ol:last-child > li:last-child > ul:last-child > li:last-child > ol:last-child > li:last-child::after, .result-streaming > ol:last-child > li:last-child > ul:last-child > li:last-child > ul:last-child > li:last-child::after, .result-streaming > ul:last-child > li:last-child > ol:last-child > li:last-child::after, .result-streaming > ul:last-child > li:last-child > ol:last-child > li:last-child > ol:last-child > li:last-child::after, .result-streaming > ul:last-child > li:last-child > ol:last-child > li:last-child > ul:last-child > li:last-child::after, .result-streaming > ul:last-child > li:last-child > ul:last-child > li:last-child::after, .result-streaming > ul:last-child > li:last-child > ul:last-child > li:last-child > ol:last-child > li:last-child::after, .result-streaming > ul:last-child > li:last-child > ul:last-child > li:last-child > ul:last-child > li:last-child::after, .result-streaming > ul:last-child > li:last-child[*|\:not-has\(]::after { content: "â"; font-family: "SÃ¶hne Circle", system-ui, -apple-system, "Segoe UI", Roboto, Ubuntu, Cantarell, "Noto Sans", sans-serif; margin-left: 0.25rem; vertical-align: baseline; }
  .result-streaming > ul:last-child > li:last-child:not(:has(* > li))::after { content: "â"; font-family: "SÃ¶hne Circle", system-ui, -apple-system, "Segoe UI", Roboto, Ubuntu, Cantarell, "Noto Sans", sans-serif; margin-left: 0.25rem; vertical-align: baseline; }
  .result-streaming > ol:last-child > li:last-child[*|\:not-has\(]::after { content: "â"; font-family: "SÃ¶hne Circle", system-ui, -apple-system, "Segoe UI", Roboto, Ubuntu, Cantarell, "Noto Sans", sans-serif; margin-left: 0.25rem; vertical-align: baseline; }
  .result-streaming > ol:last-child > li:last-child:not(:has(* > li))::after { content: "â"; font-family: "SÃ¶hne Circle", system-ui, -apple-system, "Segoe UI", Roboto, Ubuntu, Cantarell, "Noto Sans", sans-serif; margin-left: 0.25rem; vertical-align: baseline; }
}

@supports not (selector(:has(*))) {
  .result-streaming > ol:last-child > li:last-child::after, .result-streaming > ul:last-child > li:last-child::after { content: "â"; font-family: "SÃ¶hne Circle", system-ui, -apple-system, "Segoe UI", Roboto, Ubuntu, Cantarell, "Noto Sans", sans-serif; margin-left: 0.25rem; vertical-align: baseline; }
}

@-webkit-keyframes pulseSize { 
  0%, 100% { transform: scaleX(1); }
  50% { transform: scale3d(1.25, 1.25, 1); }
}

@keyframes pulseSize { 
  0%, 100% { transform: scaleX(1); }
  50% { transform: scale3d(1.25, 1.25, 1); }
}

@-webkit-keyframes toast-open { 
  0% { opacity: 0; transform: translateY(-100%); }
  100% { transform: translateY(0px); }
}

@keyframes toast-open { 
  0% { opacity: 0; transform: translateY(-100%); }
  100% { transform: translateY(0px); }
}

@-webkit-keyframes toast-close { 
  0% { opacity: 1; }
  100% { opacity: 0; }
}

@keyframes toast-close { 
  0% { opacity: 1; }
  100% { opacity: 0; }
}

button[data-state="closed"] .toggle-item-button-closed, button[data-state="open"] .toggle-item-button-open { display: none; }

.toast-root { align-items: center; display: flex; flex-direction: column; height: 0px; transition: all 0.24s cubic-bezier(0, 0, 0.2, 1) 0s; }

.toast-root[data-state="entered"], .toast-root[data-state="entering"] { animation: 0.24s cubic-bezier(0.175, 0.885, 0.32, 1.175) 0s 1 normal both running toast-open; }

.toast-root[data-state="exiting"] { animation: 0.12s cubic-bezier(0.4, 0, 1, 1) 0s 1 normal both running toast-close; }

.toast-root .alert-root { box-shadow: rgba(67, 90, 111, 0.3) 0px 0px 1px, rgba(67, 90, 111, 0.3) 0px 5px 8px -4px; flex-shrink: 0; pointer-events: all; }

.interact-bounce { transition-duration: 0.15s; transition-property: transform, -webkit-transform; transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1); }

.interact-bounce:hover { --tw-scale-x: 1.05; --tw-scale-y: 1.05; }

.interact-bounce:active, .interact-bounce:hover { transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.interact-bounce:active { --tw-scale-x: .9; --tw-scale-y: .9; }

.title { font-feature-settings: normal; font-family: SÃ¶hne, ui-sans-serif, system-ui, -apple-system, "Segoe UI", Roboto, Ubuntu, Cantarell, "Noto Sans", sans-serif, "Helvetica Neue", Arial, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji"; font-variation-settings: normal; }

.font-circle { font-family: "SÃ¶hne Circle", system-ui, -apple-system, "Segoe UI", Roboto, Ubuntu, Cantarell, "Noto Sans", sans-serif; }

.icon-xs { stroke-width: 1.5; height: 0.75rem; width: 0.75rem; }

.icon-sm { stroke-width: 2; height: 1rem; width: 1rem; }

.icon-md { stroke-width: 1.5; height: 1.25rem; width: 1.25rem; }

.icon-lg { stroke-width: 1.5; height: 1.5rem; width: 1.5rem; }

.icon-xl { stroke-width: 1.5; height: 1.75rem; width: 1.75rem; }

.icon-2xl { stroke-width: 1.5; height: 2rem; width: 2rem; }

.dark .dark\:prose-invert { --tw-prose-body: var(--tw-prose-invert-body); --tw-prose-headings: var(--tw-prose-invert-headings); --tw-prose-lead: var(--tw-prose-invert-lead); --tw-prose-links: var(--tw-prose-invert-links); --tw-prose-bold: var(--tw-prose-invert-bold); --tw-prose-counters: var(--tw-prose-invert-counters); --tw-prose-bullets: var(--tw-prose-invert-bullets); --tw-prose-hr: var(--tw-prose-invert-hr); --tw-prose-quotes: var(--tw-prose-invert-quotes); --tw-prose-quote-borders: var(--tw-prose-invert-quote-borders); --tw-prose-captions: var(--tw-prose-invert-captions); --tw-prose-code: var(--tw-prose-invert-code); --tw-prose-pre-code: var(--tw-prose-invert-pre-code); --tw-prose-pre-bg: var(--tw-prose-invert-pre-bg); --tw-prose-th-borders: var(--tw-prose-invert-th-borders); --tw-prose-td-borders: var(--tw-prose-invert-td-borders); }

.placeholder\:text-gray-300::-webkit-input-placeholder { --tw-text-opacity: 1; color: rgba(197,197,210,var(--tw-text-opacity)); }

.placeholder\:text-gray-300::placeholder { --tw-text-opacity: 1; color: rgba(197,197,210,var(--tw-text-opacity)); }

.placeholder\:text-gray-500::-webkit-input-placeholder { --tw-text-opacity: 1; color: rgba(142,142,160,var(--tw-text-opacity)); }

.placeholder\:text-gray-500::placeholder { --tw-text-opacity: 1; color: rgba(142,142,160,var(--tw-text-opacity)); }

.placeholder\:text-gray-600::-webkit-input-placeholder { --tw-text-opacity: 1; color: rgba(86,88,105,var(--tw-text-opacity)); }

.placeholder\:text-gray-600::placeholder { --tw-text-opacity: 1; color: rgba(86,88,105,var(--tw-text-opacity)); }

.after\:content-\[\'\"\'\]::after, .before\:content-\[\'\"\'\]::before { --tw-content: '"'; content: var(--tw-content); }

.first\:mt-0:first-child { margin-top: 0px; }

.first\:hidden:first-child { display: none; }

.last\:mb-0:last-child { margin-bottom: 0px; }

.last\:mb-2:last-child { margin-bottom: 0.5rem; }

.last\:border-0:last-child { border-width: 0px; }

.last\:border-b:last-child { border-bottom-width: 1px; }

.last\:border-b-0:last-child { border-bottom-width: 0px; }

.last\:pr-0:last-child { padding-right: 0px; }

.last-of-type\:border-b-0:last-of-type { border-bottom-width: 0px; }

.checked\:border-blue-600:checked { --tw-border-opacity: 1; border-color: rgba(37,99,235,var(--tw-border-opacity)); }

.checked\:bg-blue-600:checked { --tw-bg-opacity: 1; background-color: rgba(37,99,235,var(--tw-bg-opacity)); }

.empty\:hidden:empty { display: none; }

.focus-within\:z-10[focus-within] { z-index: 10; }

.focus-within\:z-10:focus-within { z-index: 10; }

.focus-within\:border-indigo-600[focus-within] { --tw-border-opacity: 1; border-color: rgba(79,70,229,var(--tw-border-opacity)); }

.focus-within\:border-indigo-600:focus-within { --tw-border-opacity: 1; border-color: rgba(79,70,229,var(--tw-border-opacity)); }

.focus-within\:border-token-border-medium[focus-within] { border-color: var(--border-medium); }

.focus-within\:border-token-border-medium:focus-within { border-color: var(--border-medium); }

.focus-within\:shadow-\[0_3px_3px_0_rgba\(0\,0\,0\,0\.05\)\][focus-within] { --tw-shadow: 0 3px 3px 0 rgba(0,0,0,.05); --tw-shadow-colored: 0 3px 3px 0 var(--tw-shadow-color); box-shadow: var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.focus-within\:shadow-\[0_3px_3px_0_rgba\(0\,0\,0\,0\.05\)\]:focus-within { --tw-shadow: 0 3px 3px 0 rgba(0,0,0,.05); --tw-shadow-colored: 0 3px 3px 0 var(--tw-shadow-color); box-shadow: var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.focus-within\:ring-1[focus-within] { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent); }

.focus-within\:ring-1:focus-within { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent); }

.focus-within\:ring-indigo-600[focus-within] { --tw-ring-opacity: 1; --tw-ring-color: rgba(79,70,229,var(--tw-ring-opacity)); }

.focus-within\:ring-indigo-600:focus-within { --tw-ring-opacity: 1; --tw-ring-color: rgba(79,70,229,var(--tw-ring-opacity)); }

.hover\:cursor-pointer:hover { cursor: pointer; }

.hover\:overflow-visible:hover { overflow: visible; }

.hover\:whitespace-normal:hover { white-space: normal; }

.hover\:border-\[var\(--avatar-color\)\]:hover { border-color: var(--avatar-color); }

.hover\:border-black\/10:hover { border-color: rgba(0, 0, 0, 0.1); }

.hover\:border-gray-100:hover { --tw-border-opacity: 1; border-color: rgba(236,236,241,var(--tw-border-opacity)); }

.hover\:border-gray-200:hover { --tw-border-opacity: 1; border-color: rgba(217,217,227,var(--tw-border-opacity)); }

.hover\:border-gray-300:hover { --tw-border-opacity: 1; border-color: rgba(197,197,210,var(--tw-border-opacity)); }

.hover\:\!bg-gray-50:hover { --tw-bg-opacity: 1 !important; background-color: rgba(247,247,248,var(--tw-bg-opacity)) !important; }

.hover\:bg-\[\#0000FF\]:hover { --tw-bg-opacity: 1; background-color: rgba(0,0,255,var(--tw-bg-opacity)); }

.hover\:bg-\[\#0077FF\]:hover { --tw-bg-opacity: 1; background-color: rgba(0,119,255,var(--tw-bg-opacity)); }

.hover\:bg-\[\#6E73FC\]:hover { --tw-bg-opacity: 1; background-color: rgba(110,115,252,var(--tw-bg-opacity)); }

.hover\:bg-black:hover { --tw-bg-opacity: 1; background-color: rgba(0,0,0,var(--tw-bg-opacity)); }

.hover\:bg-black\/10:hover { background-color: rgba(0, 0, 0, 0.1); }

.hover\:bg-brand-green\/30:hover { background-color: rgba(25, 195, 125, 0.3); }

.hover\:bg-brand-purple:hover { --tw-bg-opacity: 1; background-color: rgba(171,104,255,var(--tw-bg-opacity)); }

.hover\:bg-gray-100:hover { --tw-bg-opacity: 1; background-color: rgba(236,236,241,var(--tw-bg-opacity)); }

.hover\:bg-gray-200:hover { --tw-bg-opacity: 1; background-color: rgba(217,217,227,var(--tw-bg-opacity)); }

.hover\:bg-gray-300:hover { --tw-bg-opacity: 1; background-color: rgba(197,197,210,var(--tw-bg-opacity)); }

.hover\:bg-gray-50:hover { --tw-bg-opacity: 1; background-color: rgba(247,247,248,var(--tw-bg-opacity)); }

.hover\:bg-gray-500\/10:hover { background-color: rgba(141, 141, 160, 0.1); }

.hover\:bg-gray-700:hover { --tw-bg-opacity: 1; background-color: rgba(64,65,79,var(--tw-bg-opacity)); }

.hover\:bg-green-100:hover { --tw-bg-opacity: 1; background-color: rgba(210,244,211,var(--tw-bg-opacity)); }

.hover\:bg-token-surface-secondary:hover { background-color: var(--surface-secondary); }

.hover\:bg-token-surface-tertiary:hover { background-color: var(--surface-tertiary); }

.hover\:bg-transparent:hover { background-color: transparent; }

.hover\:bg-white\/40:hover { background-color: rgba(255, 255, 255, 0.4); }

.hover\:pr-14:hover { padding-right: 3.5rem; }

.hover\:pr-4:hover { padding-right: 1rem; }

.hover\:text-black:hover { --tw-text-opacity: 1; color: rgba(0,0,0,var(--tw-text-opacity)); }

.hover\:text-black\/50:hover { color: rgba(0, 0, 0, 0.5); }

.hover\:text-black\/70:hover { color: rgba(0, 0, 0, 0.7); }

.hover\:text-blue-600:hover { --tw-text-opacity: 1; color: rgba(37,99,235,var(--tw-text-opacity)); }

.hover\:text-gray-200:hover { --tw-text-opacity: 1; color: rgba(217,217,227,var(--tw-text-opacity)); }

.hover\:text-gray-300:hover { --tw-text-opacity: 1; color: rgba(197,197,210,var(--tw-text-opacity)); }

.hover\:text-gray-400:hover { --tw-text-opacity: 1; color: rgba(172,172,190,var(--tw-text-opacity)); }

.hover\:text-gray-600:hover { --tw-text-opacity: 1; color: rgba(86,88,105,var(--tw-text-opacity)); }

.hover\:text-gray-700:hover { --tw-text-opacity: 1; color: rgba(64,65,79,var(--tw-text-opacity)); }

.hover\:text-gray-800:hover { --tw-text-opacity: 1; color: rgba(52,53,65,var(--tw-text-opacity)); }

.hover\:text-gray-900:hover { --tw-text-opacity: 1; color: rgba(32,33,35,var(--tw-text-opacity)); }

.hover\:text-gray-950:hover { --tw-text-opacity: 1; color: rgba(5,5,9,var(--tw-text-opacity)); }

.hover\:text-green-700:hover { --tw-text-opacity: 1; color: rgba(26,127,100,var(--tw-text-opacity)); }

.hover\:text-red-500:hover { --tw-text-opacity: 1; color: rgba(239,68,68,var(--tw-text-opacity)); }

.hover\:text-red-700:hover { --tw-text-opacity: 1; color: rgba(185,28,28,var(--tw-text-opacity)); }

.hover\:text-token-text-primary:hover { color: var(--text-primary); }

.hover\:text-token-text-secondary:hover { color: var(--text-secondary); }

.hover\:text-white\/40:hover { color: rgba(255, 255, 255, 0.4); }

.hover\:underline:hover { text-decoration-line: underline; }

.hover\:\!opacity-100:hover { opacity: 1 !important; }

.hover\:opacity-100:hover { opacity: 1; }

.hover\:opacity-20:hover { opacity: 0.2; }

.hover\:opacity-70:hover { opacity: 0.7; }

.hover\:opacity-75:hover { opacity: 0.75; }

.hover\:opacity-80:hover { opacity: 0.8; }

.hover\:shadow-\[0_1px_7px_0px_rgba\(0\,0\,0\,0\.06\)\]:hover { --tw-shadow: 0 1px 7px 0px rgba(0,0,0,.06); --tw-shadow-colored: 0 1px 7px 0px var(--tw-shadow-color); box-shadow: var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.hover\:brightness-90:hover { --tw-brightness: brightness(.9); filter: var(--tw-blur) var(--tw-brightness) var(--tw-contrast) var(--tw-grayscale) var(--tw-hue-rotate) var(--tw-invert) var(--tw-saturate) var(--tw-sepia) var(--tw-drop-shadow); }

.hover\:delay-0:hover { transition-delay: 0s; }

.focus\:border-brand-green:focus, .focus\:border-green-500:focus { --tw-border-opacity: 1; border-color: rgba(25,195,125,var(--tw-border-opacity)); }

.focus\:border-green-600:focus { --tw-border-opacity: 1; border-color: rgba(16,163,127,var(--tw-border-opacity)); }

.focus\:border-orange-400:focus { --tw-border-opacity: 1; border-color: rgba(255,128,82,var(--tw-border-opacity)); }

.focus\:border-red-500:focus { --tw-border-opacity: 1; border-color: rgba(239,68,68,var(--tw-border-opacity)); }

.focus\:bg-gray-100:focus { --tw-bg-opacity: 1; background-color: rgba(236,236,241,var(--tw-bg-opacity)); }

.focus\:bg-gray-50:focus { --tw-bg-opacity: 1; background-color: rgba(247,247,248,var(--tw-bg-opacity)); }

.focus\:outline-none:focus { outline: transparent solid 2px; outline-offset: 2px; }

.focus\:ring-0:focus { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color); }

.focus\:ring-0:focus, .focus\:ring-1:focus { box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent); }

.focus\:ring-1:focus { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color); }

.focus\:ring-2:focus { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent); }

.focus\:ring-inset:focus { --tw-ring-inset: inset; }

.focus\:ring-blue-400:focus { --tw-ring-opacity: 1; --tw-ring-color: rgba(58,136,255,var(--tw-ring-opacity)); }

.focus\:ring-gray-200:focus { --tw-ring-opacity: 1; --tw-ring-color: rgba(217,217,227,var(--tw-ring-opacity)); }

.focus\:ring-green-500:focus { --tw-ring-opacity: 1; --tw-ring-color: rgba(25,195,125,var(--tw-ring-opacity)); }

.focus\:ring-green-600:focus { --tw-ring-opacity: 1; --tw-ring-color: rgba(16,163,127,var(--tw-ring-opacity)); }

.focus\:ring-white:focus { --tw-ring-opacity: 1; --tw-ring-color: rgba(255,255,255,var(--tw-ring-opacity)); }

.focus-visible\:border-blue-500.focus-visible { --tw-border-opacity: 1; border-color: rgba(69,89,164,var(--tw-border-opacity)); }

.focus-visible\:border-blue-500:focus-visible { --tw-border-opacity: 1; border-color: rgba(69,89,164,var(--tw-border-opacity)); }

.focus-visible\:ring-0.focus-visible { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent); }

.focus-visible\:ring-0:focus-visible { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent); }

.enabled\:bg-brand-purple:enabled { --tw-bg-opacity: 1; background-color: rgba(171,104,255,var(--tw-bg-opacity)); }

.disabled\:bottom-0:disabled { bottom: 0px; }

.disabled\:bottom-0\.5:disabled { bottom: 0.125rem; }

.disabled\:cursor-auto:disabled { cursor: auto; }

.disabled\:text-gray-300:disabled { --tw-text-opacity: 1; color: rgba(197,197,210,var(--tw-text-opacity)); }

.disabled\:text-gray-400:disabled { --tw-text-opacity: 1; color: rgba(172,172,190,var(--tw-text-opacity)); }

.disabled\:text-token-border-medium:disabled { color: var(--border-medium); }

.disabled\:opacity-20:disabled { opacity: 0.2; }

.disabled\:opacity-40:disabled { opacity: 0.4; }

.disabled\:opacity-50:disabled { opacity: 0.5; }

.disabled\:hover\:bg-gray-900:hover:disabled { --tw-bg-opacity: 1; background-color: rgba(32,33,35,var(--tw-bg-opacity)); }

.group[focus-within] .group-focus-within\:flex { display: flex; }

.group:focus-within .group-focus-within\:flex { display: flex; }

.group:hover .group-hover\:visible, .group\/dalle-image:hover .group-hover\/dalle-image\:visible { visibility: visible; }

.group\/tool-expander-closed:hover .group-hover\/tool-expander-closed\:block, .group\/tool-expander-open:hover .group-hover\/tool-expander-open\:block { display: block; }

.group:hover .group-hover\:border-t-\[\#0077FF\] { --tw-border-opacity: 1; border-top-color: rgba(0,119,255,var(--tw-border-opacity)); }

.group\/options:hover .group-hover\/options\:bg-transparent { background-color: transparent; }

.group\/toggle:hover .group-hover\/toggle\:bg-red-500 { --tw-bg-opacity: 1; background-color: rgba(239,68,68,var(--tw-bg-opacity)); }

.group:hover .group-hover\:from-gray-100 { --tw-gradient-from: #ececf1 var(--tw-gradient-from-position); --tw-gradient-to: rgba(236,236,241,0) var(--tw-gradient-to-position); --tw-gradient-stops: var(--tw-gradient-from),var(--tw-gradient-to); }

.group\/button:hover .group-hover\/button\:text-blue-500 { --tw-text-opacity: 1; color: rgba(69,89,164,var(--tw-text-opacity)); }

.group\/button:hover .group-hover\/button\:text-brand-green { --tw-text-opacity: 1; color: rgba(25,195,125,var(--tw-text-opacity)); }

.group\/button:hover .group-hover\/button\:text-brand-purple { --tw-text-opacity: 1; color: rgba(171,104,255,var(--tw-text-opacity)); }

.group\/button:hover .group-hover\/button\:text-orange-500 { --tw-text-opacity: 1; color: rgba(224,108,43,var(--tw-text-opacity)); }

.group\/button:hover .group-hover\/button\:text-red-500 { --tw-text-opacity: 1; color: rgba(239,68,68,var(--tw-text-opacity)); }

.group\/option:hover .group-hover\/option\:\!text-brand-green { --tw-text-opacity: 1 !important; color: rgba(25,195,125,var(--tw-text-opacity)) !important; }

.group\/option:hover .group-hover\/option\:\!text-brand-purple { --tw-text-opacity: 1 !important; color: rgba(171,104,255,var(--tw-text-opacity)) !important; }

.group\/option:hover .group-hover\/option\:text-gray-100 { --tw-text-opacity: 1; color: rgba(236,236,241,var(--tw-text-opacity)); }

.group\/option:hover .group-hover\/option\:text-gray-800 { --tw-text-opacity: 1; color: rgba(52,53,65,var(--tw-text-opacity)); }

.group\/options:hover .group-hover\/options\:text-gray-500 { --tw-text-opacity: 1; color: rgba(142,142,160,var(--tw-text-opacity)); }

.group\/options:hover .group-hover\/options\:opacity-0 { opacity: 0; }

.group:hover .group-hover\:opacity-100 { opacity: 1; }

.group:hover .group-hover\:opacity-50 { opacity: 0.5; }

.radix-disabled\:pointer-events-none[data-disabled] { pointer-events: none; }

.radix-disabled\:cursor-auto[data-disabled] { cursor: auto; }

.radix-disabled\:bg-transparent[data-disabled] { background-color: transparent; }

.radix-disabled\:text-gray-300[data-disabled] { --tw-text-opacity: 1; color: rgba(197,197,210,var(--tw-text-opacity)); }

.radix-disabled\:text-gray-500[data-disabled] { --tw-text-opacity: 1; color: rgba(142,142,160,var(--tw-text-opacity)); }

.radix-highlighted\:bg-gray-50[data-highlighted] { --tw-bg-opacity: 1; background-color: rgba(247,247,248,var(--tw-bg-opacity)); }

.radix-highlighted\:outline-none[data-highlighted] { outline: transparent solid 2px; outline-offset: 2px; }

.radix-state-active\:bg-gray-800[data-state="active"] { --tw-bg-opacity: 1; background-color: rgba(52,53,65,var(--tw-bg-opacity)); }

.radix-state-active\:text-gray-600[data-state="active"] { --tw-text-opacity: 1; color: rgba(86,88,105,var(--tw-text-opacity)); }

.radix-state-active\:text-white[data-state="active"] { --tw-text-opacity: 1; color: rgba(255,255,255,var(--tw-text-opacity)); }

.group[data-state="active"] .group-radix-state-active\:fill-white { fill: rgb(255, 255, 255); }

.radix-state-checked\:translate-x-\[19px\][data-state="checked"] { --tw-translate-x: 19px; transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.radix-state-checked\:bg-green-600[data-state="checked"] { --tw-bg-opacity: 1; background-color: rgba(16,163,127,var(--tw-bg-opacity)); }

.radix-state-checked\:text-white[data-state="checked"] { --tw-text-opacity: 1; color: rgba(255,255,255,var(--tw-text-opacity)); }

.radix-state-on\:bg-green-600[data-state="on"] { --tw-bg-opacity: 1; background-color: rgba(16,163,127,var(--tw-bg-opacity)); }

.radix-state-on\:text-white[data-state="on"] { --tw-text-opacity: 1; color: rgba(255,255,255,var(--tw-text-opacity)); }

@-webkit-keyframes contentShow { 
  0% { opacity: 0; transform: scale(0.96); }
  100% { opacity: 1; transform: scale(1); }
}

@keyframes contentShow { 
  0% { opacity: 0; transform: scale(0.96); }
  100% { opacity: 1; transform: scale(1); }
}

.radix-state-open\:animate-contentShow[data-state="open"] { animation: 0.15s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running contentShow; }

@-webkit-keyframes show { 
  0% { opacity: 0; }
  100% { opacity: 1; }
}

@keyframes show { 
  0% { opacity: 0; }
  100% { opacity: 1; }
}

.radix-state-open\:animate-show[data-state="open"] { animation: 0.1s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running show; }

.radix-state-open\:bg-gray-50[data-state="open"] { --tw-bg-opacity: 1; background-color: rgba(247,247,248,var(--tw-bg-opacity)); }

.radix-state-open\:text-gray-600[data-state="open"] { --tw-text-opacity: 1; color: rgba(86,88,105,var(--tw-text-opacity)); }

.radix-state-open\:text-token-text-secondary[data-state="open"] { color: var(--text-secondary); }

.radix-side-bottom\:animate-slideDownAndFade[data-side="bottom"] { animation: 0.4s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running slideDownAndFade; }

@-webkit-keyframes slideUpAndFade { 
  0% { opacity: 0; transform: translateY(2px); }
  100% { opacity: 1; transform: translateY(0px); }
}

.radix-side-bottom\:animate-slideUpAndFade[data-side="bottom"] { animation: 0.4s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running slideUpAndFade; }

.radix-side-left\:animate-slideLeftAndFade[data-side="left"] { animation: 0.4s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running slideLeftAndFade; }

@-webkit-keyframes slideRightAndFade { 
  0% { opacity: 0; transform: translateX(-2px); }
  100% { opacity: 1; transform: translateX(0px); }
}

.radix-side-left\:animate-slideRightAndFade[data-side="left"] { animation: 0.4s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running slideRightAndFade; }

@keyframes slideLeftAndFade { 
  0% { opacity: 0; transform: translateX(2px); }
  100% { opacity: 1; transform: translateX(0px); }
}

.radix-side-right\:animate-slideLeftAndFade[data-side="right"] { animation: 0.4s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running slideLeftAndFade; }

@keyframes slideRightAndFade { 
  0% { opacity: 0; transform: translateX(-2px); }
  100% { opacity: 1; transform: translateX(0px); }
}

.radix-side-right\:animate-slideRightAndFade[data-side="right"] { animation: 0.4s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running slideRightAndFade; }

@keyframes slideDownAndFade { 
  0% { opacity: 0; transform: translateY(-2px); }
  100% { opacity: 1; transform: translateY(0px); }
}

.radix-side-top\:animate-slideDownAndFade[data-side="top"] { animation: 0.4s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running slideDownAndFade; }

@keyframes slideUpAndFade { 
  0% { opacity: 0; transform: translateY(2px); }
  100% { opacity: 1; transform: translateY(0px); }
}

.radix-side-top\:animate-slideUpAndFade[data-side="top"] { animation: 0.4s cubic-bezier(0.16, 1, 0.3, 1) 0s 1 normal none running slideUpAndFade; }

.group-ui-open\:bg-gray-100.group[data-headlessui-state~="open"] { --tw-bg-opacity: 1; background-color: rgba(236,236,241,var(--tw-bg-opacity)); }

.group:where([data-headlessui-state~="open"]) .group-ui-open\:bg-gray-100 { --tw-bg-opacity: 1; background-color: rgba(236,236,241,var(--tw-bg-opacity)); }

.gizmo .gizmo\:absolute { position: absolute; }

.gizmo .gizmo\:right-0 { right: 0px; }

.gizmo .gizmo\:right-1\/2 { right: 50%; }

.gizmo .gizmo\:top-1 { top: 0.25rem; }

.gizmo .gizmo\:top-1\/2 { top: 50%; }

.gizmo .gizmo\:-ml-6 { margin-left: -1.5rem; }

.gizmo .gizmo\:ml-0 { margin-left: 0px; }

.gizmo .gizmo\:mt-0 { margin-top: 0px; }

.gizmo .gizmo\:h-10 { height: 2.5rem; }

.gizmo .gizmo\:min-h-0 { min-height: 0px; }

.gizmo .gizmo\:w-full { width: 100%; }

.gizmo .gizmo\:-translate-y-1\/2 { --tw-translate-y: -50%; }

.gizmo .gizmo\:-translate-y-1\/2, .gizmo .gizmo\:transform { transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }

.gizmo .gizmo\:gap-1 { gap: 0.25rem; }

.gizmo .gizmo\:gap-1\.5 { gap: 0.375rem; }

.gizmo .gizmo\:gap-2 { gap: 0.5rem; }

.gizmo .gizmo\:gap-3 { gap: 0.75rem; }

.gizmo .gizmo\:rounded-2xl { border-radius: 1rem; }

.gizmo .gizmo\:rounded-lg { border-radius: 0.5rem; }

.gizmo .gizmo\:border-0 { border-width: 0px; }

.gizmo .gizmo\:border-\[rgba\(0\,0\,0\,0\.1\)\], .gizmo .gizmo\:border-black\/10 { border-color: rgba(0, 0, 0, 0.1); }

.gizmo .gizmo\:border-token-border-light { border-color: var(--border-light); }

.gizmo .gizmo\:bg-\[\#F5F5F5\] { --tw-bg-opacity: 1; background-color: rgba(245,245,245,var(--tw-bg-opacity)); }

.gizmo .gizmo\:bg-gray-800 { --tw-bg-opacity: 1; background-color: rgba(52,53,65,var(--tw-bg-opacity)); }

.gizmo .gizmo\:bg-token-surface-primary { background-color: var(--surface-primary); }

.gizmo .gizmo\:bg-transparent { background-color: transparent; }

.gizmo .gizmo\:bg-white { --tw-bg-opacity: 1; background-color: rgba(255,255,255,var(--tw-bg-opacity)); }

.gizmo .gizmo\:from-white { --tw-gradient-from: #fff var(--tw-gradient-from-position); --tw-gradient-to: hsla(0,0%,100%,0) var(--tw-gradient-to-position); --tw-gradient-stops: var(--tw-gradient-from),var(--tw-gradient-to); }

.gizmo .gizmo\:pl-0 { padding-left: 0px; }

.gizmo .gizmo\:text-gizmo-gray-600 { --tw-text-opacity: 1; color: rgba(102,102,102,var(--tw-text-opacity)); }

.gizmo .gizmo\:text-gray-500 { --tw-text-opacity: 1; color: rgba(142,142,160,var(--tw-text-opacity)); }

.gizmo .gizmo\:shadow-\[0_0_0_2px_rgba\(255\,255\,255\,0\.95\)\] { --tw-shadow: 0 0 0 2px hsla(0,0%,100%,.95); --tw-shadow-colored: 0 0 0 2px var(--tw-shadow-color); box-shadow: var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.gizmo .gizmo\:hover\:bg-gray-100:hover { --tw-bg-opacity: 1; background-color: rgba(236,236,241,var(--tw-bg-opacity)); }

.gizmo .gizmo\:enabled\:bg-transparent:enabled { background-color: transparent; }

.dark .dark\:hidden { display: none; }

:is(.dark .dark\:divide-gray-900) > :not([hidden]) ~ :not([hidden]) { --tw-divide-opacity: 1; border-color: rgba(32,33,35,var(--tw-divide-opacity)); }

.dark .dark\:border { border-width: 1px; }

.dark .dark\:border-0 { border-width: 0px; }

.dark .dark\:border-\[\#4E4F60\] { --tw-border-opacity: 1; border-color: rgba(78,79,96,var(--tw-border-opacity)); }

.dark .dark\:border-black { --tw-border-opacity: 1; border-color: rgba(0,0,0,var(--tw-border-opacity)); }

.dark .dark\:border-black\/20 { border-color: rgba(0, 0, 0, 0.2); }

.dark .dark\:border-gray-200 { --tw-border-opacity: 1; border-color: rgba(217,217,227,var(--tw-border-opacity)); }

.dark .dark\:border-gray-300 { --tw-border-opacity: 1; border-color: rgba(197,197,210,var(--tw-border-opacity)); }

.dark .dark\:border-gray-600 { --tw-border-opacity: 1; border-color: rgba(86,88,105,var(--tw-border-opacity)); }

.dark .dark\:border-gray-700 { --tw-border-opacity: 1; border-color: rgba(64,65,79,var(--tw-border-opacity)); }

.dark .dark\:border-gray-800 { --tw-border-opacity: 1; border-color: rgba(52,53,65,var(--tw-border-opacity)); }

.dark .dark\:border-gray-900 { --tw-border-opacity: 1; border-color: rgba(32,33,35,var(--tw-border-opacity)); }

.dark .dark\:border-gray-900\/50 { border-color: rgba(32, 33, 35, 0.5); }

.dark .dark\:border-token-border-light { border-color: var(--border-light); }

.dark .dark\:border-white { --tw-border-opacity: 1; border-color: rgba(255,255,255,var(--tw-border-opacity)); }

.dark .dark\:border-white\/10 { border-color: rgba(255, 255, 255, 0.1); }

.dark .dark\:border-white\/20 { border-color: rgba(255, 255, 255, 0.2); }

.dark .dark\:border-white\/30 { border-color: rgba(255, 255, 255, 0.3); }

.dark .dark\:bg-\[\#272832\] { --tw-bg-opacity: 1; background-color: rgba(39,40,50,var(--tw-bg-opacity)); }

.dark .dark\:bg-\[\#444654\] { --tw-bg-opacity: 1; background-color: rgba(68,70,84,var(--tw-bg-opacity)); }

.dark .dark\:bg-\[rgba\(255\,255\,255\,0\.15\)\] { background-color: rgba(255, 255, 255, 0.15); }

.dark .dark\:bg-black { --tw-bg-opacity: 1; background-color: rgba(0,0,0,var(--tw-bg-opacity)); }

.dark .dark\:bg-black\/80 { background-color: rgba(0, 0, 0, 0.8); }

.dark .dark\:bg-brand-green\/50 { background-color: rgba(25, 195, 125, 0.5); }

.dark .dark\:bg-gray-100 { --tw-bg-opacity: 1; background-color: rgba(236,236,241,var(--tw-bg-opacity)); }

.dark .dark\:bg-gray-50 { --tw-bg-opacity: 1; background-color: rgba(247,247,248,var(--tw-bg-opacity)); }

.dark .dark\:bg-gray-500 { --tw-bg-opacity: 1; background-color: rgba(142,142,160,var(--tw-bg-opacity)); }

.dark .dark\:bg-gray-600 { --tw-bg-opacity: 1; background-color: rgba(86,88,105,var(--tw-bg-opacity)); }

.dark .dark\:bg-gray-600\/70 { background-color: rgba(86, 88, 105, 0.7); }

.dark .dark\:bg-gray-700 { --tw-bg-opacity: 1; background-color: rgba(64,65,79,var(--tw-bg-opacity)); }

.dark .dark\:bg-gray-800 { --tw-bg-opacity: 1; background-color: rgba(52,53,65,var(--tw-bg-opacity)); }

.dark .dark\:bg-gray-800\/30 { background-color: rgba(52, 53, 65, 0.3); }

.dark .dark\:bg-gray-800\/90 { background-color: rgba(52, 53, 65, 0.9); }

.dark .dark\:bg-gray-900 { --tw-bg-opacity: 1; background-color: rgba(32,33,35,var(--tw-bg-opacity)); }

.dark .dark\:bg-gray-900\/95 { background-color: rgba(32, 33, 35, 0.95); }

.dark .dark\:bg-gray-950 { --tw-bg-opacity: 1; background-color: rgba(5,5,9,var(--tw-bg-opacity)); }

.dark .dark\:bg-orange-500 { --tw-bg-opacity: 1; background-color: rgba(224,108,43,var(--tw-bg-opacity)); }

.dark .dark\:bg-red-200 { --tw-bg-opacity: 1; background-color: rgba(254,202,202,var(--tw-bg-opacity)); }

.dark .dark\:bg-token-surface-tertiary { background-color: var(--surface-tertiary); }

.dark .dark\:bg-transparent { background-color: transparent; }

.dark .dark\:bg-white { --tw-bg-opacity: 1; background-color: rgba(255,255,255,var(--tw-bg-opacity)); }

.dark .dark\:bg-white\/10 { background-color: rgba(255, 255, 255, 0.1); }

.dark .dark\:bg-white\/20 { background-color: rgba(255, 255, 255, 0.2); }

.dark .dark\:bg-white\/5 { background-color: rgba(255, 255, 255, 0.05); }

.dark .dark\:from-gray-700 { --tw-gradient-from: #40414f var(--tw-gradient-from-position); --tw-gradient-to: rgba(64,65,79,0) var(--tw-gradient-to-position); --tw-gradient-stops: var(--tw-gradient-from),var(--tw-gradient-to); }

.dark .dark\:from-gray-800 { --tw-gradient-from: #343541 var(--tw-gradient-from-position); --tw-gradient-to: rgba(52,53,65,0) var(--tw-gradient-to-position); --tw-gradient-stops: var(--tw-gradient-from),var(--tw-gradient-to); }

.dark .dark\:from-gray-900 { --tw-gradient-from: #202123 var(--tw-gradient-from-position); --tw-gradient-to: rgba(32,33,35,0) var(--tw-gradient-to-position); --tw-gradient-stops: var(--tw-gradient-from),var(--tw-gradient-to); }

.dark .dark\:fill-gray-500 { fill: rgb(142, 142, 160); }

.dark .dark\:stroke-brand-purple\/50 { stroke: rgba(171, 104, 255, 0.5); }

.dark .dark\:text-\[\#D292FF\] { --tw-text-opacity: 1; color: rgba(210,146,255,var(--tw-text-opacity)); }

.dark .dark\:text-black { --tw-text-opacity: 1; color: rgba(0,0,0,var(--tw-text-opacity)); }

.dark .dark\:text-blue-200 { --tw-text-opacity: 1; color: rgba(191,219,254,var(--tw-text-opacity)); }

.dark .dark\:text-blue-400 { --tw-text-opacity: 1; color: rgba(58,136,255,var(--tw-text-opacity)); }

.dark .dark\:text-blue-600 { --tw-text-opacity: 1; color: rgba(37,99,235,var(--tw-text-opacity)); }

.dark .dark\:text-gray-100 { --tw-text-opacity: 1; color: rgba(236,236,241,var(--tw-text-opacity)); }

.dark .dark\:text-gray-200 { --tw-text-opacity: 1; color: rgba(217,217,227,var(--tw-text-opacity)); }

.dark .dark\:text-gray-300 { --tw-text-opacity: 1; color: rgba(197,197,210,var(--tw-text-opacity)); }

.dark .dark\:text-gray-400 { --tw-text-opacity: 1; color: rgba(172,172,190,var(--tw-text-opacity)); }

.dark .dark\:text-gray-500 { --tw-text-opacity: 1; color: rgba(142,142,160,var(--tw-text-opacity)); }

.dark .dark\:text-gray-600 { --tw-text-opacity: 1; color: rgba(86,88,105,var(--tw-text-opacity)); }

.dark .dark\:text-gray-700 { --tw-text-opacity: 1; color: rgba(64,65,79,var(--tw-text-opacity)); }

.dark .dark\:text-gray-900 { --tw-text-opacity: 1; color: rgba(32,33,35,var(--tw-text-opacity)); }

.dark .dark\:text-green-100 { --tw-text-opacity: 1; color: rgba(210,244,211,var(--tw-text-opacity)); }

.dark .dark\:text-red-500 { --tw-text-opacity: 1; color: rgba(239,68,68,var(--tw-text-opacity)); }

.dark .dark\:text-red-800 { --tw-text-opacity: 1; color: rgba(153,27,27,var(--tw-text-opacity)); }

.dark .dark\:text-white { --tw-text-opacity: 1; color: rgba(255,255,255,var(--tw-text-opacity)); }

.dark .dark\:text-white\/60 { color: rgba(255, 255, 255, 0.6); }

.dark .dark\:text-white\/70 { color: rgba(255, 255, 255, 0.7); }

.dark .dark\:text-white\/90 { color: rgba(255, 255, 255, 0.9); }

.dark .dark\:opacity-100 { opacity: 1; }

.dark .dark\:shadow-xs { --tw-shadow: 0 0 15px rgba(0,0,0,.1); --tw-shadow-colored: 0 0 15px var(--tw-shadow-color); box-shadow: var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

.dark .dark\:ring-white\/20 { --tw-ring-color: hsla(0,0%,100%,.2); }

:is(.dark .placeholder\:dark\:text-white)::-webkit-input-placeholder { --tw-text-opacity: 1; color: rgba(255,255,255,var(--tw-text-opacity)); }

:is(.dark .placeholder\:dark\:text-white)::placeholder { --tw-text-opacity: 1; color: rgba(255,255,255,var(--tw-text-opacity)); }

.dark .dark\:last\:border-0:last-child { border-width: 0px; }

.dark .dark\:hover\:border-gray-600:hover { --tw-border-opacity: 1; border-color: rgba(86,88,105,var(--tw-border-opacity)); }

.dark .dark\:hover\:border-gray-800:hover { --tw-border-opacity: 1; border-color: rgba(52,53,65,var(--tw-border-opacity)); }

.dark .dark\:hover\:border-white\/10:hover { border-color: rgba(255, 255, 255, 0.1); }

.dark .dark\:hover\:\!bg-gray-700:hover { --tw-bg-opacity: 1 !important; background-color: rgba(64,65,79,var(--tw-bg-opacity)) !important; }

.dark .dark\:hover\:bg-\[\#2A2B32\]:hover { --tw-bg-opacity: 1; background-color: rgba(42,43,50,var(--tw-bg-opacity)); }

.dark .dark\:hover\:bg-\[\#2E2F33\]:hover { --tw-bg-opacity: 1; background-color: rgba(46,47,51,var(--tw-bg-opacity)); }

.dark .dark\:hover\:bg-\[\#494A54\]:hover { --tw-bg-opacity: 1; background-color: rgba(73,74,84,var(--tw-bg-opacity)); }

.dark .dark\:hover\:bg-brand-green\/40:hover { background-color: rgba(25, 195, 125, 0.4); }

.dark .dark\:hover\:bg-gray-200:hover { --tw-bg-opacity: 1; background-color: rgba(217,217,227,var(--tw-bg-opacity)); }

.dark .dark\:hover\:bg-gray-500\/10:hover { background-color: rgba(141, 141, 160, 0.1); }

.dark .dark\:hover\:bg-gray-700:hover { --tw-bg-opacity: 1; background-color: rgba(64,65,79,var(--tw-bg-opacity)); }

.dark .dark\:hover\:bg-gray-800:hover { --tw-bg-opacity: 1; background-color: rgba(52,53,65,var(--tw-bg-opacity)); }

.dark .dark\:hover\:bg-gray-900:hover { --tw-bg-opacity: 1; background-color: rgba(32,33,35,var(--tw-bg-opacity)); }

.dark .dark\:hover\:bg-token-surface-tertiary:hover { background-color: var(--surface-tertiary); }

.dark .dark\:hover\:bg-white\/20:hover { background-color: rgba(255, 255, 255, 0.2); }

:is(.dark .hover\:dark\:bg-gray-700):hover { --tw-bg-opacity: 1; background-color: rgba(64,65,79,var(--tw-bg-opacity)); }

:is(.dark .hover\:dark\:bg-white\/10):hover { background-color: rgba(255, 255, 255, 0.1); }

.dark .dark\:hover\:text-blue-600:hover { --tw-text-opacity: 1; color: rgba(37,99,235,var(--tw-text-opacity)); }

.dark .dark\:hover\:text-gray-200:hover { --tw-text-opacity: 1; color: rgba(217,217,227,var(--tw-text-opacity)); }

.dark .dark\:hover\:text-gray-400:hover { --tw-text-opacity: 1; color: rgba(172,172,190,var(--tw-text-opacity)); }

.dark .dark\:hover\:text-white:hover { --tw-text-opacity: 1; color: rgba(255,255,255,var(--tw-text-opacity)); }

.dark .dark\:hover\:text-white\/50:hover { color: rgba(255, 255, 255, 0.5); }

:is(.dark .hover\:dark\:text-gray-100):hover { --tw-text-opacity: 1; color: rgba(236,236,241,var(--tw-text-opacity)); }

:is(.dark .hover\:dark\:text-gray-300):hover { --tw-text-opacity: 1; color: rgba(197,197,210,var(--tw-text-opacity)); }

.dark .dark\:focus\:border-white:focus { --tw-border-opacity: 1; border-color: rgba(255,255,255,var(--tw-border-opacity)); }

.dark .dark\:focus\:bg-gray-700:focus { --tw-bg-opacity: 1; background-color: rgba(64,65,79,var(--tw-bg-opacity)); }

:is(.dark .focus\:dark\:bg-gray-700):focus { --tw-bg-opacity: 1; background-color: rgba(64,65,79,var(--tw-bg-opacity)); }

.dark .dark\:focus\:ring-gray-600:focus { --tw-ring-opacity: 1; --tw-ring-color: rgba(86,88,105,var(--tw-ring-opacity)); }

.dark .dark\:focus\:ring-white:focus { --tw-ring-opacity: 1; --tw-ring-color: rgba(255,255,255,var(--tw-ring-opacity)); }

.dark .dark\:focus-visible\:border-blue-500.focus-visible { --tw-border-opacity: 1; border-color: rgba(69,89,164,var(--tw-border-opacity)); }

.dark .dark\:focus-visible\:border-blue-500:focus-visible { --tw-border-opacity: 1; border-color: rgba(69,89,164,var(--tw-border-opacity)); }

.dark .dark\:disabled\:text-gray-400:disabled { --tw-text-opacity: 1; color: rgba(172,172,190,var(--tw-text-opacity)); }

.dark .dark\:disabled\:hover\:bg-transparent:hover:disabled { background-color: transparent; }

.dark .dark\:disabled\:hover\:bg-white:hover:disabled { --tw-bg-opacity: 1; background-color: rgba(255,255,255,var(--tw-bg-opacity)); }

:is(.dark .disabled\:dark\:hover\:text-gray-400:hover):disabled { --tw-text-opacity: 1; color: rgba(172,172,190,var(--tw-text-opacity)); }

.dark .group:hover .dark\:group-hover\:from-\[\#2A2B32\] { --tw-gradient-from: #2a2b32 var(--tw-gradient-from-position); --tw-gradient-to: rgba(42,43,50,0) var(--tw-gradient-to-position); --tw-gradient-stops: var(--tw-gradient-from),var(--tw-gradient-to); }

.dark .group\/option:hover .dark\:group-hover\/option\:text-gray-100 { --tw-text-opacity: 1; color: rgba(236,236,241,var(--tw-text-opacity)); }

.dark .dark\:radix-disabled\:bg-transparent[data-disabled] { background-color: transparent; }

.dark .dark\:radix-disabled\:text-gray-500[data-disabled] { --tw-text-opacity: 1; color: rgba(142,142,160,var(--tw-text-opacity)); }

.dark .dark\:radix-disabled\:text-gray-600[data-disabled] { --tw-text-opacity: 1; color: rgba(86,88,105,var(--tw-text-opacity)); }

.dark .dark\:radix-highlighted\:bg-\[\#2E2F33\][data-highlighted] { --tw-bg-opacity: 1; background-color: rgba(46,47,51,var(--tw-bg-opacity)); }

.dark .dark\:radix-highlighted\:bg-gray-700[data-highlighted] { --tw-bg-opacity: 1; background-color: rgba(64,65,79,var(--tw-bg-opacity)); }

.dark .dark\:radix-highlighted\:hover\:bg-\[\#2E2F33\][data-highlighted]:hover { --tw-bg-opacity: 1; background-color: rgba(46,47,51,var(--tw-bg-opacity)); }

.dark .dark\:radix-state-active\:text-white[data-state="active"] { --tw-text-opacity: 1; color: rgba(255,255,255,var(--tw-text-opacity)); }

.dark .dark\:radix-state-checked\:bg-green-600[data-state="checked"], .dark .dark\:radix-state-on\:bg-green-600[data-state="on"] { --tw-bg-opacity: 1; background-color: rgba(16,163,127,var(--tw-bg-opacity)); }

.dark .dark\:radix-state-open\:bg-gray-700[data-state="open"] { --tw-bg-opacity: 1; background-color: rgba(64,65,79,var(--tw-bg-opacity)); }

.dark .dark\:radix-state-open\:text-gray-400[data-state="open"] { --tw-text-opacity: 1; color: rgba(172,172,190,var(--tw-text-opacity)); }

.dark .dark\:group-ui-open\:bg-gray-800.group[data-headlessui-state~="open"] { --tw-bg-opacity: 1; background-color: rgba(52,53,65,var(--tw-bg-opacity)); }

.dark .group:where([data-headlessui-state~="open"]) .dark\:group-ui-open\:bg-gray-800 { --tw-bg-opacity: 1; background-color: rgba(52,53,65,var(--tw-bg-opacity)); }

.gizmo :is(.dark .gizmo\:dark\:border-0) { border-width: 0px; }

.gizmo :is(.dark .gizmo\:dark\:border-r) { border-right-width: 1px; }

.gizmo :is(.dark .gizmo\:dark\:border-gray-100\/10) { border-color: rgba(236, 236, 241, 0.1); }

.gizmo :is(.dark .gizmo\:dark\:border-token-border-light) { border-color: var(--border-light); }

.gizmo :is(.dark .gizmo\:dark\:bg-gray-800) { --tw-bg-opacity: 1; background-color: rgba(52,53,65,var(--tw-bg-opacity)); }

.gizmo :is(.dark .gizmo\:dark\:bg-token-surface-primary) { background-color: var(--surface-primary); }

.gizmo :is(.dark .gizmo\:dark\:bg-transparent) { background-color: transparent; }

.gizmo :is(.dark .gizmo\:dark\:text-gray-300) { --tw-text-opacity: 1; color: rgba(197,197,210,var(--tw-text-opacity)); }

.gizmo :is(.dark .gizmo\:dark\:shadow-\[0_0_0_2px_rgba\(52\,53\,65\,0\.95\)\]) { --tw-shadow: 0 0 0 2px rgba(52,53,65,.95); --tw-shadow-colored: 0 0 0 2px var(--tw-shadow-color); box-shadow: var(--tw-ring-offset-shadow,0 0 transparent),var(--tw-ring-shadow,0 0 transparent),var(--tw-shadow); }

@media (min-width: 640px) {
  .sm\:absolute { position: absolute; }
  .sm\:order-1 { order: 1; }
  .sm\:order-2 { order: 2; }
  .sm\:-mx-6 { margin-left: -1.5rem; margin-right: -1.5rem; }
  .sm\:mx-1 { margin-left: 0.25rem; margin-right: 0.25rem; }
  .sm\:mb-0 { margin-bottom: 0px; }
  .sm\:mb-0\.5 { margin-bottom: 0.125rem; }
  .sm\:mb-16 { margin-bottom: 4rem; }
  .sm\:mb-2 { margin-bottom: 0.5rem; }
  .sm\:mb-24 { margin-bottom: 6rem; }
  .sm\:ml-0 { margin-left: 0px; }
  .sm\:mt-0 { margin-top: 0px; }
  .sm\:mt-16 { margin-top: 4rem; }
  .sm\:mt-4 { margin-top: 1rem; }
  .sm\:mt-\[20vh\] { margin-top: 20vh; }
  .sm\:mt-\[6vh\] { margin-top: 6vh; }
  .sm\:block { display: block; }
  .sm\:flex { display: flex; }
  .sm\:h-10 { height: 2.5rem; }
  .sm\:h-5 { height: 1.25rem; }
  .sm\:w-10 { width: 2.5rem; }
  .sm\:w-5 { width: 1.25rem; }
  .sm\:w-\[312px\] { width: 312px; }
  .sm\:w-\[calc\(\(100\%-12px\)\/2\)\] { width: calc(50% - 6px); }
  .sm\:w-auto { width: auto; }
  .sm\:min-w-\[148px\] { min-width: 148px; }
  .sm\:min-w-\[312px\] { min-width: 312px; }
  .sm\:min-w-\[420px\] { min-width: 420px; }
  .sm\:max-w-2xl { max-width: 42rem; }
  .sm\:max-w-lg { max-width: 32rem; }
  .sm\:max-w-md { max-width: 28rem; }
  .sm\:columns-2 { columns: 2; }
  .sm\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .sm\:grid-cols-3 { grid-template-columns: repeat(3, minmax(0px, 1fr)); }
  .sm\:grid-rows-2 { grid-template-rows: repeat(2, minmax(0px, 1fr)); }
  .sm\:flex-row { flex-direction: row; }
  .sm\:flex-row-reverse { flex-direction: row-reverse; }
  .sm\:items-center { align-items: center; }
  .sm\:justify-center { justify-content: center; }
  .sm\:gap-3 { gap: 0.75rem; }
  .sm\:gap-6 { gap: 1.5rem; }
  .sm\:gap-y-0 { row-gap: 0px; }
  .sm\:rounded-md { border-radius: 0.375rem; }
  .sm\:rounded-t-\[30px\] { border-top-left-radius: 30px; border-top-right-radius: 30px; }
  .sm\:border-r { border-right-width: 1px; }
  .sm\:border-t-0 { border-top-width: 0px; }
  .sm\:p-0 { padding: 0px; }
  .sm\:p-2 { padding: 0.5rem; }
  .sm\:p-3 { padding: 0.75rem; }
  .sm\:p-4 { padding: 1rem; }
  .sm\:p-6 { padding: 1.5rem; }
  .sm\:px-0 { padding-left: 0px; padding-right: 0px; }
  .sm\:px-2 { padding-left: 0.5rem; padding-right: 0.5rem; }
  .sm\:px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }
  .sm\:pb-0 { padding-bottom: 0px; }
  .sm\:pb-1 { padding-bottom: 0.25rem; }
  .sm\:pb-2 { padding-bottom: 0.5rem; }
  .sm\:pb-6 { padding-bottom: 1.5rem; }
  .sm\:pl-3 { padding-left: 0.75rem; }
  .sm\:pr-2 { padding-right: 0.5rem; }
  .sm\:pt-4 { padding-top: 1rem; }
  .sm\:pt-8 { padding-top: 2rem; }
  .sm\:text-left { text-align: left; }
  .sm\:text-4xl { font-size: 2.25rem; line-height: 2.5rem; }
  .sm\:text-base { font-size: 1rem; line-height: 1.5rem; }
  .sm\:text-sm { font-size: 0.875rem; line-height: 1.25rem; }
  .sm\:duration-300 { transition-duration: 0.3s; }
  .sm\:duration-500 { transition-duration: 0.5s; }
  @supports (min-height:100dvh) {
  .sm\:supports-\[min-height\:100dvh\]\:min-h-\[100dvh\] { min-height: 100dvh; }
}
}

@media (min-width: 768px) {
  .md\:invisible { visibility: hidden; }
  .md\:static { position: static; }
  .md\:relative { position: relative; }
  .md\:-right-2 { right: -0.5rem; }
  .md\:bottom-3 { bottom: 0.75rem; }
  .md\:bottom-3\.5 { bottom: 0.875rem; }
  .md\:bottom-\[180px\] { bottom: 180px; }
  .md\:bottom-auto { bottom: auto; }
  .md\:left-4 { left: 1rem; }
  .md\:left-auto { left: auto; }
  .md\:right-3 { right: 0.75rem; }
  .md\:right-auto { right: auto; }
  .md\:top-\[22px\] { top: 22px; }
  .md\:m-0 { margin: 0px; }
  .md\:m-auto { margin: auto; }
  .md\:mx-4 { margin-left: 1rem; margin-right: 1rem; }
  .md\:mb-0 { margin-bottom: 0px; }
  .md\:mb-16 { margin-bottom: 4rem; }
  .md\:mb-3 { margin-bottom: 0.75rem; }
  .md\:mb-4 { margin-bottom: 1rem; }
  .md\:mb-auto { margin-bottom: auto; }
  .md\:block { display: block; }
  .md\:inline-block { display: inline-block; }
  .md\:flex { display: flex; }
  .md\:grid { display: grid; }
  .md\:hidden { display: none; }
  .md\:h-48 { height: 12rem; }
  .md\:h-full { height: 100%; }
  .md\:min-h-\[300px\] { min-height: 300px; }
  .md\:w-1\/2 { width: 50%; }
  .md\:w-\[100\%\] { width: 100%; }
  .md\:w-\[250px\] { width: 250px; }
  .md\:w-\[500px\] { width: 500px; }
  .md\:w-\[672px\] { width: 672px; }
  .md\:w-\[calc\(100\%-\.5rem\)\] { width: calc(100% - 0.5rem); }
  .md\:w-auto { width: auto; }
  .md\:w-full { width: 100%; }
  .md\:min-w-\[672px\] { min-width: 672px; }
  .md\:max-w-2xl { max-width: 42rem; }
  .md\:max-w-3xl { max-width: 48rem; }
  .md\:max-w-\[672px\] { max-width: 672px; }
  .md\:max-w-\[680px\] { max-width: 680px; }
  .md\:max-w-none { max-width: none; }
  .md\:max-w-xl { max-width: 36rem; }
  .md\:grid-cols-2 { grid-template-columns: repeat(2, minmax(0px, 1fr)); }
  .md\:grid-rows-\[minmax\(20px\,_1fr\)_auto_minmax\(20px\,_1fr\)\] { grid-template-rows: minmax(20px, 1fr) auto minmax(20px, 1fr); }
  .md\:flex-row { flex-direction: row; }
  .md\:flex-col { flex-direction: column; }
  .md\:items-end { align-items: flex-end; }
  .md\:justify-between { justify-content: space-between; }
  .md\:gap-2 { gap: 0.5rem; }
  .md\:gap-3 { gap: 0.75rem; }
  .md\:gap-6 { gap: 1.5rem; }
  .md\:gap-x-12 { column-gap: 3rem; }
  .md\:overflow-visible { overflow: visible; }
  .md\:whitespace-normal { white-space: normal; }
  .md\:rounded-none { border-radius: 0px; }
  .md\:border { border-width: 1px; }
  .md\:border-l { border-left-width: 1px; }
  .md\:border-t-0 { border-top-width: 0px; }
  .md\:border-gray-100 { --tw-border-opacity: 1; border-color: rgba(236,236,241,var(--tw-border-opacity)); }
  .md\:border-transparent { border-color: transparent; }
  .md\:\!bg-transparent { background-color: transparent !important; }
  .md\:bg-vert-light-gradient { background-image: linear-gradient(rgba(255, 255, 255, 0) 13.94%, rgb(255, 255, 255) 54.73%); }
  .md\:p-2 { padding: 0.5rem; }
  .md\:px-0 { padding-left: 0px; padding-right: 0px; }
  .md\:px-6 { padding-left: 1.5rem; padding-right: 1.5rem; }
  .md\:px-8 { padding-left: 2rem; padding-right: 2rem; }
  .md\:px-\[60px\] { padding-left: 60px; padding-right: 60px; }
  .md\:py-10 { padding-bottom: 2.5rem; padding-top: 2.5rem; }
  .md\:py-2 { padding-bottom: 0.5rem; padding-top: 0.5rem; }
  .md\:py-2\.5 { padding-bottom: 0.625rem; padding-top: 0.625rem; }
  .md\:py-4 { padding-bottom: 1rem; padding-top: 1rem; }
  .md\:py-6 { padding-bottom: 1.5rem; padding-top: 1.5rem; }
  .md\:py-\[22px\] { padding-bottom: 22px; padding-top: 22px; }
  .md\:\!pt-0 { padding-top: 0px !important; }
  .md\:pb-5 { padding-bottom: 1.25rem; }
  .md\:pb-\[8vh\] { padding-bottom: 8vh; }
  .md\:pl-0 { padding-left: 0px; }
  .md\:pl-2 { padding-left: 0.5rem; }
  .md\:pl-4 { padding-left: 1rem; }
  .md\:pl-6 { padding-left: 1.5rem; }
  .md\:pl-\[46px\] { padding-left: 46px; }
  .md\:pr-1 { padding-right: 0.25rem; }
  .md\:pr-1\.5 { padding-right: 0.375rem; }
  .md\:pr-12 { padding-right: 3rem; }
  .md\:pr-4 { padding-right: 1rem; }
  .md\:pr-8 { padding-right: 2rem; }
  .md\:text-justify { text-align: justify; }
  .md\:text-\[32px\] { font-size: 32px; }
  .md\:text-\[40px\] { font-size: 40px; }
  .md\:text-sm { font-size: 0.875rem; line-height: 1.25rem; }
  .md\:leading-8 { line-height: 2rem; }
  .md\:opacity-0 { opacity: 0; }
  .md\:last\:mb-6:last-child { margin-bottom: 1.5rem; }
  .md\:disabled\:bottom-0:disabled { bottom: 0px; }
  .group:hover .md\:group-hover\:visible { visibility: visible; }
  .gizmo .gizmo\:md\:bottom-2 { bottom: 0.5rem; }
  .gizmo .gizmo\:md\:bottom-2\.5 { bottom: 0.625rem; }
  .gizmo .gizmo\:md\:bottom-3 { bottom: 0.75rem; }
  .gizmo .gizmo\:md\:bottom-\[143px\] { bottom: 143px; }
  .gizmo .gizmo\:md\:max-w-3xl { max-width: 48rem; }
  .gizmo .gizmo\:md\:px-5 { padding-left: 1.25rem; padding-right: 1.25rem; }
  .gizmo .gizmo\:md\:py-3 { padding-bottom: 0.75rem; padding-top: 0.75rem; }
  .gizmo .gizmo\:md\:py-3\.5 { padding-bottom: 0.875rem; padding-top: 0.875rem; }
  .dark .md\:dark\:border-gray-700 { --tw-border-opacity: 1; border-color: rgba(64,65,79,var(--tw-border-opacity)); }
  .dark .md\:dark\:border-transparent { border-color: transparent; }
  .dark .dark\:md\:bg-vert-dark-gradient { background-image: linear-gradient(rgba(53, 55, 64, 0), rgb(53, 55, 64) 58.85%); }
}

@media (min-width: 1024px) {
  .lg\:absolute { position: absolute; }
  .lg\:relative { position: relative; }
  .lg\:-left-3 { left: -0.75rem; }
  .lg\:-right-3 { right: -0.75rem; }
  .lg\:bottom-\[120px\] { bottom: 120px; }
  .lg\:left-auto { left: auto; }
  .lg\:right-0 { right: 0px; }
  .lg\:top-0 { top: 0px; }
  .lg\:top-1\/2 { top: 50%; }
  .lg\:-mx-8 { margin-left: -2rem; margin-right: -2rem; }
  .lg\:mx-auto { margin-left: auto; margin-right: auto; }
  .lg\:-ml-2 { margin-left: -0.5rem; }
  .lg\:mb-0 { margin-bottom: 0px; }
  .lg\:mt-0 { margin-top: 0px; }
  .lg\:block { display: block; }
  .lg\:hidden { display: none; }
  .lg\:w-1\/3 { width: 33.3333%; }
  .lg\:w-3\/5 { width: 60%; }
  .lg\:w-\[300px\] { width: 300px; }
  .lg\:w-\[896px\] { width: 896px; }
  .lg\:w-\[calc\(\(100\%-24px\)\/3\)\] { width: calc(33.3333% - 8px); }
  .lg\:w-\[calc\(100\%-115px\)\] { width: calc(100% - 115px); }
  .lg\:w-auto { width: auto; }
  .lg\:min-w-\[896px\] { min-width: 896px; }
  .lg\:max-w-2xl { max-width: 42rem; }
  .lg\:max-w-3xl { max-width: 48rem; }
  .lg\:max-w-\[38rem\] { max-width: 38rem; }
  .lg\:max-w-\[796px\] { max-width: 796px; }
  .lg\:max-w-\[896px\] { max-width: 896px; }
  .lg\:max-w-none { max-width: none; }
  .lg\:max-w-sm { max-width: 24rem; }
  .lg\:max-w-xl { max-width: 36rem; }
  .lg\:-translate-x-full { --tw-translate-x: -100%; }
  .lg\:-translate-x-full, .lg\:-translate-y-1\/2 { transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }
  .lg\:-translate-y-1\/2 { --tw-translate-y: -50%; }
  .lg\:translate-x-full { --tw-translate-x: 100%; }
  .lg\:translate-x-full, .lg\:translate-y-0 { transform: translate(var(--tw-translate-x),var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y)); }
  .lg\:translate-y-0 { --tw-translate-y: 0px; }
  .lg\:grid-cols-3 { grid-template-columns: repeat(3, minmax(0px, 1fr)); }
  .lg\:grid-cols-4 { grid-template-columns: repeat(4, minmax(0px, 1fr)); }
  .lg\:grid-cols-\[60\%_40\%\] { grid-template-columns: 60% 40%; }
  .lg\:gap-1 { gap: 0.25rem; }
  .lg\:self-center { align-self: center; }
  .lg\:rounded-lg { border-radius: 0.5rem; }
  .lg\:rounded-none { border-radius: 0px; }
  .lg\:border { border-width: 1px; }
  .lg\:border-0 { border-width: 0px; }
  .lg\:p-0 { padding: 0px; }
  .lg\:p-6 { padding: 1.5rem; }
  .lg\:px-0 { padding-left: 0px; padding-right: 0px; }
  .lg\:px-14 { padding-left: 3.5rem; padding-right: 3.5rem; }
  .lg\:px-16 { padding-left: 4rem; padding-right: 4rem; }
  .lg\:px-8 { padding-left: 2rem; padding-right: 2rem; }
  .lg\:pl-2 { padding-left: 0.5rem; }
  .lg\:pl-8 { padding-left: 2rem; }
  .lg\:pr-10 { padding-right: 2.5rem; }
  .lg\:pt-32 { padding-top: 8rem; }
  .lg\:text-left { text-align: left; }
  .lg\:text-\[22px\] { font-size: 22px; }
  .gizmo .gizmo\:lg\:max-w-\[40rem\] { max-width: 40rem; }
  .gizmo .gizmo\:lg\:justify-start { justify-content: flex-start; }
  .gizmo .gizmo\:lg\:px-1 { padding-left: 0.25rem; padding-right: 0.25rem; }
}

@media (min-width: 1280px) {
  .xl\:w-1\/4 { width: 25%; }
  .xl\:w-\[1024px\] { width: 1024px; }
  .xl\:w-\[350px\] { width: 350px; }
  .xl\:min-w-\[1024px\] { min-width: 1024px; }
  .xl\:max-w-3xl { max-width: 48rem; }
  .xl\:max-w-4xl { max-width: 56rem; }
  .xl\:max-w-6xl { max-width: 72rem; }
  .xl\:max-w-xl { max-width: 36rem; }
  .xl\:max-w-xs { max-width: 20rem; }
  .xl\:grid-cols-4 { grid-template-columns: repeat(4, minmax(0px, 1fr)); }
  .gizmo .gizmo\:xl\:max-w-\[48rem\] { max-width: 48rem; }
  .gizmo .gizmo\:xl\:px-5 { padding-left: 1.25rem; padding-right: 1.25rem; }
}

@media (min-width: 1536px) {
  .\32 xl\:w-\[400px\] { width: 400px; }
}

tr:last-child .\[tr\:last-child_\&\]\:border-b-0 { border-bottom-width: 0px; }

tr[data-disabled="true"] .\[tr\[data-disabled\=true\]_\&\]\:opacity-50 { opacity: 0.5; }

@font-face { font-family: KaTeX_AMS; font-style: normal; font-weight: 400; src: url("https://cdn.openai.com/common/fonts/katex/KaTeX_AMS-Regular.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Caligraphic; font-style: normal; font-weight: 700; src: url("https://cdn.openai.com/common/fonts/katex/KaTeX_Caligraphic-Bold.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Caligraphic; font-style: normal; font-weight: 400; src: url("https://cdn.openai.com/common/fonts/katex/KaTeX_Caligraphic-Regular.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Fraktur; font-style: normal; font-weight: 700; src: url("https://cdn.openai.com/common/fonts/katex/KaTeX_Fraktur-Bold.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Fraktur; font-style: normal; font-weight: 400; src: url("https://cdn.openai.com/common/fonts/katex/KaTeX_Fraktur-Regular.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Main; font-style: normal; font-weight: 700; src: url("https://cdn.openai.com/common/fonts/katex/KaTeX_Main-Bold.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Main; font-style: italic; font-weight: 700; src: url("https://cdn.openai.com/common/fonts/katex/KaTeX_Main-BoldItalic.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Main; font-style: italic; font-weight: 400; src: url("https://cdn.openai.com/common/fonts/katex/KaTeX_Main-Italic.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Main; font-style: normal; font-weight: 400; src: url("https://cdn.openai.com/common/fonts/katex/KaTeX_Main-Regular.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Math; font-style: italic; font-weight: 700; src: url("https://cdn.openai.com/common/fonts/katex/KaTeX_Math-BoldItalic.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Math; font-style: italic; font-weight: 400; src: url("https://cdn.openai.com/common/fonts/katex/KaTeX_Math-Italic.woff2") format("woff2"); }

@font-face { font-family: KaTeX_SansSerif; font-style: normal; font-weight: 700; src: url("https://cdn.openai.com/common/fonts/katex/KaTeX_SansSerif-Bold.woff2") format("woff2"); }

@font-face { font-family: KaTeX_SansSerif; font-style: italic; font-weight: 400; src: url("https://cdn.openai.com/common/fonts/katex/KaTeX_SansSerif-Italic.woff2") format("woff2"); }

@font-face { font-family: KaTeX_SansSerif; font-style: normal; font-weight: 400; src: url("https://cdn.openai.com/common/fonts/katex/KaTeX_SansSerif-Regular.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Script; font-style: normal; font-weight: 400; src: url("https://cdn.openai.com/common/fonts/katex/KaTeX_Script-Regular.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Size1; font-style: normal; font-weight: 400; src: url("https://cdn.openai.com/common/fonts/katex/KaTeX_Size1-Regular.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Size2; font-style: normal; font-weight: 400; src: url("https://cdn.openai.com/common/fonts/katex/KaTeX_Size2-Regular.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Size3; font-style: normal; font-weight: 400; src: url("https://cdn.openai.com/common/fonts/katex/KaTeX_Size3-Regular.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Size4; font-style: normal; font-weight: 400; src: url("https://cdn.openai.com/common/fonts/katex/KaTeX_Size4-Regular.woff2") format("woff2"); }

@font-face { font-family: KaTeX_Typewriter; font-style: normal; font-weight: 400; src: url("https://cdn.openai.com/common/fonts/katex/KaTeX_Typewriter-Regular.woff2") format("woff2"); }

.katex { font: 1.21em / 1.2 KaTeX_Main, "Times New Roman", serif; text-indent: 0px; text-rendering: auto; }

.katex * { border-color: currentcolor; forced-color-adjust: none !important; }

.katex .katex-version::after { content: "0.16.0"; }

.katex .katex-mathml { clip: rect(1px, 1px, 1px, 1px); border: 0px; height: 1px; overflow: hidden; padding: 0px; position: absolute; width: 1px; }

.katex .katex-html > .newline { display: block; }

.katex .base { position: relative; white-space: nowrap; width: min-content; }

.katex .base, .katex .strut { display: inline-block; }

.katex .textbf { font-weight: 700; }

.katex .textit { font-style: italic; }

.katex .textrm { font-family: KaTeX_Main; }

.katex .textsf { font-family: KaTeX_SansSerif; }

.katex .texttt { font-family: KaTeX_Typewriter; }

.katex .mathnormal { font-family: KaTeX_Math; font-style: italic; }

.katex .mathit { font-family: KaTeX_Main; font-style: italic; }

.katex .mathrm { font-style: normal; }

.katex .mathbf { font-family: KaTeX_Main; font-weight: 700; }

.katex .boldsymbol { font-family: KaTeX_Math; font-style: italic; font-weight: 700; }

.katex .amsrm, .katex .mathbb, .katex .textbb { font-family: KaTeX_AMS; }

.katex .mathcal { font-family: KaTeX_Caligraphic; }

.katex .mathfrak, .katex .textfrak { font-family: KaTeX_Fraktur; }

.katex .mathtt { font-family: KaTeX_Typewriter; }

.katex .mathscr, .katex .textscr { font-family: KaTeX_Script; }

.katex .mathsf, .katex .textsf { font-family: KaTeX_SansSerif; }

.katex .mathboldsf, .katex .textboldsf { font-family: KaTeX_SansSerif; font-weight: 700; }

.katex .mathitsf, .katex .textitsf { font-family: KaTeX_SansSerif; font-style: italic; }

.katex .mainrm { font-family: KaTeX_Main; font-style: normal; }

.katex .vlist-t { border-collapse: collapse; display: inline-table; table-layout: fixed; }

.katex .vlist-r { display: table-row; }

.katex .vlist { display: table-cell; position: relative; vertical-align: bottom; }

.katex .vlist > span { display: block; height: 0px; position: relative; }

.katex .vlist > span > span { display: inline-block; }

.katex .vlist > span > .pstrut { overflow: hidden; width: 0px; }

.katex .vlist-t2 { margin-right: -2px; }

.katex .vlist-s { display: table-cell; font-size: 1px; min-width: 2px; vertical-align: bottom; width: 2px; }

.katex .vbox { align-items: baseline; display: inline-flex; flex-direction: column; }

.katex .hbox { width: 100%; }

.katex .hbox, .katex .thinbox { display: inline-flex; flex-direction: row; }

.katex .thinbox { max-width: 0px; width: 0px; }

.katex .msupsub { text-align: left; }

.katex .mfrac > span > span { text-align: center; }

.katex .mfrac .frac-line { border-bottom-style: solid; display: inline-block; width: 100%; }

.katex .hdashline, .katex .hline, .katex .mfrac .frac-line, .katex .overline .overline-line, .katex .rule, .katex .underline .underline-line { min-height: 1px; }

.katex .mspace { display: inline-block; }

.katex .clap, .katex .llap, .katex .rlap { position: relative; width: 0px; }

.katex .clap > .inner, .katex .llap > .inner, .katex .rlap > .inner { position: absolute; }

.katex .clap > .fix, .katex .llap > .fix, .katex .rlap > .fix { display: inline-block; }

.katex .llap > .inner { right: 0px; }

.katex .clap > .inner, .katex .rlap > .inner { left: 0px; }

.katex .clap > .inner > span { margin-left: -50%; margin-right: 50%; }

.katex .rule { border: 0px solid; display: inline-block; position: relative; }

.katex .hline, .katex .overline .overline-line, .katex .underline .underline-line { border-bottom-style: solid; display: inline-block; width: 100%; }

.katex .hdashline { border-bottom-style: dashed; display: inline-block; width: 100%; }

.katex .sqrt > .root { margin-left: 0.277778em; margin-right: -0.555556em; }

.katex .fontsize-ensurer.reset-size1.size1, .katex .sizing.reset-size1.size1 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size1.size2, .katex .sizing.reset-size1.size2 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size1.size3, .katex .sizing.reset-size1.size3 { font-size: 1.4em; }

.katex .fontsize-ensurer.reset-size1.size4, .katex .sizing.reset-size1.size4 { font-size: 1.6em; }

.katex .fontsize-ensurer.reset-size1.size5, .katex .sizing.reset-size1.size5 { font-size: 1.8em; }

.katex .fontsize-ensurer.reset-size1.size6, .katex .sizing.reset-size1.size6 { font-size: 2em; }

.katex .fontsize-ensurer.reset-size1.size7, .katex .sizing.reset-size1.size7 { font-size: 2.4em; }

.katex .fontsize-ensurer.reset-size1.size8, .katex .sizing.reset-size1.size8 { font-size: 2.88em; }

.katex .fontsize-ensurer.reset-size1.size9, .katex .sizing.reset-size1.size9 { font-size: 3.456em; }

.katex .fontsize-ensurer.reset-size1.size10, .katex .sizing.reset-size1.size10 { font-size: 4.148em; }

.katex .fontsize-ensurer.reset-size1.size11, .katex .sizing.reset-size1.size11 { font-size: 4.976em; }

.katex .fontsize-ensurer.reset-size2.size1, .katex .sizing.reset-size2.size1 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size2.size2, .katex .sizing.reset-size2.size2 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size2.size3, .katex .sizing.reset-size2.size3 { font-size: 1.16667em; }

.katex .fontsize-ensurer.reset-size2.size4, .katex .sizing.reset-size2.size4 { font-size: 1.33333em; }

.katex .fontsize-ensurer.reset-size2.size5, .katex .sizing.reset-size2.size5 { font-size: 1.5em; }

.katex .fontsize-ensurer.reset-size2.size6, .katex .sizing.reset-size2.size6 { font-size: 1.66667em; }

.katex .fontsize-ensurer.reset-size2.size7, .katex .sizing.reset-size2.size7 { font-size: 2em; }

.katex .fontsize-ensurer.reset-size2.size8, .katex .sizing.reset-size2.size8 { font-size: 2.4em; }

.katex .fontsize-ensurer.reset-size2.size9, .katex .sizing.reset-size2.size9 { font-size: 2.88em; }

.katex .fontsize-ensurer.reset-size2.size10, .katex .sizing.reset-size2.size10 { font-size: 3.45667em; }

.katex .fontsize-ensurer.reset-size2.size11, .katex .sizing.reset-size2.size11 { font-size: 4.14667em; }

.katex .fontsize-ensurer.reset-size3.size1, .katex .sizing.reset-size3.size1 { font-size: 0.714286em; }

.katex .fontsize-ensurer.reset-size3.size2, .katex .sizing.reset-size3.size2 { font-size: 0.857143em; }

.katex .fontsize-ensurer.reset-size3.size3, .katex .sizing.reset-size3.size3 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size3.size4, .katex .sizing.reset-size3.size4 { font-size: 1.14286em; }

.katex .fontsize-ensurer.reset-size3.size5, .katex .sizing.reset-size3.size5 { font-size: 1.28571em; }

.katex .fontsize-ensurer.reset-size3.size6, .katex .sizing.reset-size3.size6 { font-size: 1.42857em; }

.katex .fontsize-ensurer.reset-size3.size7, .katex .sizing.reset-size3.size7 { font-size: 1.71429em; }

.katex .fontsize-ensurer.reset-size3.size8, .katex .sizing.reset-size3.size8 { font-size: 2.05714em; }

.katex .fontsize-ensurer.reset-size3.size9, .katex .sizing.reset-size3.size9 { font-size: 2.46857em; }

.katex .fontsize-ensurer.reset-size3.size10, .katex .sizing.reset-size3.size10 { font-size: 2.96286em; }

.katex .fontsize-ensurer.reset-size3.size11, .katex .sizing.reset-size3.size11 { font-size: 3.55429em; }

.katex .fontsize-ensurer.reset-size4.size1, .katex .sizing.reset-size4.size1 { font-size: 0.625em; }

.katex .fontsize-ensurer.reset-size4.size2, .katex .sizing.reset-size4.size2 { font-size: 0.75em; }

.katex .fontsize-ensurer.reset-size4.size3, .katex .sizing.reset-size4.size3 { font-size: 0.875em; }

.katex .fontsize-ensurer.reset-size4.size4, .katex .sizing.reset-size4.size4 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size4.size5, .katex .sizing.reset-size4.size5 { font-size: 1.125em; }

.katex .fontsize-ensurer.reset-size4.size6, .katex .sizing.reset-size4.size6 { font-size: 1.25em; }

.katex .fontsize-ensurer.reset-size4.size7, .katex .sizing.reset-size4.size7 { font-size: 1.5em; }

.katex .fontsize-ensurer.reset-size4.size8, .katex .sizing.reset-size4.size8 { font-size: 1.8em; }

.katex .fontsize-ensurer.reset-size4.size9, .katex .sizing.reset-size4.size9 { font-size: 2.16em; }

.katex .fontsize-ensurer.reset-size4.size10, .katex .sizing.reset-size4.size10 { font-size: 2.5925em; }

.katex .fontsize-ensurer.reset-size4.size11, .katex .sizing.reset-size4.size11 { font-size: 3.11em; }

.katex .fontsize-ensurer.reset-size5.size1, .katex .sizing.reset-size5.size1 { font-size: 0.555556em; }

.katex .fontsize-ensurer.reset-size5.size2, .katex .sizing.reset-size5.size2 { font-size: 0.666667em; }

.katex .fontsize-ensurer.reset-size5.size3, .katex .sizing.reset-size5.size3 { font-size: 0.777778em; }

.katex .fontsize-ensurer.reset-size5.size4, .katex .sizing.reset-size5.size4 { font-size: 0.888889em; }

.katex .fontsize-ensurer.reset-size5.size5, .katex .sizing.reset-size5.size5 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size5.size6, .katex .sizing.reset-size5.size6 { font-size: 1.11111em; }

.katex .fontsize-ensurer.reset-size5.size7, .katex .sizing.reset-size5.size7 { font-size: 1.33333em; }

.katex .fontsize-ensurer.reset-size5.size8, .katex .sizing.reset-size5.size8 { font-size: 1.6em; }

.katex .fontsize-ensurer.reset-size5.size9, .katex .sizing.reset-size5.size9 { font-size: 1.92em; }

.katex .fontsize-ensurer.reset-size5.size10, .katex .sizing.reset-size5.size10 { font-size: 2.30444em; }

.katex .fontsize-ensurer.reset-size5.size11, .katex .sizing.reset-size5.size11 { font-size: 2.76444em; }

.katex .fontsize-ensurer.reset-size6.size1, .katex .sizing.reset-size6.size1 { font-size: 0.5em; }

.katex .fontsize-ensurer.reset-size6.size2, .katex .sizing.reset-size6.size2 { font-size: 0.6em; }

.katex .fontsize-ensurer.reset-size6.size3, .katex .sizing.reset-size6.size3 { font-size: 0.7em; }

.katex .fontsize-ensurer.reset-size6.size4, .katex .sizing.reset-size6.size4 { font-size: 0.8em; }

.katex .fontsize-ensurer.reset-size6.size5, .katex .sizing.reset-size6.size5 { font-size: 0.9em; }

.katex .fontsize-ensurer.reset-size6.size6, .katex .sizing.reset-size6.size6 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size6.size7, .katex .sizing.reset-size6.size7 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size6.size8, .katex .sizing.reset-size6.size8 { font-size: 1.44em; }

.katex .fontsize-ensurer.reset-size6.size9, .katex .sizing.reset-size6.size9 { font-size: 1.728em; }

.katex .fontsize-ensurer.reset-size6.size10, .katex .sizing.reset-size6.size10 { font-size: 2.074em; }

.katex .fontsize-ensurer.reset-size6.size11, .katex .sizing.reset-size6.size11 { font-size: 2.488em; }

.katex .fontsize-ensurer.reset-size7.size1, .katex .sizing.reset-size7.size1 { font-size: 0.416667em; }

.katex .fontsize-ensurer.reset-size7.size2, .katex .sizing.reset-size7.size2 { font-size: 0.5em; }

.katex .fontsize-ensurer.reset-size7.size3, .katex .sizing.reset-size7.size3 { font-size: 0.583333em; }

.katex .fontsize-ensurer.reset-size7.size4, .katex .sizing.reset-size7.size4 { font-size: 0.666667em; }

.katex .fontsize-ensurer.reset-size7.size5, .katex .sizing.reset-size7.size5 { font-size: 0.75em; }

.katex .fontsize-ensurer.reset-size7.size6, .katex .sizing.reset-size7.size6 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size7.size7, .katex .sizing.reset-size7.size7 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size7.size8, .katex .sizing.reset-size7.size8 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size7.size9, .katex .sizing.reset-size7.size9 { font-size: 1.44em; }

.katex .fontsize-ensurer.reset-size7.size10, .katex .sizing.reset-size7.size10 { font-size: 1.72833em; }

.katex .fontsize-ensurer.reset-size7.size11, .katex .sizing.reset-size7.size11 { font-size: 2.07333em; }

.katex .fontsize-ensurer.reset-size8.size1, .katex .sizing.reset-size8.size1 { font-size: 0.347222em; }

.katex .fontsize-ensurer.reset-size8.size2, .katex .sizing.reset-size8.size2 { font-size: 0.416667em; }

.katex .fontsize-ensurer.reset-size8.size3, .katex .sizing.reset-size8.size3 { font-size: 0.486111em; }

.katex .fontsize-ensurer.reset-size8.size4, .katex .sizing.reset-size8.size4 { font-size: 0.555556em; }

.katex .fontsize-ensurer.reset-size8.size5, .katex .sizing.reset-size8.size5 { font-size: 0.625em; }

.katex .fontsize-ensurer.reset-size8.size6, .katex .sizing.reset-size8.size6 { font-size: 0.694444em; }

.katex .fontsize-ensurer.reset-size8.size7, .katex .sizing.reset-size8.size7 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size8.size8, .katex .sizing.reset-size8.size8 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size8.size9, .katex .sizing.reset-size8.size9 { font-size: 1.2em; }

.katex .fontsize-ensurer.reset-size8.size10, .katex .sizing.reset-size8.size10 { font-size: 1.44028em; }

.katex .fontsize-ensurer.reset-size8.size11, .katex .sizing.reset-size8.size11 { font-size: 1.72778em; }

.katex .fontsize-ensurer.reset-size9.size1, .katex .sizing.reset-size9.size1 { font-size: 0.289352em; }

.katex .fontsize-ensurer.reset-size9.size2, .katex .sizing.reset-size9.size2 { font-size: 0.347222em; }

.katex .fontsize-ensurer.reset-size9.size3, .katex .sizing.reset-size9.size3 { font-size: 0.405093em; }

.katex .fontsize-ensurer.reset-size9.size4, .katex .sizing.reset-size9.size4 { font-size: 0.462963em; }

.katex .fontsize-ensurer.reset-size9.size5, .katex .sizing.reset-size9.size5 { font-size: 0.520833em; }

.katex .fontsize-ensurer.reset-size9.size6, .katex .sizing.reset-size9.size6 { font-size: 0.578704em; }

.katex .fontsize-ensurer.reset-size9.size7, .katex .sizing.reset-size9.size7 { font-size: 0.694444em; }

.katex .fontsize-ensurer.reset-size9.size8, .katex .sizing.reset-size9.size8 { font-size: 0.833333em; }

.katex .fontsize-ensurer.reset-size9.size9, .katex .sizing.reset-size9.size9 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size9.size10, .katex .sizing.reset-size9.size10 { font-size: 1.20023em; }

.katex .fontsize-ensurer.reset-size9.size11, .katex .sizing.reset-size9.size11 { font-size: 1.43981em; }

.katex .fontsize-ensurer.reset-size10.size1, .katex .sizing.reset-size10.size1 { font-size: 0.24108em; }

.katex .fontsize-ensurer.reset-size10.size2, .katex .sizing.reset-size10.size2 { font-size: 0.289296em; }

.katex .fontsize-ensurer.reset-size10.size3, .katex .sizing.reset-size10.size3 { font-size: 0.337512em; }

.katex .fontsize-ensurer.reset-size10.size4, .katex .sizing.reset-size10.size4 { font-size: 0.385728em; }

.katex .fontsize-ensurer.reset-size10.size5, .katex .sizing.reset-size10.size5 { font-size: 0.433944em; }

.katex .fontsize-ensurer.reset-size10.size6, .katex .sizing.reset-size10.size6 { font-size: 0.48216em; }

.katex .fontsize-ensurer.reset-size10.size7, .katex .sizing.reset-size10.size7 { font-size: 0.578592em; }

.katex .fontsize-ensurer.reset-size10.size8, .katex .sizing.reset-size10.size8 { font-size: 0.694311em; }

.katex .fontsize-ensurer.reset-size10.size9, .katex .sizing.reset-size10.size9 { font-size: 0.833173em; }

.katex .fontsize-ensurer.reset-size10.size10, .katex .sizing.reset-size10.size10 { font-size: 1em; }

.katex .fontsize-ensurer.reset-size10.size11, .katex .sizing.reset-size10.size11 { font-size: 1.19961em; }

.katex .fontsize-ensurer.reset-size11.size1, .katex .sizing.reset-size11.size1 { font-size: 0.200965em; }

.katex .fontsize-ensurer.reset-size11.size2, .katex .sizing.reset-size11.size2 { font-size: 0.241158em; }

.katex .fontsize-ensurer.reset-size11.size3, .katex .sizing.reset-size11.size3 { font-size: 0.28135em; }

.katex .fontsize-ensurer.reset-size11.size4, .katex .sizing.reset-size11.size4 { font-size: 0.321543em; }

.katex .fontsize-ensurer.reset-size11.size5, .katex .sizing.reset-size11.size5 { font-size: 0.361736em; }

.katex .fontsize-ensurer.reset-size11.size6, .katex .sizing.reset-size11.size6 { font-size: 0.401929em; }

.katex .fontsize-ensurer.reset-size11.size7, .katex .sizing.reset-size11.size7 { font-size: 0.482315em; }

.katex .fontsize-ensurer.reset-size11.size8, .katex .sizing.reset-size11.size8 { font-size: 0.578778em; }

.katex .fontsize-ensurer.reset-size11.size9, .katex .sizing.reset-size11.size9 { font-size: 0.694534em; }

.katex .fontsize-ensurer.reset-size11.size10, .katex .sizing.reset-size11.size10 { font-size: 0.833601em; }

.katex .fontsize-ensurer.reset-size11.size11, .katex .sizing.reset-size11.size11 { font-size: 1em; }

.katex .delimsizing.size1 { font-family: KaTeX_Size1; }

.katex .delimsizing.size2 { font-family: KaTeX_Size2; }

.katex .delimsizing.size3 { font-family: KaTeX_Size3; }

.katex .delimsizing.size4 { font-family: KaTeX_Size4; }

.katex .delimsizing.mult .delim-size1 > span { font-family: KaTeX_Size1; }

.katex .delimsizing.mult .delim-size4 > span { font-family: KaTeX_Size4; }

.katex .nulldelimiter { display: inline-block; width: 0.12em; }

.katex .delimcenter, .katex .op-symbol { position: relative; }

.katex .op-symbol.small-op { font-family: KaTeX_Size1; }

.katex .op-symbol.large-op { font-family: KaTeX_Size2; }

.katex .accent > .vlist-t, .katex .op-limits > .vlist-t { text-align: center; }

.katex .accent .accent-body { position: relative; }

.katex .accent .accent-body:not(.accent-full) { width: 0px; }

.katex .overlay { display: block; }

.katex .mtable .vertical-separator { display: inline-block; min-width: 1px; }

.katex .mtable .arraycolsep { display: inline-block; }

.katex .mtable .col-align-c > .vlist-t { text-align: center; }

.katex .mtable .col-align-l > .vlist-t { text-align: left; }

.katex .mtable .col-align-r > .vlist-t { text-align: right; }

.katex .svg-align { text-align: left; }

.katex svg { fill: currentcolor; stroke: currentcolor; fill-rule: nonzero; fill-opacity: 1; stroke-width: 1; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 4; stroke-dasharray: none; stroke-dashoffset: 0; stroke-opacity: 1; display: block; height: inherit; position: absolute; width: 100%; }

.katex svg path { stroke: none; }

.katex img { border-style: none; max-height: none; max-width: none; min-height: 0px; min-width: 0px; }

.katex .stretchy { display: block; overflow: hidden; position: relative; width: 100%; }

.katex .stretchy::after, .katex .stretchy::before { content: ""; }

.katex .hide-tail { overflow: hidden; position: relative; width: 100%; }

.katex .halfarrow-left { left: 0px; overflow: hidden; position: absolute; width: 50.2%; }

.katex .halfarrow-right { overflow: hidden; position: absolute; right: 0px; width: 50.2%; }

.katex .brace-left { left: 0px; overflow: hidden; position: absolute; width: 25.1%; }

.katex .brace-center { left: 25%; overflow: hidden; position: absolute; width: 50%; }

.katex .brace-right { overflow: hidden; position: absolute; right: 0px; width: 25.1%; }

.katex .x-arrow-pad { padding: 0px 0.5em; }

.katex .cd-arrow-pad { padding: 0px 0.55556em 0px 0.27778em; }

.katex .mover, .katex .munder, .katex .x-arrow { text-align: center; }

.katex .boxpad { padding: 0px 0.3em; }

.katex .fbox, .katex .fcolorbox { border: 0.04em solid; box-sizing: border-box; }

.katex .cancel-pad { padding: 0px 0.2em; }

.katex .cancel-lap { margin-left: -0.2em; margin-right: -0.2em; }

.katex .sout { border-bottom-style: solid; border-bottom-width: 0.08em; }

.katex .angl { border-right: 0.049em solid; border-top: 0.049em solid; box-sizing: border-box; margin-right: 0.03889em; }

.katex .anglpad { padding: 0px 0.03889em; }

.katex .eqn-num::before { content: "(" counter(katexEqnNo) ")"; counter-increment: katexEqnNo 1; }

.katex .mml-eqn-num::before { content: "(" counter(mmlEqnNo) ")"; counter-increment: mmlEqnNo 1; }

.katex .mtr-glue { width: 50%; }

.katex .cd-vert-arrow { display: inline-block; position: relative; }

.katex .cd-label-left { display: inline-block; position: absolute; right: calc(50% + 0.3em); text-align: left; }

.katex .cd-label-right { display: inline-block; left: calc(50% + 0.3em); position: absolute; text-align: right; }

.katex-display { display: block; margin: 1em 0px; text-align: center; }

.katex-display > .katex { display: block; text-align: center; white-space: nowrap; }

.katex-display > .katex > .katex-html { display: block; position: relative; }

.katex-display > .katex > .katex-html > .tag { position: absolute; right: 0px; }

.katex-display.leqno > .katex > .katex-html > .tag { left: 0px; right: auto; }

.katex-display.fleqn > .katex { padding-left: 2em; text-align: left; }

body { counter-reset: katexEqnNo 0 mmlEqnNo 0; }

code, pre { font-family: "SÃ¶hne Mono", Monaco, "Andale Mono", "Ubuntu Mono", monospace !important; }

code[class="language-plaintext"] { white-space: pre-line; }

code.hljs, code[class*="language-"], pre[class*="language-"] { overflow-wrap: normal; background: none; color: rgb(255, 255, 255); hyphens: none; line-height: 1.5; tab-size: 4; text-align: left; white-space: pre; word-break: normal; word-spacing: normal; }

pre[class*="language-"] { border-radius: 0.3em; overflow: auto; }

:not(pre) > code.hljs, :not(pre) > code[class*="language-"] { border-radius: 0.3em; padding: 0.1em; white-space: normal; }

.hljs-comment { color: rgba(255, 255, 255, 0.5); }

.hljs-meta { color: rgba(255, 255, 255, 0.6); }

.hljs-built_in, .hljs-class .hljs-title { color: rgb(233, 149, 12); }

.hljs-doctag, .hljs-formula, .hljs-keyword, .hljs-literal { color: rgb(46, 149, 211); }

.hljs-addition, .hljs-attribute, .hljs-meta-string, .hljs-regexp, .hljs-string { color: rgb(0, 166, 125); }

.hljs-attr, .hljs-number, .hljs-selector-attr, .hljs-selector-class, .hljs-selector-pseudo, .hljs-template-variable, .hljs-type, .hljs-variable { color: rgb(223, 48, 121); }

.hljs-bullet, .hljs-link, .hljs-selector-id, .hljs-symbol, .hljs-title { color: rgb(242, 44, 61); }

.token.cdata, .token.comment, .token.doctype, .token.prolog { color: rgb(169, 174, 193); }

.token.punctuation { color: rgb(254, 254, 254); }

.token.constant, .token.deleted, .token.property, .token.symbol, .token.tag { color: rgb(255, 160, 122); }

.token.boolean, .token.number { color: rgb(0, 224, 224); }

.token.attr-name, .token.builtin, .token.char, .token.inserted, .token.selector, .token.string { color: rgb(171, 227, 56); }

.language-css .token.string, .style .token.string, .token.entity, .token.operator, .token.url, .token.variable { color: rgb(0, 224, 224); }

.token.atrule, .token.attr-value, .token.function { color: gold; }

.token.keyword { color: rgb(0, 224, 224); }

.token.important, .token.regex { color: gold; }

.token.bold, .token.important { font-weight: 700; }

.token.italic { font-style: italic; }

.token.entity { cursor: help; }

@media screen and (-ms-high-contrast: active) {
  code[class*="language-"], pre[class*="language-"] { background: window; color: windowtext; }
  :not(pre) > code[class*="language-"], pre[class*="language-"] { background: window; }
  .token.important { background: highlight; color: window; font-weight: 400; }
  .token.atrule, .token.attr-value, .token.function, .token.keyword, .token.operator, .token.selector { font-weight: 700; }
  .token.attr-value, .token.comment, .token.doctype, .token.function, .token.keyword, .token.operator, .token.property, .token.string { color: highlight; }
  .token.attr-value, .token.url { font-weight: 400; }
}

.PopoverContent { z-index: 1000; }

.react-select-container input:focus { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent); }

.react-select-container .react-select__control { --tw-border-opacity: 1; align-items: flex-start; border-color: rgba(236,236,241,var(--tw-border-opacity)); border-radius: 0.5rem; font-size: 0.875rem; height: 192px; line-height: 1.25rem; min-height: 192px; overflow: auto; padding: 0.5rem; }

.react-select-container .react-select__control:hover { --tw-border-opacity: 1; border-color: rgba(217,217,227,var(--tw-border-opacity)); }

.dark .react-select-container .react-select__control { --tw-bg-opacity: 1; background-color: rgba(32,33,35,var(--tw-bg-opacity)); border-color: rgba(255, 255, 255, 0.1); }

:is(.dark .react-select-container .react-select__control):hover { border-color: rgba(255, 255, 255, 0.2); }

.dark .react-select-container.react-select--invalid .react-select__control, .react-select-container.react-select--invalid .react-select__control { --tw-border-opacity: 1; border-color: rgba(239,68,68,var(--tw-border-opacity)); }

.react-select-container .react-select__input-container, .react-select-container .react-select__placeholder { padding-left: 0.5rem; padding-right: 0.5rem; }

.dark .react-select-container .react-select__input-container { --tw-text-opacity: 1; color: rgba(197,197,210,var(--tw-text-opacity)); }

.react-select-container .react-select__input { height: 2rem; }

.react-select-container .react-select__control--is-focused { --tw-ring-offset-shadow: var(--tw-ring-inset) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color); --tw-ring-shadow: var(--tw-ring-inset) 0 0 0 calc(var(--tw-ring-offset-width)) var(--tw-ring-color); box-shadow: var(--tw-ring-offset-shadow),var(--tw-ring-shadow),var(--tw-shadow,0 0 transparent); --tw-border-opacity: 1 !important; border-color: rgba(217,217,227,var(--tw-border-opacity)) !important; }

.dark .react-select-container .react-select__control--is-focused { border-color: rgba(255, 255, 255, 0.2) !important; }

.react-select-container .react-select__value-container { padding: 0px; }

.react-select-container .react-select__indicators:empty { display: none; }

.react-select-container .react-select__multi-value { background-color: transparent; margin: 0px; }

.react-select-container .react-select__multi-value__label { padding: 0px; }

#intercom-container { display: none; }
------MultipartBoundary--Z9KqzfodrjcQ0JM6ImC0VL3qA4c8d5SysG3s5sso3Z----
Content-Type: image/webp
Content-Transfer-Encoding: binary
Content-Location: https://chat.openai.com/_next/image?url=https%3A%2F%2Fs.gravatar.com%2Favatar%2F6241bfe48785687ad5d68f5c836fbe6d%3Fs%3D480%26r%3Dpg%26d%3Dhttps%253A%252F%252Fcdn.auth0.com%252Favatars%252Fna.png&w=96&q=75

RIFF   WEBPVP8   Ð
 *` ` >H J¥¥#¡¦[h°	c Rºèlyæâ¿-@J±ÝÔôuÃcµX
jsrÔI¬ØzPäDà þ¸dýWÜÏT¿â½X:` ÖÍ¶ÙÀ¶*òÿÝD@øP6à^ðf%ÎÕf «ZDÔó*w}ò3ï¿æK+-8s|¾Xµº®OÃv¶9|'Î(YæÞ÷|Ø94C1&M!|ìàß¢(ûþ¹pÜE°+þÛm¥YÞëÂ2ø>³±'×a'|ÚlÚnDÜ:vÁÄ8UPÎ
¸à&w®d©X²7¼òT÷Ø6üâr þÈC<G{ÌÁ,Û&c.{Çìuüo°õPbeköÞlLöËC/ìBRoÖ¦¤f¨Ë0ð#ÂMËJÈ¨èY 'äC)T­»7¢Z »-nÆ×Øç_±(CÎÆ;æ2ÀèGØp; Ñ"ÛÂ#¶N<<\¸8%þÞÏ«DÌ WÊ1¢±£MçM¼q·©ôoÈ½ãÍÌóä Ä#<¿SäÅE2HÌ
án²Y½À     
------MultipartBoundary--Z9KqzfodrjcQ0JM6ImC0VL3qA4c8d5SysG3s5sso3Z----
Content-Type: text/html
Content-ID: 
Content-Transfer-Encoding: binary





------MultipartBoundary--Z9KqzfodrjcQ0JM6ImC0VL3qA4c8d5SysG3s5sso3Z------
