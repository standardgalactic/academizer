Data Sources and Methods
Open sidebar
Data Sources and Methods
ChatGPT
4
You
Supplementary Materials for: 
Non-assortative relationships between groups of 
nodes are typical in complex networks 
PNAS Nexus, pgad364 (2023) 
Cathy Xuanchi Liu,Tristram J. Alexander,Eduardo G. Altmann 
November 27, 2023 
S1Data 
We consider all networks from the Netzschleuder repository Ref. [30] in the 
main manuscript(accessed Aug. 2022) which belong to one of 5 common do- 
mains (Online Social, Economic, Technological, Biological, Informational) and 
satisfy the following constraints: 1) number of nodes in the largest connected 
component is between 50 and 20,000; 2) not bipartite; and 3) not multilayer 
and no multiple types of edges. For the list of all networks see Table. S1. 
In order to allow the systematic application of the dif f erent community- 
detection methods, we removed all self-loops and we consider only the largest 
connected component of the network. We found 52 networks with 26 undirected 
graphs and 26 directed graphs. 
The data for our i rst case study in Sec. 4 is from Ref. [27]1and corresponds to 
polblogs in the Netzschleuder repository. The data for the second case study in 
Sec. 4 was obtained from the online platform Twitter by (i) collecting all tweets 
containing the word ���climate��� between November 2019 to June 2020, and coming 
from accounts with Australia specif i c locations in the user location metadata; 
(ii) identifying the top 100 most retweeted tweets each day during this period; 
(iii) capturing the user timelines for the authors of these daily top 100 most 
retweeted tweets; and (iv) keeping only retweets in these top-user timelines that 
retweet other top users. The resulting retweet network consists of 4,029 nodes 
representing the top users and 429,235 directed edges representing retweets of 
one top user by another top user (multi-edges are kept). The classif i cation of 
these users was based on the manual classif i cation of individual tweets performed 
in Ref. [28], where the classif i cation of the tweet is attributed to the user. This 
data is available in our repository Ref. [33]. 
1Citations in this document correspond to the references listed at the end of the main 
manuscript.
ChatGPT
ChatGPT
The supplementary materials for the paper titled "Non-assortative relationships between groups of nodes are typical in complex networks" in PNAS Nexus provide detailed information about the data sources and methodologies used in the study. Here's a summary of the key points:
Data Source
: The study used networks from the Netzschleuder repository, specifically those within five domains: Online Social, Economic, Technological, Biological, and Informational. The networks selected had to meet certain criteria: a) the largest connected component having between 50 and 20,000 nodes, b) not being bipartite, and c) not multilayer with multiple types of edges.
Data Preparation
: For community detection methods, self-loops were removed and only the largest connected component of each network was considered. This resulted in 52 networks, split evenly into 26 undirected and 26 directed graphs.
Case Studies
:
First Case Study
: Used data from the polblogs network in the Netzschleuder repository (Ref. [27]).
Second Case Study
: Involved data collected from Twitter. The process included collecting tweets with the word ���climate��� from accounts with Australian locations, identifying the top 100 most retweeted tweets daily, capturing user timelines for these top tweets, and focusing on retweets within these top-user timelines. This resulted in a retweet network with 4,029 nodes and 429,235 directed edges.
User Classification
: Classification of users in the Twitter study was based on the manual classification of individual tweets from a referenced study (Ref. [28]).
Data Availability
: The data used in the study is available in the study's repository (Ref. [33]).
These supplementary materials provide crucial context and detail about the methodologies and data sources used in the research, ensuring transparency and reproducibility of the study's findings.
You
Table S1:Datasets Table:26 undirected graphs and 26 directed graphs. 
Columns include network type(Type), network name(Name),node number(N), 
edge number(E) and the consistency between information l ow and edge direc- 
tion(Information/Edge Direction). 
S2Community detection methods 
The i ve community-detection methods we apply to each network g were chosen 
to represent dif f erent approaches used in this area: 
(i) Modularity-based methods search for partitions of g which maximize a 
quality function (the modularity) which favours groups of densely con- 
nected nodes. Here we use Louvain with the implementation available in 
Ref. [9,35]. 
(ii) Spectral approaches are based on spectra of matrices that represent the 
network and can often be seen as a minimization on the number of edges 
between groups. Here we use the version of spectral clustering based on the 
Bethe-Hessian matrix for heterogeneous graphs available at Ref. [31,38]. 
(iii) A probabilistic approach based on statistical inference can be obtained 
using Stochastic Block Models (SBM) as the random-graph generative 
process Ref. [24,25,26,34].Here we use the degree corrected SBM available 
in Ref.[36]. 
(iv) Dynamical processes that take place on networks provide an alternative 
approach to partition nodes into groups. We use the most popular ap- 
proach, Infomap Ref. [11]., with the implementation available in Ref.[37]. 
3 
(v) Deep-learning methods are increasingly being applied to the community- 
detection problem, in combination with a variety of approaches Ref. [5] 
Here we use the popular DNGR method for learning graph representations, 
as proposed in Ref. [32] and implemented in Ref. [39]. This method can be 
used to partition nodes into groups, as considered here, using an additional 
clustering method. We use k-means as in Ref. [32], with a specif i ed number 
of communities. In the main text we show results for B = 10, similar 
results are obtained for dif f erent B���s (see SM-Sec. S5 below). 
The implementation of these i ve methods is available also in our repository 
Ref. [33]. 
S3Community Structure Statistics 
Consider a B �� B edge density matrix �� obtained applying a community- 
detection method to a network g.The MB��Binteraction 
classif i cation ma- 
trix of �� contains the community structure type �� of all pairs of commu- 
nities r,s ��� [0,B], with �� ��� {���Assortative���, ���Core-Periphery���, ���Disassorta- 
tive���, ���Source-Basin���}, obtained using the classif i cation introduced in Fig. 2 
and Eqs. (3)-(4). The fraction of �� of a network g is then given by counting 
how often �� appears in M as 
P��= 
1 
B(B ��� 1) X 
r��=s 
����,Mr,s,(1) 
where ��x,y= 1 if x = y and ��x,y= 0 if x ��= 0. 
Knowing P��for all structure types �� in a network g, we def i ne the dominant 
type ��das the �� with largest P��and occurring types ��oas the set of �����s with 
P��> 0. We then compute the dominance of each type �� over a set of networks 
g as the fraction of networks that has dominant type ��d= �� as 
Dominance(��) = 
1 
|g| X 
g 
����,��d,(2) 
where |g| is the number of networks in g. Similarly, the occurrence of type �� is 
computed as the fraction of networks in which �� occurs (�� ��� ��o) 
as 
Occurrence(��) = 
1 
|g| X 
g X 
����������o 
����,�����.(3) 
In the results reported in this paper we applied the analysis above only to 
communities with more than 5 nodes, Nr> 5, because small communities play 
a minor role in explaining the properties of the network and the classif i cation 
of their structure types �� is often not robust (when applying the tests reported 
in Sec. S4 below).
ChatGPT
ChatGPT
The supplementary materials for the paper on non-assortative relationships in complex networks include detailed information on the datasets used, community detection methods, and community structure statistics. Here's a breakdown of these sections:
S1: Datasets Table (Table S1)
Content
: A table of 52 networks, split into 26 undirected and 26 directed graphs.
Columns
: Include network type, name, number of nodes (N), number of edges (E), and the consistency between information flow and edge direction.
S2: Community Detection Methods
The study employs five different community detection methods to analyze each network:
Modularity-Based Methods
: Utilizes Louvain method for identifying densely connected node groups.
Spectral Approaches
: Employs spectral clustering based on the Bethe-Hessian matrix for heterogeneous graphs.
Probabilistic Approach
: Uses Stochastic Block Models (SBM) for statistical inference.
Dynamical Processes
: Implements the Infomap method, focusing on dynamical processes on networks.
Deep-Learning Methods
: Applies the DNGR method for learning graph representations, combined with k-means clustering.
S3: Community Structure Statistics
This section details the process for analyzing community structures in the networks:
Edge Density Matrix
: A
B
��
B
B \times B
B
��
B
matrix
��
\omega
��
is obtained using a community-detection method on a network.
Interaction Classification Matrix
: This matrix classifies community structures into types like "Assortative," "Core-Periphery," "Disassortative," and "Source-Basin."
Calculation of Fraction and Dominance
: The fraction of each structure type
P
��
P_\tau
P
��
���
and the dominance of each type across networks are computed.
Focus on Larger Communities
: The analysis is focused on communities with more than 5 nodes for robustness.
This comprehensive analysis framework allows the study to systematically examine complex networks and their community structures. The methodologies used provide a diverse and thorough approach to understanding the relationships between different groups of nodes in these networks.
You
S4Robustness Estimation 
We test the statistical robustness of our classif i cation of communities in types 
by (1) comparing to a null model and (2) considering small perturbations of the 
underlying network. 
S4.1Null model 
We consider a null model of random density matrix ��nullto assess the signif i- 
cance of the results we obtained applying our pairwise classif i cation of commu- 
nity types to ��. Since our pairwise classif i cation depends only on the ranking 
order of the entries in ��, we build ��nullas a random B �� B matrix with en- 
tries from 1 to B2. We then apply our classif i cation ��� def i ned in Fig. 2 of the 
manuscript ��� to obtain the interaction classif i cation matrix Mnull, the structure 
type fraction Pnull 
�� from Eqs. (5), and the dominant type ��null 
d and occurring 
types ��null 
o ��� from Eqs. (6) and (7) of the manuscript��� for the null model. The 
result obtained from this analysis represent our random expectation for an ar- 
bitrary partition of the network g in B communities. We further propose a 
statistic over many networks g by generating null models for each g with the 
same B obtained in the original analysis. This method is summarized in Al- 
gorithm 1. The dominance and occurrence obtained using this null model are 
reported in Fig. 4 of the paper. 
Algorithm 1 Density Null Model 
Require: number of communities B of network g 
1:Randomly assign ranking from 1 to B2to ��null 
B��B 
2:Compute Mnullfrom the classif i cation in Fig. 2 
3:Calculate Pnull 
�� for community type �� from Eq. (S1) 
4:Get dominant type ��null 
d and occurring types ��null 
o 
5:Repeat the steps above for many networks g to compute Dominance(��)null 
and Occurrence(��)nullfrom Eq. (S2) and (S3)
ChatGPT
ChatGPT
In the supplementary materials for the paper on non-assortative relationships in complex networks, Section S4 is dedicated to the estimation of the robustness of the classification of community types. This section details two primary methods used to test the statistical robustness:
S4.1: Null Model
The null model approach is used to assess the significance of the results obtained from the pairwise classification of community types. The key steps involved in this process are:
Construction of Null Model
: A random density matrix
��
null
\omega_{\text{null}}
��
null
���
is created as a
B
��
B
B \times B
B
��
B
matrix with entries ranging from 1 to
B
2
B^2
B
2
, where
B
B
B
is the number of communities in the network
g
g
g
.
Application of Classification
: The classification defined in Figure 2 of the manuscript is applied to this null model to obtain an interaction classification matrix
M
null
M_{\text{null}}
M
null
���
.
Calculation of Structure Type Fraction
: The structure type fraction
P
null
��
P_{\text{null}\tau}
P
null
��
���
is calculated for the null model using equations specified in the manuscript.
Identification of Dominant and Occurring Types
: The dominant type
��
null
d
\tau_{\text{null}d}
��
null
d
���
and occurring types
��
null
o
\tau_{\text{null}o}
��
null
o
���
are determined for the null model.
Statistical Analysis Across Networks
: The process is repeated for multiple networks
g
g
g
, each with their number of communities
B
B
B
, to compute the dominance and occurrence statistics for the null model.
Algorithm 1: Density Null Model
This algorithm is a step-by-step procedure for implementing the null model approach. It involves:
Randomly assigning rankings to the null model matrix
��
null
\omega_{\text{null}}
��
null
���
.
Computing the null interaction classification matrix
M
null
M_{\text{null}}
M
null
���
.
Calculating the null fraction
P
null
��
P_{\text{null}\tau}
P
null
��
���
for each community type.
Determining the dominant and occurring types in the null model.
Repeating these steps for many networks to compute overall statistics of dominance and occurrence in the null model.
The robustness estimation using a null model is crucial for determining the statistical significance of the community classifications in the study. It ensures that the observed patterns are not just random occurrences, but meaningful insights into the network's structure.
You
S4.2Robustness of categorical classif i cation 
Our community structure classif i cation is computed for a given partition of the 
network. In practice, small variations of the network or algorithms (e.g., the 
initialization of optimization steps) may result in (slightly) dif f erent partitions. 
To have a better understanding of the robustness of our classif i cation and results 
to such variations, we introduce a bootstrapping method for estimating the 
uncertainty of the results obtained from our classif i cation. 
Given a certain graph g (with N nodes and E edges) and partition p with 
its corresponding pairwise community classif i cation matrix M, we i rst rewire 
the graph by randomly choosing E edges (with replacement) from the edge list 
of g. We denote this generated graph g���. Then we compute the density matrix 
5 
Algorithm 2 Bootstrapping Robustness Estimation 
Require: Graph g, partition p 
1:Create a rewiring graph g��� 
2:Compute density matrix ����� 
3:Get M���using classif i cation in Eqs. (3) or (4) 
4:Repeat above procedure k times 
5:Calculate certainty Prsfrom Eqs. (S4) 
Fig. S1: Fraction of non-Assortative relationships (y-axis) as a function of the 
number of communities(x-axis) in empirical graphs. Each symbol represents 
a partition result of a network obtained using a specif i c community-detection 
method (see legend). 
�����(based on g���and p) and we obtain a new interaction classif i cation matrix 
M���. We repeat this procedure k times and compute the certainty for each pair 
of communities r and s, Prs, as the fraction of all k interaction classif i cations 
that are equal to the original type 
Prs= 
1 
k 
k X 
1 
��Mrs,M��� rs. (4) 
We applied this analysis in several cases and conf i rmed that our main conclusions 
remain unchanged. In particular, for the two case studies reported in Sec. 4, 
we i nd that all classif i cations for B = 5 lead to Prs> 0.99 except for one 
core-periphery classif i cation in the blogs network which had Pr,s= 0.86 (see 
Fig. S2).
ChatGPT
ChatGPT
Section S4.2 of the supplementary materials for the paper on non-assortative relationships in complex networks discusses the robustness of the categorical classification of community structures. This section introduces a bootstrapping method to estimate the uncertainty of results due to variations in network partitions. The key aspects of this section are:
Bootstrapping Robustness Estimation
The bootstrapping method involves the following steps:
Graph Rewiring
: For a given graph
g
g
g
with
N
N
N
nodes and
E
E
E
edges, and a partition
p
p
p
, the graph is rewired by randomly choosing
E
E
E
edges from the edge list of
g
g
g
. This results in a new graph
g
���
g'
g
���
.
Density Matrix Computation
: For the rewired graph
g
���
g'
g
���
, the density matrix
��
���
\omega'
��
���
is computed based on
g
���
g'
g
���
and partition
p
p
p
.
New Classification Matrix
: A new interaction classification matrix
M
���
M'
M
���
is obtained using the classification defined in the paper (Eqs. 3 or 4).
Repetition and Certainty Calculation
: This process is repeated
k
k
k
times. The certainty for each pair of communities
r
r
r
and
s
s
s
,
P
r
s
P_{rs}
P
rs
���
, is calculated as the fraction of all
k
k
k
interaction classifications that match the original type.
Algorithm 2: Bootstrapping Robustness Estimation
This algorithm details the procedural steps for the bootstrapping method:
Creation of a rewired graph
g
���
g'
g
���
.
Computation of the new density matrix
��
���
\omega'
��
���
.
Obtaining a new interaction classification matrix
M
���
M'
M
���
.
Repeating the procedure
k
k
k
times.
Calculating certainty
P
r
s
P_{rs}
P
rs
���
using a specific formula.
Observations and Case Studies
The method was applied to several cases, and it was found that the main conclusions of the study remained unchanged even with the introduction of variability. Specifically, for the two case studies mentioned in Section 4 of the paper, all classifications for
B
=
5
B = 5
B
=
5
had a certainty
P
r
s
P_{rs}
P
rs
���
greater than 0.99, except for one core-periphery classification in the blogs network, which had
P
r
s
=
0.86
P_{rs} = 0.86
P
rs
���
=
0.86
.
These robustness checks using bootstrapping methods help validate the reliability of the community structure classifications derived from the study, demonstrating that the conclusions are stable even under small variations in network structure and partitioning algorithms.
You
S5Survey 
Apart from dominance and occurrence shown in the main manuscript, we also 
consider an intermediate quantity ��� denoted proportional occurrence ��� to mea- 
6 
Fig. S2: Density matrices for the partition obtained by SBM with B = 5 
for political blogs (left) and B = 4 for bushf i re retweets(right). Colours in- 
dicate the community densities ��r,s.The blocks b = 0,1,...,4 are ranked 
according to community size Nr= {354,291,291,210,76}(left) and Nr= 
{1473,1031,956,563}(right) from community 0 to community 4(left)/3(right). 
As noted in the main text, the edge direction of the political blogs network is 
reversed when compared to the original dataset in order to i t the convention 
used in our text. The labels in each entry of the matrix correspond to the struc- 
ture type �� and robustness score obtained from Eqs.(8) (see Sec. S4, Algorithm 
2), where ���A��� stands for ���Assortative���, ���CP��� stands for ���Core-Periphery���, ���D��� 
stands for ���Disassortative��� and ���SB��� stands for ���Source-Basin���. Left: Commu- 
nity 0 and 3 are in a Source-Basin relationship. Communities 4 and 2 are in a 
Core-Periphery relationship and communities 2 and 1 are in a Core-Periphery 
relationship (i.e., community 2 is a periphery in respect to 4 and core in respect 
to 1). Right: Community 0,1,2 are climate change supporter groups. Commu- 
nity 0 and 2 are in a Source-Basin relationship.

Fig. S3: Average fraction of pairs of the dif f erent types �� (Assortative, Core- 
Periphery, Disassortative, Source-Basin). For each network, we compute the 
proportional occurrence of type ��idef i ned as Eq.(5). The reported results cor- 
respond to the average over 52 networks. 
sure the classif i cation result in empirical networks. Instead of focusing on the 
appearance of a type �� or in the most dominant type ��, here we focus on the frac- 
tion P��of pairs of a given type �� in each network. For each community structure 
type �� ��� {���Assortative���, ���Core-Periphery���, ���Disassortative���, ���Source-Basin���}, 
we average the fraction P��over a set of networks as 
Proportional Occurrence(��) = 
1 
|g| X 
g X 
����������o 
P���������,�����.(5) 
This section shows additional analyses of our survey results. The results 
obtained in our survey using the proportional occurrence method are shown in 
Fig. S3. Separated results for directed and undirected networks are shown in 
Fig. S4. Finally, the results obtained using the DNGR method with dif f erent 
number of communities B are shown in Fig. S5.
ChatGPT
ChatGPT
Section S5 of the supplementary materials for the paper on non-assortative relationships in complex networks introduces the concept of "Proportional Occurrence" as an intermediate quantity for analyzing community structure types in networks. This section extends the analysis beyond the dominance and occurrence measures discussed in the main manuscript. Here are the key points from this section:
Proportional Occurrence
Definition
: Proportional occurrence focuses on the fraction of pairs of a given community structure type
��
\tau
��
in each network.
Calculation
: For each type
��
\tau
��
(Assortative, Core-Periphery, Disassortative, Source-Basin), the proportional occurrence is calculated by averaging the fraction
P
��
P_{\tau}
P
��
���
over a set of networks.
Formula
:
Proportional Occurrence
(
��
)
=
1
���
g
���
���
g
���
��
���
���
��
o
P
��
���
��
��
,
��
���
\text{Proportional Occurrence}(\tau) = \frac{1}{|g|} \sum_{g} \sum_{\tau' \in \tau_o} P_{\tau'} \delta_{\tau, \tau'}
Proportional Occurrence
(
��
)
=
���
g
���
1
���
���
g
���
���
��
���
���
��
o
���
���
P
��
���
���
��
��
,
��
���
���
, where
���
g
���
|g|
���
g
���
is the number of networks, and
��
\delta
��
is the Kronecker delta function.
Empirical Network Analysis
Density Matrices (Fig. S2)
: Density matrices for partitions obtained by Stochastic Block Models (SBM) are provided for two cases: political blogs and bushfire retweets. These matrices show community densities and the relationships between different communities, including Source-Basin and Core-Periphery relations.
Average Fraction of Community Types (Fig. S3)
: The average fraction of pairs of different types
��
\tau
��
(Assortative, Core-Periphery, Disassortative, Source-Basin) is computed across 52 networks.
Directed vs. Undirected Networks (Fig. S4)
: Separate results for directed and undirected networks are presented to highlight differences in community structures.
DNGR Method Analysis (Fig. S5)
: Results obtained using the DNGR method with different numbers of communities
B
B
B
are shown, providing insights into how the choice of
B
B
B
impacts the community structure analysis.
This section provides a more nuanced view of the community structures in networks by considering the proportional occurrence of different types of relationships. This approach allows for a more detailed understanding of the complex interactions within networks, beyond just identifying the most dominant or occurring types. The results from these analyses are crucial for understanding the nature of non-assortative relationships in various types of networks.
You
Nonassortative relationships between groups of nodes are typical in complex networks 
Cathy Xuanchi Liu, Tristram J Alexander, Eduardo G Altmann Author Notes
PNAS Nexus, Volume 2, Issue 11, November 2023, pgad364, https://doi.org/10.1093/pnasnexus/pgad364
Published: 06 November 2023 Article history
pdfPDF
 Views 
 Cite
Permissions Icon Permissions
Share Icon Share 
Abstract
Decomposing a graph into groups of nodes that share similar connectivity properties is essential to understand the organization and function of complex networks. Previous works have focused on groups with specific relationships between group members, such as assortative communities or core���periphery structures, developing computational methods to find these mesoscale structures within a network. Here, we go beyond these two traditional cases and introduce a methodology that is able to identify and systematically classify all possible community types in directed multi graphs, based on the pairwise relationship between groups. We apply our approach to 53 different networks and find that assortative communities are the most common structures, but that previously unexplored types appear in almost every network. A particularly prevalent new type of relationship, which we call a source���basin structure, has information flowing from a sparsely connected group of nodes (source) to a densely connected group (basin). We look in detail at two online social networks���a new network of Twitter users and a well-studied network of political blogs���and find that source���basin structures play an important role in both of them. This confirms not only the widespread appearance of nonassortative structures but also the potential of hitherto unidentified relationships to explain the organization of complex networks.
ChatGPT
ChatGPT
The abstract of the paper "Nonassortative relationships between groups of nodes are typical in complex networks" by Cathy Xuanchi Liu, Tristram J. Alexander, and Eduardo G. Altmann, published in PNAS Nexus in November 2023, presents a comprehensive overview of their research on complex networks. Here are the key points:
Objective
: The study aims to understand the organization and function of complex networks by decomposing graphs into groups of nodes with similar connectivity properties.
Background
: Previous research has primarily focused on identifying assortative communities or core-periphery structures within networks.
Methodological Advancement
: This paper introduces a new methodology to identify and classify all possible community types in directed multigraphs, based on the pairwise relationship between groups. This approach goes beyond the traditional focus on assortative communities and core-periphery structures.
Analysis of Networks
: The methodology is applied to 53 different networks, leading to significant findings about the structure of these networks.
Key Findings
:
Assortative Communities
: These are identified as the most common structures in the studied networks.
Discovery of New Relationship Types
: The study uncovers previously unexplored types of relationships that appear in almost every network.
Source-Basin Structure
: A notable new relationship type is the source-basin structure, characterized by information flow from a sparsely connected group (source) to a densely connected group (basin).
Case Studies
:
The methodology is applied to two online social networks: a new network of Twitter users and a well-studied network of political blogs.
In both cases, source-basin structures are found to play a significant role.
Conclusion
: The findings confirm the widespread presence of nonassortative structures in complex networks and highlight the importance of previously unidentified relationships in explaining the organization of these networks.
This abstract indicates that the study provides new insights into the mesoscale structure of complex networks, emphasizing the prevalence and significance of nonassortative relationships, particularly the source-basin structure, in diverse network types.
You
What are assortative and nonassortative relationships?
ChatGPT
ChatGPT
Assortative and nonassortative relationships are terms used to describe patterns of connection or interaction within a network, particularly in the context of social networks or complex systems.
Assortative Relationships
Definition
: In assortative relationships, nodes (individuals, entities, etc.) tend to connect with other nodes that are similar to themselves. This similarity can be based on various attributes, such as social status, age, ethnicity, or any other characteristic.
Examples
:
In social networks, people often form connections with others who have similar interests, backgrounds, or demographic characteristics.
In biological networks, assortative mating refers to the tendency of individuals to mate with partners who have similar genetic traits.
Nonassortative Relationships
Definition
: Nonassortative (or disassortative) relationships are the opposite of assortative relationships. In this type of relationship, nodes tend to connect with others that are different from themselves.
Examples
:
In a professional network, junior employees might typically seek mentorship or guidance from more senior, experienced colleagues, resulting in a nonassortative relationship pattern.
In ecological networks, predator-prey interactions are inherently nonassortative, as different species interact.
Importance in Network Analysis
Network Structure and Dynamics
: Understanding whether a network is assortative or nonassortative helps in predicting how information, diseases, or behaviors might spread within the network.
Complex Systems
: In complex systems, these relationships can influence stability and resilience. For example, in social networks, assortativity can lead to echo chambers or polarization, whereas nonassortativity might foster diversity and exposure to different viewpoints.
The study of assortative and nonassortative relationships is crucial in various fields, including sociology, biology, ecology, and network science, as it provides insights into the underlying structure and dynamics of complex systems.
You
An important step in the analysis of complex networks is the partitioning of nodes into groups or communities according to their connectivity pattern (1���5). Most approaches focus on finding groups in which users link preferentially to other users of the same group. A variety of computational methods have been proposed to identify such assortative communities (2, 3, 6, 7), such as, modularity maximization (8, 9), spectral methods (10), and Infomap (11). Another well-studied form of network organization is the core���periphery structure, in which information flows from a tightly connected core community of users to a loosely connected periphery (12���14). Here, also different algorithms have been specifically proposed to identify such structures (12, 15���17).
ChatGPT
ChatGPT
The excerpt highlights two significant approaches in the analysis of complex networks, focusing on the partitioning of nodes into groups or communities based on their connectivity patterns:
Assortative Communities
:
Definition
: These communities are characterized by nodes (users) that preferentially link to other nodes within the same group. This means that members of an assortative community are more likely to have connections with each other than with nodes outside the community.
Computational Methods
:
Modularity Maximization (Refs 8, 9)
: This method aims to maximize a modularity score, which quantifies the density of links inside communities as compared to links between communities.
Spectral Methods (Ref 10)
: These methods involve using the spectra (eigenvalues and eigenvectors) of matrices representing the network, such as the adjacency or Laplacian matrix, to identify community structures.
Infomap (Ref 11)
: This approach uses the flow of random walks on a network to find community structures, based on the idea that a random walk is more likely to stay within the same community.
Core-Periphery Structure
:
Definition
: In this type of network organization, there is a core group of tightly connected nodes and a periphery of loosely connected nodes. Information typically flows from the core to the periphery.
Algorithms for Identification
:
Various algorithms (Refs 12, 15���17) have been developed to identify core-periphery structures in networks. These algorithms might focus on different aspects of core-periphery structures, like the density of connections in the core and the nature of connections between the core and periphery.
Both assortative communities and core-periphery structures are fundamental concepts in network science. They provide insights into how networks are organized and function. For example, in social networks, assortative communities might reflect social circles or groups with common interests, while core-periphery structures could represent organizational hierarchies or influence dynamics. Understanding these structures is crucial for applications ranging from marketing and recommendation systems to epidemiology and beyond.
You
More recent research has shown the importance of going beyond these ���descriptive methods,��� which seek predefined structures, and instead use ���inferential methods��� (18���20) that can learn the most relevant structure from the data. These methods are robust against the detection of spurious communities (e.g. communities in simple random graphs), and provide better partitions of the graph in groups (in terms of better compression of data and retrieval of partitions in synthetic networks) (19���21). Inferential approaches connect the network-partition problem to generative models and random-network ensembles, settings in which a richer variety of structures appear naturally (22, 23). In particular, inferential methods based on stochastic block models (SBM) (24���26) do not commit to specific types of community structures (e.g. assortative or core���periphery), leaving it to the data to determine the most significant statistical signature that leads to the clustering of nodes into blocks (communities). In view of this key advantage of modern community-detection methods, several natural questions arise: to what extent are assortative or core���periphery structures dominant in networks? Are there other types of community structures that were not previously investigated? If so, what do these structures reveal about the organization and function of complex networks?
ChatGPT
ChatGPT
This excerpt delves into the evolution of methodologies in the analysis of complex networks, particularly emphasizing the shift from descriptive to inferential methods in community detection. Key points include:
Limitations of Descriptive Methods
:
Predefined Structures
: Traditional approaches often look for specific, predefined structures like assortative communities or core-periphery structures.
Spurious Community Detection
: There is a risk of identifying false communities, especially in simpler networks.
Advantages of Inferential Methods
:
Data-Driven Approach
: These methods learn the most relevant structures directly from the data, rather than relying on predefined models.
Robustness
: They are more robust against detecting spurious communities.
Efficiency
: Offer better partitioning of graphs in terms of data compression and retrieval accuracy, especially in synthetic networks (Refs 19-21).
Generative Models and Random-Network Ensembles
: Inferential approaches are connected to generative models, facilitating the natural emergence of a broader variety of structures (Refs 22, 23).
Stochastic Block Models (SBM)
:
Flexibility
: SBMs (Refs 24-26) do not commit to specific community types, allowing the data itself to reveal the most statistically significant structures.
Versatility
: This method is capable of identifying a range of community structures, beyond just assortative or core-periphery.
Emerging Questions
:
The advancement in community detection methods leads to questions about the prevalence of traditional structures (assortative or core-periphery) in networks.
It raises curiosity about the existence and nature of other types of community structures that have not been extensively explored.
These questions aim to deepen the understanding of the organization and function of complex networks.
The shift towards inferential methods represents a significant advancement in network science. It allows for a more nuanced and comprehensive understanding of network structures, potentially uncovering new patterns and relationships that descriptive methods might overlook. This evolution underscores the dynamic nature of research in complex networks and its ongoing adaptation to more sophisticated analytical techniques.
You
From Martin Ciupa:

I had a short dialog with Yann LeCun, on the issue of intent formation in AI earlier today in the context of safety.

He made a very interesting remark:

���There is intelligence, which is the ability to find a sequence of actions to fulfill a goal or intent.
Then, there is intent.
Where do intents come from?
You can be very intelligent and have controllable intents. You can also be very stupid and have uncontrollable intents.
Those two things are not necessarily linked.���

I thought the part about intelligence level and control of intents an interesting insight and correct.  

In the context of AI safety a very stupid system might be unable to determine negative consequences of an intent, eg., as in the Paperclip Maximizer thought experiment .  #1 #2

But, the key question is ���where do intents come from?���   

I think it comes from intelligent insight into planning options/goals to fulfill an objective.  It���s intimately linked to reasoning about solutions to problems.  

Hence (it has been speculated) all the shenanigans at OpenAI, when some of the old board thought a new Algorithm might be able to help in that kind of reasoning about resolving math problems #3

I did some work decades ago in complex Planning and Strategy formation (A Cybernetic Knowledge Based Strategic Planning Support System -  incorporating layered NeuroSymbolic AI components) #4

But who gives objectives?  If it���s ANI the goals are in the use case of the designers of the system.  If it���s AGI it might be given an objective for a specific task but given its Generality find an efficient sub-goal outside of expected Narrow set of sub-goals.  To be safe, you���d have to build Generally Applicable Guardrails.  Not just Rules, or RLHF like classifiers, that might not catch dangerous sub-goals, but a very sophisticated ���Imagination System��� that could generally predict consequences (this implies Cognitive Causal World Modeling, Common Sense Abstraction, and crucially an Ethical evaluator for Imagined/Speculated scenarios ).  These are tough asks.  Getting them aligned to ���Core Human Values��� is an issue since they often are relative and incessantly argued over in human societies.  

You might need the Wisdom of Solomon to plan the solution of novel problems and form/understand sub-goals and intents.

1/ https://www.lesswrong.com/tag/squiggle-maximizer-formerly-paperclip-maximizer

2/ ���� Look at this post on Facebook https://m.facebook.com/story.php?story_fbid=10160961238498599&id=537688598&mibextid=WC7FNe

3/ ���� Look at this post on Facebook https://www.facebook.com/537688598/posts/10160951746458599/?d=n&mibextid=WC7FNe

4/ ���� Look at this post on Facebook https://www.facebook.com/537688598/posts/10160955652978599/?d=n&mibextid=WC7FNe

cc: Yoshua Bengio Ernest Davis Moshe Vardi William Hsu Ronald Cicurel
ChatGPT
ChatGPT
The insights shared by Yann LeCun, as recounted by Martin Ciupa, touch upon some profound and complex aspects of AI, particularly regarding intelligence, intent, and AI safety. Let's break down the key points and their implications:
Intelligence vs. Intent in AI
: LeCun's distinction between intelligence (the ability to find a sequence of actions to fulfill a goal) and intent (the goal or purpose itself) is crucial. In AI, these are often conflated, but they are distinct concepts. The level of intelligence an AI possesses does not necessarily correlate with the nature or controllability of its intents.
Origins of Intent
: The question of where intents come from in AI systems is central to AI design and ethics. In simpler AI (Artificial Narrow Intelligence, ANI), intents are usually predefined by the designers. However, as AI systems become more general (Artificial General Intelligence, AGI), the formation of intent could become more autonomous, potentially diverging from its initial programming.
AI Safety and Unintended Consequences
: The Paperclip Maximizer thought experiment illustrates how an AI with a seemingly benign intent can lead to catastrophic outcomes if it lacks the ability to foresee and evaluate the broader implications of its actions. Ensuring AI safety involves not just defining the right goals but also equipping the AI with the ability to understand and evaluate the consequences of its actions in a broader, more human context.
Complex Planning and Strategy Formation in AI
: Martin Ciupa's work on strategic planning in AI, involving NeuroSymbolic components, highlights the importance of integrating various AI approaches for effective decision-making. This complexity is necessary to handle the vast range of scenarios an AI might encounter, especially in AGI.
Guardrails for AI
: The idea of ���Generally Applicable Guardrails��� goes beyond simple rule-based systems. It involves creating sophisticated mechanisms for the AI to predict consequences, apply common sense, and evaluate actions ethically. This is a significant challenge, given the relativity and variability of human values and ethics.
Alignment with Human Values
: Aligning AI objectives and actions with ���Core Human Values��� is one of the most debated and critical aspects of AI development. The challenge lies in the diversity of human values and the dynamic nature of ethical standards across different cultures and societies.
In summary, these points underscore the complexity of designing safe and ethical AI systems, especially as we move toward more advanced forms of AI. The conversation points towards a future where AI systems are not just technically proficient but also equipped with a nuanced understanding of human values and ethics, capable of making decisions that align with the broader interests and safety of humanity. This requires an interdisciplinary approach, combining technical AI development with insights from ethics, philosophy, and social sciences.
ChatGPT can make mistakes. Consider checking important information.
?
ChatGPT



