We go now to Pablo in Argentina.
Thank you.
Hello.
Hello.
Hello.
You hear me?
Pablo.
Yes.
Yes.
You see my screen?
Yes.
Well.
I am Pablo Reda,
developer of R4 and R3 language that derived from color four.
I am interested in knowing why they are a few four programmers.
And I know that I know this.
The time that I had to develop program for limited or specific hardware,
for example, a magnetic car reader,
I realized that development is much more pleasant and enjoy it.
The possibilities are limited.
There is a memory map that is no dealing with her is the diet.
There are no intermediaries.
The option are few, but well-defined in this context.
They are money for program.
But when developing system for PC or for the web,
the situation changed a lot.
In a talk, Charles Moon explained that what happened is that they start to add
liar or abstraction.
They are unnecessary.
I said that they are added for different reasons to supposedly make it easy
for programming to supposedly make for more secure because they are someone who
want to sell something because someone come out with a great idea.
All these layers enlarge the problem to be solved.
And in my tour building an application into hell.
And this is where for appear.
The big advantage is not the size of the interpreter or the computer or the compiler.
Nobody care about Facebook page been almost three megabyte.
Nor the speed of execution.
The problems are so fast that when I replace a division by a big shift,
I feel almost guilty.
It is worth it.
I think that is a great advantage is not in the side of the machine,
but in the heel of the programmer.
Funding an error in 100 line is far better.
It's in 10,000.
For don't know what with a contract and a lawyer to put an amber in memory.
For take the programmer seriously and give him the freedom to do whatever he want.
It empower the programmer for what better or worse.
A for programmer is a bit less is a bit less replaceable.
That other language programmer.
Look for the specific of the problem, not the generalization.
Good programming player practices are generalization that does not help.
And they even magnitude the problem and make it more complicated.
And then we start at the abundant abundance of the speed and memory in the machines.
And in firing development.
Then, no, no, a days.
There is, there has been an increase in the number of virtual retro computer,
which are very limited in many aspects, but they offer a phonic programming environment.
Instead of using all the new feature coming out continually.
I believe it that in four, there is a direction that today is hidden by good programming practices.
Mention is that simplified models and generalizations that simplified algorithm.
Going for somehow mean getting right off a lot of apparent advantage that have been accumulated over the years.
And this agreed filter for programmers.
In four, there is no shortcut.
You have to understand how to score to master it.
I think this is the reason why we are few programmers, but I am actually not sure about that.
Thank you all. Thank you, Peter.
Thank you, Pablo.
And Pablo ideas are interesting.
