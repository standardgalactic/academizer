Whatever here
Where do I begin
So
Okay, I
Guess we should start from
The beginning which would be when we wrote the language and what was the motivation for the language?
So we were at Facebook. It was for guys
We were in the developer
Experience team it's called developer experience team, but it was it was more about
the bottom line was about efficiency and
And performance, so they wanted to make sure that all the different teams
were working at their best and one of the issues that we saw was that
There was just a code quality problem where people are writing code. It was hard to maintain
You know even though they were using it a variety of different languages, we found that it was very hard to
Inculcate a culture of code quality and have everybody on the same page about what constitutes good code
That just wasn't going anywhere. So we decided
You know, we should talk to Mark. So I talked to Mark and I said, you know
I think we need to spend a bit more time on on properly addressing this issue
We had done like a scattershot approach that you know thus far, but I
Went to mark and I said, you know, can we write our own language?
We thought that it would be a good opportunity to kind of take all the things that we had learned throughout our quite long
careers at this point and
distill it into a
Language where you can write code that is
performant
High quality but most importantly, you know
We wanted the experience of writing the code to to kind of reignite that spark
You know, I think a lot of us all have have memories of when we first discovered programming
Whether it was back in, you know for me it was primary school making video games
Some my friends it was high school. Some of them didn't really get there until uni
but we all had the same experience that in the in the early days there is that magic and
I think that, you know over time people lose that sense of magic
because
I think as they learn about how how to write code within the confines of their language
I think they find that it becomes very
Constrictive and and they start to feel like they're fighting against the language. So
We, you know, we had a two-month
Runway to basically say let's see what we can do in two months
And it was just the four of us, you know, kind of in the same era in the office and we just saw what we could do
and two months go by and
You know, the stakeholders are kind of getting a bit bit nervous about the time it was taken and you know
The deadlines looming and I know I brought the guys into a meeting and said, you know, how do we feel about it?
Do we feel like it's ready to kind of be released and you know
We can get a couple of internal teams working within the language and we all decided like, you know
This this language has great features and we set out designing it to have certain features that we wanted it to have
but it's it's actually missing something and when we brainstormed it
We effectively landed on the conclusion that
We had taken the wrong approach. So, you know, you shouldn't write a language where you've got like five or six ideas in your head about
nice features to add to that language and
Just certain aspects about how you would program in that language
You should instead forget about that shit throw that all away and focus on principles and values
What are the values you want to be embedded in that language and to therefore be
Embedded in programs written in that language. So, you know, we knew we wanted things to be
Minimalistic we think that modern-day languages have far too many abstractions
We wanted to give the the the programmer only that which they need to write great code as opposed to what they want
Because when you give people what they want first of all
There's no end what an individual wants and second of all different people want different things
And so you end up, you know, you can end up with a language that just has a bunch of random shit
That now I really cares about and it makes it hard to understand what's going on when you're coming on to a new project
So, you know, it was a tough conversation. I called up Mark who is it was like 7 p.m.
I think it was having dinner with his family and just said hey, can we take a bit longer?
We want to start again from scratch. We had about a hundred thousand lines of code at that point
and you know, he said
okay, and that
There was the there was a slight inflection as he said that
Which kind of begged the question, you know, okay, but you know
I'm giving you the I'm giving you the I'm giving you the space that you need to create a great language here
but there is that uncertainty and
That was actually the inspiration for the name of the language. Okay with a question mark
The reason for that is because it's the it's in the question mark that the magic lives the excitement
You don't know where this new language is actually going to become worthwhile or just be chucked in the trash
No one knows but is the unknown that is exciting about it. And so that's that's the the
Origin of the actual name
so
we started over we
Started from principles and we extrapolated to features rather than going the other way around and
You know we're approaching the deadline again and it happens again. We get in a meeting. We say it's actually it's just it's not right
It's still not right
The
It's it was like ninety nine point nine percent there and
The reason that we all still felt that unease about it
It wasn't like it was incomplete and we had to just go and add more things to fix it
there was still something fundamental that wasn't right about it and
What we had discovered is we you know, we think about other languages like
Java, you know
Languages that are very you can you can tell by looking at the language that it was written in a hierarchical context
You've got inheritance in Java. You've got
These taxonomies it's like we think about a big org chart
We found that by being embedded within a corporate
Context or writing a language we could not help but
We couldn't help it kind of permeate some of that
Corporate context into the language itself and we feared that
We would have this set we'd be making the same mistake that all these other languages have made that we're trying to get away from so you think about most
Popular modern languages today, they're typically backed by a big company because they've got the capital to spend on that
So you've got go with Google
Russ started out in with Mozilla
TypeScript and the React framework and we Microsoft so
We said
You know we're actually in Facebook isn't it anyway as much as we loved Facebook
We had to walk away from that to really capture
What what would it become our mission for quite a few months at that point which is to change the needle on the culture of programming so
You know talk to Mark and said
We're gonna have to we're gonna resign the whole team resigned
It was four guys at the beginning and we we had a fifth come in about halfway through we all resigned
We all went to my friend's garage and just started
from scratch once again through another hundred thousand lines of code and
You know the rest is history, you know, I had no idea at the time
You know the initial intention was let's just try and change the culture within within this company Facebook that we were in
But I had no idea at the time it would become as big as it is now and I feel like I
Feel like the decisions we made
Had we not made the decision to to step away from the corporate environment and kind of go and do it, you know
In an isolated garage
In rural Australia, I don't think that we could have had that same success, right? Yes, okay Quinton
Yes, Quinton question mark. So that's an interesting that's an interesting story there
So so what happened with Quinton was we knew that we needed a mascot
So not every language has a mascot but think about you know
Rust has that little crab thing and and the the go language has gophers and
You know, I was inspired by seeing the female butterfly from the Raku language, which is the successor to Pearl
I think it's Pearl 6 or something like that
You know seeing the the conscious decision to kind of take a social issue such as you know women being
Underrepresented in STEM and and capture that in the mascot that actually had an influence on me
So so I obviously that language crashed and burned but um, I
Wanted to try and take it
To the next step. So, you know, we I just had a sketch
Initially, we weren't thinking about any of this stuff
We just I wouldn't have a mascot but I had a sketch of just a big red question mark with eyes and a mouth and you know
It's just funny a Quinton question mark
But Rob our graphic designer
He when he vectorized it and because I just had like a crappy, you know on a piece of paper
But he vectorized it professionalized it and you know looking at the result you could see in
Quinton's eyes a
You know, it was hard to
Hard to how to describe it's kind of a malaise or
Maybe fear or melancholy, but there is there is an unease in his eyes and
You know when I saw that I just thought this is the perfect opportunity to
To
Do something special with this with this character and at that point it really was about being a character like
You know, you think about most mascots. Who are they? What's their backstory?
You know, you're never going to find out we wanted to change that so what we wanted to do here is to combine all these ideas about
You know, so like think about
Some people have the idea that a language should be
Written in isolation of whatever the social zeitgeist and the problems of the era are and I strongly disagree with that
I think that you can't separate a language from the social environment
In which it is found and in which it is created and so I
wanted to
Give this mascot some traits which reflected what was happening in in modern times. So
You know Quinton has depression effectively
We wanted to
Have a narrative structure to this mascot
So I think depression is that is a topic that isn't really discussed enough. You know, I've had depression. I think probably
Either a majority or a large minority of my friends currently have depression
And you know probably about 30 to 50 percent of them are currently on antidepressants
So this is an issue which afflicts, you know, a lot of people especially with
Economic I mean like there's there's multiple issues, but a lot of things are conspiring right now to make the lives of people
Suck quite a bit and what we wanted to do with Quinton is kind of say, okay, you've got a question mark who is immortal
has eyes, but no eyelids and
Is kind of
Separate to the physical world so that he has no physical form. He's purely digital
You know, what is that does that take a toll on a person?
Or in this case a question mark to be that kind of to be that kind of being and to live through life where you know
Anyone that you ever have an emotional attachment to eventually passes away
What we want to see with Quinton is him exploring that and kind of learning
The effects of you know, whenever you run a program. He's he's saying something about how depressed he is
You know saying I don't think anyone gives a shit about me things like that. So I
think that um
You know, and then there's also about attachment issues
So like if somebody says they're gonna self harm if you leave them is that them?
Sincerely expressing their internal pain or is that a bargaining chip to retain control over you and the answer is it's a bit of both
So we want to take Quinton and explore all these themes in a narrative structure
That is progressed as the language itself progresses. So the idea is that you know, maybe
Okay version 1.1 comes out and all of a sudden Quinton has a slightly different personality
He's got a different
Situation in his narrative arc and you'll kind of be given bits and pieces of information about that when you run programs
So maybe like one out of five times you run a program. You'll see at the bottom Quinton question mark says and he'll just give a little bit of a
Diatribe about what's happening in his life at that point in time
So we're very excited about that
It's really the first time it's been done in any programming language
And I hope that it becomes a model for other languages to build upon, you know, it's been it's been a great experience doing it
We've gotten called up Satya Nadella called me. He was saying, you know, I heard that Mark was sad to let you go
But you know, if you guys need any funding you can you can talk to me and I said it's
Don't worry about it. Like when you're in a garage with four other guys and
You're all on the same page and you're doing something which you know will make the world a better place
Money becomes completely irrelevant. So, you know, he was saying do I need to get Bill Gates on the phone?
What has to happen here? How do we make this work? And I was just
It was the kind of thing where I
Think that he knew and when I explained exactly what I've just told you, you know, when I explained that to him
He he got the message and said okay, and you know, you hear that word and this keeps coming back again and again
It's like going full circle that word is so powerful because it communicates
understanding and I think that's that's really what this language is about is about building understanding
creating a great language is and
and kind of rebooting the industry in a way that allows us to start writing great code again
and feeling the magic again, so
Yeah, that's really all I have to say
