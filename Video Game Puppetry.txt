Video Game Puppetry
Open sidebar
ChatGPT
4
You
LW
OpenAI's Sora is an agent
by CBiddulph
5 min read
16th Feb 2024
23 comments
85
AgencySoraAI
Frontpage
+ Add Tag
If you haven't already, take a look at Sora, OpenAI's new text-to-video AI. Sora can create scarily-realistic videos of nearly any subject. Unlike previous state-of-the-art AIs, the videos are coherent across time scales as long as one minute, and they can be much more complex.

Looking through OpenAI's research report, this one section caught my attention:

Simulating digital worlds. Sora is also able to simulate artificial processes���one example is video games. Sora can simultaneously control the player in Minecraft with a basic policy while also rendering the world and its dynamics in high fidelity. These capabilities can be elicited zero-shot by prompting Sora with captions mentioning ���Minecraft.��� These capabilities suggest that continued scaling of video models is a promising path towards the development of highly-capable simulators of the physical and digital world, and the objects, animals and people that live within them.
For a moment, I was confused: "what does it mean, Sora can 'control the player in Minecraft with a basic policy?' It's generating footage of a video game, not actually playing it... right?"

It's true that in these particular demo videos, Sora is "controlling the player" in its own internal model, rather than interfacing with Minecraft itself. However, I believe OpenAI is hinting that Sora can open the door to a much broader set of applications than just generating video.

In this post, I'll sketch an outline of how Sora could be used as an agent that plays any video game. With a bit of "visual prompt engineering," I believe this would even be possible with zero modifications to the base model. You could easily improve the model's efficiency and reliability by fine-tuning it and adding extra types of tokens, but I'll refrain from writing about that here.

The capabilities I'm predicting here aren't totally novel - OpenAI itself actually trained an AI to do tasks in Minecraft, very similarly to what I'll describe here.

What interests me is that Sora will likely be able to do many general tasks without much or any specialized training. In much the same way that GPT-3 learned all kinds of unexpected emergent capabilities just by learning to "predict the next token," Sora's ability to accurately "predict the next frame" could let it perform many visual tasks that depend on long-term reasoning.

Sorry if this reads like an "advancing capabilities" kind of post. Based on some of the wording throughout their research report, I believe OpenAI is already well aware of this, and it would be better for people to understand the implications of Sora sooner rather than later
ChatGPT
ChatGPT
The exploration of Sora, as outlined in the article, introduces an intriguing advancement in AI capabilities, particularly in the realm of video synthesis and interaction within digital environments. This development hints at a paradigm shift from static image generation to dynamic, temporal video generation, embodying a leap similar to moving from still photography to cinematography in terms of technological evolution.
Sora's ability to simulate and render digital worlds, especially video games like Minecraft, with coherent narratives over time spans, signifies a notable milestone. This capability is akin to an architect designing a building not just as a static model but as a living ecosystem that evolves and adapts over time. The distinction between generating footage and actual gameplay interaction blurs as Sora "controls the player" within its own internal model of Minecraft. This is reminiscent of a puppeteer who, instead of manipulating the strings of a puppet to perform actions, imagines and renders the performance in a virtual space, suggesting a novel form of digital puppetry.
The potential for Sora to act as an agent in playing video games without specific modifications to its base model is akin to giving a universal translator the ability to not just understand but also participate in conversations across languages without needing explicit instructions for each new language. This suggests a leap towards creating more autonomous, adaptable AI systems capable of generalizing their learned knowledge to new, unseen tasks.
By predicting the next frame in a sequence, Sora embodies a form of visual foresight, similar to a chess player who visualizes future moves based on the current state of the board. This capability for long-term reasoning in a visual context could revolutionize how AI systems are applied to tasks requiring a temporal understanding and interaction with dynamic environments.
The implications of Sora's capabilities extend beyond just technical advancements; they invite us to reconsider the boundaries between creator and creation, between the digital and the physical, and between the imagined and the real. As AI continues to evolve, it may well redefine our relationship with technology, blurring the lines between human ingenuity and artificial intuition in the creation and interaction with digital worlds.
You
How to play any video game by predicting the next frame
Recall from the OpenAI report that Sora can take any video clip as input and predict how it will continue. To start it off, let's give it a one-second clip from the real Minecraft video game, showing the player character shuffling around a bit. At the bottom of that video, we'll add a virtual keyboard and mouse to the screen. The keys and buttons will turn black whenever the player presses them, and an arrow will indicate the mouse's current velocity:

If we ask Sora to continue the video with a short clip, it'll keep making the player character move around. Hopefully, it'll also change the display to reflect the actions the player is making - for instance, the left mouse button should turn black whenever the player interacts with an object. Video game streamers sometimes play with virtual keyboards on their screen, so I don't think it would be a huge logical leap for Sora to be able to accurately highlight the right keys.

This is how we can let Sora take "actions." Suppose that right after recording that one-second clip, we stop the game and wait for Sora to predict the next 0.1 seconds of the video. Once we have our results, we just take the average color of each key in the last frame of the predicted video and determine which buttons Sora thinks the player will be pressing. Finally, we continue the game for 0.1 seconds, holding down those buttons, and feed the 1.1 seconds of real Minecraft video into Sora to get its next move.

Now Sora is moving around, doing some things that would be pretty reasonable for a human player to do. To give it some direction, let's add the text prompt "building a house." This will make Sora take actions that it's seen from Minecraft players in its training data who were building houses.

Who knows, Sora might build a pretty good house just by looking a tenth of a second into the future again and again. But remember, "video generation models are world simulators." Sora can predict up to a minute of video at once, ensuring that the entire video is consistent from start to finish. This means that it can accurately simulate the entire process of building a house, as long as it takes under one minute. Effectively, Sora can "visualize" the next steps it's going to take, much like a human would.

You can make Sora generate an entire coherent video of the player building a house, then take the frame just 0.1 seconds into that video and extract its action. You could even generate several videos to see multiple possible house-building strategies that the player might take, multiple best-guesses of environments the player might find themselves in, and choose the most common set of button presses 0.1 seconds into all of those videos.

Of course, the more video frames you generate, the less efficiently your agent will run. There are easy ways you could speed it up, but those are outside the scope of this post.

You don't even need text to get Sora to do what you want. Recall that Sora can interpolate between two fixed clips at the start and the end of the video. You can start Sora off on the first level of Super Mario Bros:
ChatGPT
ChatGPT
The outlined approach for utilizing Sora to play video games by predicting the next frame offers a fascinating glimpse into the intersection of AI and interactive media. Here's a distilled version of the methodology, enhanced with a metaphorical lens to appreciate the conceptual depth:
Starting Point - The One-Second Clip
: Imagine launching a paper airplane with an initial flick; this is analogous to feeding Sora a one-second clip from Minecraft. The airplane's initial trajectory is set, but where it goes from there depends on the forces acting upon it. Similarly, the clip sets the initial context for Sora's predictive capabilities.
Virtual Keyboard and Mouse Visualization
: Adding a virtual keyboard and mouse to the screen is akin to equipping the paper airplane with sensors that can respond to environmental changes. These sensors (keys and mouse visuals) will react (turn black or move) based on the "wind" (player's actions) they encounter.
Predictive Continuation by Sora
: Asking Sora to predict the next segment of the video is like asking the paper airplane to adjust its flight path based on the current air currents. Sora's prediction aims to continue the flight (gameplay) in a manner consistent with how it began, adjusting for the player's anticipated actions.
Action Extraction and Game Continuation
: Extracting the average color of each key to determine action is like interpreting the sensor readings to adjust the airplane's flaps for the next segment of its journey. This step translates Sora's predictions into actual game inputs, propelling the gameplay forward.
Directional Prompting - "Building a House"
: Giving Sora a specific task like building a house guides its predictive capabilities much like setting a destination for the paper airplane. This instruction helps focus Sora's predictions towards achieving a particular goal within the game environment.
Simulating the Building Process
: Sora's ability to simulate the entire process of building a house within a minute showcases its capacity for long-term planning and execution, akin to a paper airplane capable of navigating a complex course to reach a predetermined target accurately.
Generating Coherent Video and Extracting Actions
: Generating an entire video of the building process and then extracting actionable steps is akin to charting a detailed flight plan for the paper airplane, considering multiple paths it might take, and selecting the optimal route based on various conditions.
Efficiency Considerations
: Just as there are ways to make a paper airplane fly further or more accurately with adjustments to its design, there are methods to enhance the efficiency of using Sora for game playing, though these optimizations are beyond the initial scope.
This approach leverages Sora's predictive power not just to foresee the immediate future but to actively participate in shaping it, marking a significant leap in how AI can interact with and navigate complex, dynamic environments. The concept transcends traditional AI limitations, venturing into a realm where AI becomes an active agent capable of planning, decision-making, and executing tasks with a degree of foresight and adaptability previously unattainable.
You
And interpolate to this image one minute later (or 30 seconds later if you want to go for a speedrun):

Beyond video games
Of course, Sora's capabilities as an agent aren't limited to games. OpenAI already demonstrated its ability to predict how an artist will place paint on a canvas:

It's not hard to imagine what might happen if you hooked up Sora to a live video feed of a paintbrush controlled by a robot arm.

Maybe the concept of "AI taking artists' jobs" isn't as shocking as it once was, but Sora could be repurposed for many other visual tasks:

Operating autonomous vehicles and drones in highly complex situations.
Fluidly controlling a digital "avatar" while conversing with a user, reacting to their movements and facial expressions.
Perhaps most notably, operating any computer with a screen. As far as I can tell, Sora's text understanding isn't great yet, but as they say, "two more papers down the line..." Your fully-remote office job might be at risk not too long from now.
And this is all without any fine-tuning or specialized changes to the architecture. If I can think of these ideas in a few hours, just imagine how many uses for this technology will exist a year from now. All I can say is, prepare for things to get weird.
ChatGPT
ChatGPT
The envisioned applications of Sora extend its utility beyond the realm of video gaming into a wide spectrum of real-world applications, highlighting the transformative potential of AI in various sectors. Let's explore these scenarios with an analogy to illuminate the breadth and depth of possibilities.
Autonomous Vehicles and Drones
Imagine Sora as the navigator of a ship in the vast ocean of real-world data. Just as a navigator predicts weather conditions, currents, and obstacles to ensure a safe and efficient voyage, Sora could anticipate and react to dynamic road conditions, obstacles, and unpredictable elements in real-time. This capability would not only enhance the safety and reliability of autonomous vehicles and drones but also push the boundaries of their operational complexity and efficiency.
Digital Avatars and Interaction
Envision Sora as a conductor of an orchestra, where each musician (or facial expression and movement of a digital avatar) must be in perfect harmony with the user's actions and emotions. This level of fluid control and responsiveness would revolutionize digital interactions, making them more intuitive and immersive. It could lead to breakthroughs in telepresence, virtual reality, and customer service, where digital avatars can provide a more personal and engaging experience.
Operating Computers and Remote Work
Consider Sora as a master chess player, strategically maneuvering pieces on a board (the computer screen), with an understanding of the game's rules (software applications) that deepens over time. As Sora learns to predict and enact sequences of actions on a computer, it could automate complex tasks, analyze data, and manage workflows with unprecedented efficiency. This capability could transform industries by streamlining operations, enhancing productivity, and potentially reshaping the concept of remote work.
Creative Processes
The application of Sora to artistic endeavors, such as painting, can be likened to a ghostwriter crafting narratives in the style of renowned authors. By predicting and executing artistic strokes, Sora could collaborate with human artists or independently create artworks, pushing the boundaries of creativity and exploring new aesthetic territories. This could lead to new forms of art and creative expression, blending human intuition with AI's predictive precision.
Broader Implications
Sora's potential applications represent a leap towards a future where AI's role transcends assistance, becoming a proactive, predictive, and creative force across various domains. Just as the introduction of electricity revolutionized every aspect of human life, Sora's capabilities could catalyze a similar transformation in how we interact with technology, create art, conduct business, and navigate our world.
As we stand on the cusp of these developments, it's clear that the future shaped by AI like Sora will be as strange as it is wondrous, challenging our preconceptions of creativity, productivity, and interaction. The journey ahead promises to be as exhilarating as it is unpredictable, with AI opening doors to possibilities that today seem as distant as the stars, yet may soon be within our grasp.
You
https://davidbieber.com/projects/shh-shell/
ChatGPT
ChatGPT
The shh Shell, created by David Bieber, is an innovative command-line interface designed for minimal mental energy use, particularly before sleep. Its primary output is audio, allowing users to interact with their computer without needing visual feedback. Users can perform various tasks like leaving notes for themselves, setting alarms with YouTube music, checking the time, and even controlling email and messages through voice commands. This tool is particularly useful for nighttime use, avoiding screen light disturbance. For more detailed information and usage instructions, visit
David Bieber's project page
.
You
The shh shell is a simple shell you can use while you drift off to sleep.

Notably, you can keep your eyes closed while you use it.

The shell is controlled by typing and the only output is audio; there are no visual components of shh. It is designed to minimize the mental energy required for use, to avoid disturbing your attempt at sleep as much as possible.

Why is it called shh shell?
It���s a play on ���ssh���, a common unix utility that stands for ���secure shell���. shh (prounced in a whisper, ���shhh���") is a quiet shell that takes minimal mental energy to use, great for use while you���re drifting off to sleep.

What can the shh shell do?
My primary use of the shh shell is leaving notes for myself. I also use shh to set peaceful YouTube music alarms for myself, and to check the time without needing to open my eyes.

Here is the full list (as of 2015-11-28) of my uses of shh shell, past and present:

Leaving notes for myself for the morning
Checking the time
Playing YouTube videos (I only hear the audio, of course)
Google searching and opening webpages
Setting alarms (usually in the form of songs on YouTube)
Checking my email
Sending emails
Sending iMessages
Scheduling emails or messages to send in the future
Making TODOs for myself
Setting goals for the future
Performing calculations
Practicing relative pitch
Recording audio memos of myself for later
Executing arbitrary shell commands
The current list of shh commands is available here.

Of course, not all of these have proven to be useful features. The most useful features for me have been the ability to leave notes for myself for the morning, the ability to check the time without opening my eyes, and the ability to set alarms and listen to music via the shell. The audio memo feature has been occasionally useful too.

At no point did I find the ability to check my email via the shh shell useful.

I did temporarily get good at recognizing pitch intervals, but I have not sustained that ability
ChatGPT
ChatGPT
The shh shell, inspired by the unix "ssh" (secure shell), is a unique command-line interface designed for use while drifting off to sleep. It operates with audio output only, allowing users to interact via typing without the need for visual feedback. The shell is particularly useful for leaving notes, checking the time, playing YouTube music, and setting alarms, among other functions, all designed to require minimal mental energy and avoid disturbing sleep. For more information, you can visit David Bieber's project page on
shh shell
.
You
Is this a replacement for shells like Bash, zsh, and Fish?
No, this is not meant as a full replacement for Bash, zsh, Fish, etc.

That said, it does support arbitrary command execution though, via the shell command. That means typing :shell rm -f important_file will cause important_file to be removed. So, you have to make sure you���re not a self-sabotaging hacker in your sleep before you start using shh as your night time shell.

You can additionally add arbitrary new commands by editing the file shh_commands.py.

Where do you use the shh shell?
I use the shh shell by keeping a wireless keyboard in my bed. It is connected to my laptop, which I leave open but with the monitor turned fully off.

This means I���m not at risk of damaging my computer by rolling over on it or drooling on it :).

I leave the volume on my laptop on, so I can hear the shh shell���s output, but I never need to open my eyes to use it.

Can you use it in the shower?
Yes, I sometimes also use shh shell from the shower. I have a waterproof wireless keyboard in my shower. I am mildly embarassed by this.

The keyboard is connected wirelessly to my laptop running the shh shell in another room. There is no computer in the bathroom. For audio, I have a waterproof shower speaker connected via bluetooth to the laptop in the other room. The speaker sits in the shower next to the keyboard, which both rest on a ledge. There is a 3D-printed shaving cream holder nearby.

I know, I hear myself too.

Using the shh shell
When you open the shh shell on your computer, you get a small black window into which you can type large white text. When you���re new to the shell, it can be useful to look at this window to see what you���re typing. As you become more experienced with the shh shell, you can turn your monitor off and close your eyes, relying only on the auditory feedback the shell provides.
ChatGPT
ChatGPT
The shh shell is not intended as a replacement for traditional shells like Bash, zsh, or Fish. It's designed for minimal mental energy use, particularly before sleep, and supports executing arbitrary commands for advanced users. Users can interact with it using a wireless keyboard, without needing to see the screen, making it practical for use in bed or even in the shower with waterproof equipment. The shell allows for a range of commands, including custom ones added by the user, for various tasks without visual feedback.
You
Getting in Focus
When you type, it���s important that you���re typing in the shell. If you���re not in the shell, you might be typing in another application on your computer or you might not be typing in an application at all.

To assist with this, the shell will audibly say ���focused��� when the shell becomes your selected application, and ���focus lost��� when the shell loses focus. If the shh shell is not in focus, or if you���re not sure if the shell is in focus, then use ���cmd-TAB��� to switch applications until you hear the shell announce ���focused���. Once you hear this sound, you can safely type knowing that the shell is receiving your input.

Leaving Notes for Yourself
The default mode of the shell is to act as a notepad and keylogger. Every letter typed and every key pressed is logged with a timestamp when you are in the shh shell. Don���t worry, this data is only saved locally and keys aren���t logged when you���re in other applications, so it���s not going to steal your credentials for other apps.

Only if you start a line with : does shh interpret the line as a command. So, its unlikely you���ll accidentally run commands you don���t intend to if you roll over your keyboard while sleeping.

Everything you type will be there waiting for you in the morning, so leave yourself notes, dream diaries, action items, whatever it is that you need to get out of your head so late at night.

Even if you accidentally fall asleep on the delete key, thereby deleting everything you typed (ahh!), in the morning you will still be able to view the notes you typed since every character is logged.

Running Commands
To run a command, start a new line with a colon (:) followed by the command name, and then the command arguments.

For example, type :help in the shh shell to get a full list of supported commands.

Some of my favorite commands are time, m (short for music), say, and at.

Here are some of the commands I���ll type frequently:

:time
This will cause the shell to read the date and time aloud.
:m billy joel
This will immediately cause some Billy Joel music from YouTube to start playing. Most songs and artists should work.
:at 9:30am :m billy joel
This will set an alarm for 9:30am the following morning. At that time, it will execute the command m billy joel, which will cause some Billy Joel music from YouTube to start playing. What a nice way to wake up!
The shell is forgiving about small changes to syntax such as added spaces, so don���t worry about getting the commands exactly right.
:say hi
I use this as a test that my hands are aligned properly with the keyboard. If it doesn���t say ���hi���, that probably means my hands are offset from the keys and I typed a bit of gibberish.
The command :status serves the same purpose, but just says ���ok��� instead of ���hi���.
Using the ���at��� command
The ���at��� command is useful because it allows you to simply schedule other commands to run at a designated time in the future.

To use the at command, type :at <when>:<command>. It���s OK if <when> has a colon in the middle, e.g. <when> could be 7:30am. It could also be tomorrow at 9am ��� the syntax for <when> is flexible. <command> can be any of the commands shh supports, such as alarm for playing music from youtube. E.g. :at 7:30am : alarm would schedule a musical alarm for 7:30am the following day.

Adding new commands
You can easily add new commands by adding new functions to shh_commands.py.

Simply add a function decorated with the @command decorator to add a new command to your shh shell. If your command accepts arguments, include {} in the format string for your command, and the user���s arguments will be passed to your function when the command is run.

Troubleshooting
One common mistake is to start typing a command in the middle of a line. When in doubt about whether you are at the start of a line, just hit enter. You cannot go by the visual representation in the black box ��� all that is is a text field, but it doesn���t necessarily represent the internal state of your shell. So, just hit enter, then type your command, beginning with a colon.

There is no concept of a cursor in shh. The arrow keys don���t do anything. So even if the cursor in the text box appears to be in the middle of a line, in practice you are always typing at the end of the current content and the logged text will reflect this.

For additional issues, please open an Issue on GitHub.
ChatGPT
ChatGPT
The shh shell enhances focus during use by audibly indicating when it's active or not, ensuring users know when their inputs are being captured. It functions as a notepad, logging keystrokes for tasks like leaving notes, which are saved locally for privacy. Commands are initiated with a colon, including utilities like checking the time, playing music, and setting alarms. The shell is designed for ease of use, even allowing for scheduling commands for future execution. Custom commands can be added by modifying its Python script, making it versatile for various needs.
You
A bit of backstory
Why did you create a non-visual shell?
There was a time during undergrad when I was losing sleep to thoughts swirling around in my head. ���Does she like me?���, ���I should have responded in this slightly different way,��� etc. Variations on a theme would rattle around in my head, each variation only slightly different from thoughts I had already thought. How could I make them stop?

I found that writing down my thoughts helped stop this rattling. Once a single canonical representation of the thought was written on paper, that was sufficient for my brain. It stopped feeling the need to iterate on the thought, and it let me get to sleep.

However, writing on paper in the dark meant that in the morning, I couldn���t easily read what I had written. My handwriting at night was slanted and somewhat illegible.

I tried turning the lights on to write down my thoughts, but I didn���t like how that woke me up. I tried notepad apps on my phone for writing down my thoughts, but my phone is bright and this was not much better than turning the lights on and using paper.

So, I started typing on my computer with the monitor off. This was a great solution, but it came with it���s own problem: I needed to know if I was typing in the right window. Hence, shh shell was born. The gradual addition of commands over time has an added bonus that makes shh shell even more useful for me.

Isn���t the audio annoying to anyone else trying to sleep?
Yes, my college roommate Harvest can attest to the annoyance of hearing repeated ���focused���, ���focus lost��� throughout the night.

I cannot in good conscience recommend use of shh shell when sleeping with your significant other.

What have you typed into your shh shell?
When I first started typing at night back in 2014, I wasn���t used to typing without visual feedback. So in the morning when I went to look at what I had typed, I was surprised to find a large paragraph of complete gibberish! My hands had been offset by a key or so on the keyboard as I was typing. To me, it looked like a cryptographic code. Only the final line of the text was readable: ���I hope the FBI doesn���t find out about this.���

What made this particularly cool for me was that I had no recollection of what I had typed the night before. What was I concerned about the FBI finding out!?

Decoding the paragrah wasn���t too challenging, since each letter was just off by one or so on the keyboard, and so I was soon able to figure out what I had typed. It was an amazing experience decoding this, because as I did so, my memory came back. The text was a description of a dream that I had woken up from and typed into shh before falling back asleep. I was not involved in any criminal activity :).

Before I decoded the mysterious paragraph, I had forgotten entirely about the dream. As I decoded though, I remembered the dream, waking from it, and writing down what had happened.

Since then, I���ve now gotten used to typing in the dark and using the little bumps on the F and J keys to guide my hands. So, I don���t have to decode mysterious passages about hiding secrets from the FBI anymore. I have now repeatedly experienced not remembering having typed something until I see what I typed in the morning, and each time the memory of typing it comes back as I read what I wrote. This hasn���t ceased to be a very cool feeling each time it occurs.

Conclusion
While I built this for myself, I have made it open source in the hope that you too may benefit from it. I hope it helps someone out there get a better night���s sleep or remember a key idea they would have forgotten. Definitely check out the shh shell on GitHub and give it a try if you���re Python-inclined. And as always, feel free to get in touch if you want to discuss this project or anything else.
ChatGPT
ChatGPT
The shh shell was created as a solution to the problem of sleep-disturbing thoughts by allowing for non-visual note-taking. The developer sought a way to record thoughts without the disruptive effects of light or the difficulty of reading handwritten notes. The addition of commands over time enhanced its utility. While the audio feedback could potentially disturb others, the shell has proven invaluable for capturing thoughts and dreams without recalling them until revisited, fostering a unique connection between nocturnal musings and daytime clarity.
You
A list of the topics we've discussed.
2 / 2
ChatGPT
ChatGPT
We've covered several topics, including:
The introduction and capabilities of OpenAI's Sora, focusing on its potential for video game simulation and broader applications.
A discussion on how to use Sora for predicting and playing video games by generating and acting on video predictions.
The concept and functionalities of the shh shell created by David Bieber, designed for minimal mental energy use, particularly before sleep.
An exploration of why the shh shell was developed, highlighting its use for capturing thoughts and aiding sleep without visual distraction.
A summary of the backstory behind the creation of the shh shell, emphasizing its purpose and unique utility for nocturnal note-taking.
ChatGPT can make mistakes. Consider checking important information.
?
ChatGPT

