Zsh - Unix Shell Enhancements
Open sidebar
Zsh - Unix Shell Enhancements
Model: GPT-4
Summarize: Z shell
Article Talk
Language
Download PDF
Watch
Edit
The Z shell (Zsh) is a Unix shell that can be used as an interactive login shell and as a command interpreter for shell scripting. Zsh is an extended Bourne shell with many improvements, including some features of Bash, ksh, and tcsh.

Z shell


Screenshot of a Zsh session
Original author(s)
Paul Falstad[1]
Developer(s)
Peter Stephenson, et al.[1]
Initial release
1990; 33 years ago
Stable release
5.9 / May 14, 2022; 13 months ago[2]
Repository
sf.net/p/zsh/code/ 
Written in
C
Operating system
Cross-platform
Type
Unix shell
License
MIT-Modern-Variant[3][4]
Website
www.zsh.org
Zsh was created by Paul Falstad in 1990 while he was a student at Princeton University. It combines features from both ksh and tcsh, offering functionality such as programmable command-line completion, extended file globbing, improved variable/array handling, and themeable prompts.

Zsh is available for Microsoft Windows as part of the UnxUtils collection and has been adopted as the default shell for macOS and Kali Linux. The "Oh My Zsh" user community website provides a platform for third-party plug-ins and themes, featuring a large and active contributor base.

Contents
History
Edit
Paul Falstad wrote the first version of Zsh in 1990[5] while a student at Princeton University.[6] The name zsh derives from the name of Yale professor Zhong Shao (then a teaching assistant at Princeton University) ��� Paul Falstad regarded Shao's login-id, "zsh", as a good name for a shell.[7][8]

Zsh was at first intended to be a subset of csh for the Amiga, but expanded far beyond that. By the time of the release of version 1.0 in 1990 the aim was to be a cross between ksh and tcsh ��� a powerful "command and programming language" that is well-designed and logical (like ksh), but also built for humans (like tcsh), with all the neat features like spell checking, login/logout watching and termcap support that were "probably too weird to make it into an AT&T product".[9]

Zsh is available as a separate package for Microsoft Windows as part of the UnxUtils collection of native Win32 ports of common GNU Unix-like utilities.[10]

In 2019, macOS Catalina adopted Zsh as the default login shell, replacing the GPLv2 licensed version of Bash,[11] and when Bash is run interactively on Catalina, a warning is shown by default.[12]

In 2020, Kali Linux adopted Zsh as the default shell since its 2020.4 release.[13]

Features
Edit

Z shell's configuration utility for new users

Zsh with Agnoster theme running on Konsole terminal emulator
Features include:[14]

Programmable command-line completion that can help the user type both options and arguments for most used commands, with out-of-the-box support for several hundred commands
Sharing of command history among all running shells
Extended file globbing allows file specification without needing to run an external program such as find
Improved variable/array handling
Editing of multi-line commands in a single buffer
Spelling correction and autofill of command names (and optionally arguments, assumed to be file names)
Various compatibility modes, e.g. Zsh can pretend to be a Bourne shell when run as /bin/sh
Themeable prompts, including the ability to put prompt information on the right side of the screen and have it auto-hide when typing a long command
Loadable modules, providing among other things: full TCP and Unix domain socket controls, an FTP client, and extended math functions.
The built-in where command. Works like the which command but shows all locations of the target command in the directories specified in $PATH rather than only the one that will be used.
Named directories. This allows the user to set up shortcuts such as ~mydir, which then behave the way ~ and ~user do.
Community
Edit

Oh My Zsh logo
A user community website known as "Oh My Zsh" collects third-party plug-ins and themes for the Z shell. As of 2021, their GitHub repository has over 1900 contributors, over 300 plug-ins, and over 140 themes. It also comes with an auto-update tool that makes it easier to keep installed plug-ins and themes updated.[15]

See also
Edit
	Free and open-source software portal
Comparison of command shells
References
Edit
 "The Z Shell Manual" (Version 5.8.1). Sourceforge.io. July 21, 2012. Archived from the original on February 20, 2018. Retrieved March 29, 2022.
 "unposted: Release 5.9". sourceforge.net. May 14, 2022. Retrieved May 16, 2022.
 "zsh / Code / [281031] /LICENCE". Paul Falstad. Archived from the original on March 2, 2021. Retrieved February 7, 2015.
 "MIT License Modern Variant".
 "zsh - a ksh/tcsh-like shell (part 1 of 8)". alt.sources. December 14, 1990. Retrieved September 18, 2012.
 "Z-Shell Frequently-Asked Questions". Sourceforge.net. February 15, 2010. Archived from the original on March 2, 2021. Retrieved September 18, 2012.
 "The Z-Shell (ZSH) Lovers' Page". Guckes.net. c. 2004. Archived from the original on May 17, 2017. Retrieved October 2, 2012.
 "Zsh Mailing List Archive". Zsh.org. August 8, 2005. Archived from the original on March 2, 2021. Retrieved October 2, 2012.
 "zsh 1.0 announcement". GitHub. 15 April 2021.
 "Native Win32 ports of some GNU utilities". Archived from the original on 2006-02-09. Retrieved 2020-07-25.
 Warren, Tom (June 4, 2019). "Apple replaces bash with zsh as the default shell in macOS Catalina". The Verge. Archived from the original on June 10, 2019. Retrieved June 13, 2019.
 "Use zsh as the default shell on your Mac - Apple Support". Archived from the original on 2 December 2019. Retrieved 1 July 2019.
 "Kali Linux 2020.4 Release (ZSH, Bash, CME, MOTD, AWS, Docs, Win-KeX & Vagrant) | Kali Linux Blog". Kali Linux. Retrieved 2021-03-03.
 "Z-Shell Frequently-Asked Questions". zsh.sourceforge.net. Archived from the original on 2021-03-02. Retrieved 2020-03-04.
 Russel, Robby (23 March 2016). "d'Oh My Zsh". freeCodeCamp. Retrieved 18 August 2020.
1 / 1
ChatGPT
ChatGPT
The Z shell (Zsh) is a Unix shell developed by Paul Falstad in 1990, offering interactive login shell and command interpreter functionalities. Its enhancements over the Bourne shell include features from Bash, ksh, and tcsh, such as programmable command-line completion, extended file globbing, improved variable/array handling, and themeable prompts.
Zsh was initially created as a subset of csh for the Amiga, eventually evolving to incorporate the strengths of ksh and tcsh. It was designed to be a powerful and well-structured "command and programming language" that is also user-friendly.
Zsh is part of the UnxUtils collection available for Microsoft Windows. It was adopted as the default shell for macOS with the release of Catalina in 2019, and for Kali Linux in its 2020.4 release.
Key features of Zsh include programmable command-line completion, sharing of command history among all running shells, improved variable/array handling, spelling correction, themeable prompts, and loadable modules offering extended functionalities. The "Oh My Zsh" user community website provides a platform for third-party plug-ins and themes and has a large and active contributor base.
1 / 1
Built-in test command ��� System III shell (1981)
# as comment character ��� System III shell (1981)
Colon in parameter substitutions "${parameter:=word}" ��� System III shell (1981)
continue with argument ��� System III shell (1981)
cat <<-EOF for indented here documents ��� System III shell (1981)
Functions and the return builtin ��� SVR2 shell (1984)
Built-ins unset, echo, type ��� SVR2 shell (1984)
Source code de-ALGOL68-ized ��� SVR2 shell (1984)
Modern "$@" ��� SVR3 shell (1986)
Built-in getopts ��� SVR3 shell (1986)
Cleaned up parameter handling allows recursively callable functions ��� SVR3 shell (1986)
8-bit clean ��� SVR3 shell (1986)
Job control ��� SVR4 shell (1989)
Multi-byte support ��� SVR4 shell (1989)
Variants
Edit
DMERT shell
Edit
Duplex Multi-Environment Real-Time (DMERT) is a hybrid time-sharing/real-time operating system developed in the 1970s at Bell Labs Indian Hill location in Naperville, Illinois uses a 1978 snapshot of Bourne Shell "VERSION sys137 DATE 1978 Oct 12 22:39:57".[citation needed] The DMERT shell runs on 3B21D computers still in use in the telecommunications industry.[citation needed]

Korn shell
Edit

Interaction with pdksh in OpenBSD (default shell)
The Korn shell (ksh) written by David Korn based on the original Bourne Shell source code,[8] was a middle road between the Bourne shell and the C shell. Its syntax was chiefly drawn from the Bourne shell, while its job control features resembled those of the C shell. The functionality of the original Korn Shell (known as ksh88 from the year of its introduction) was used as a basis for the POSIX shell standard. A newer version, ksh93, has been open source since 2000 and is used on some Linux distributions. A clone of ksh88 known as pdksh is the default shell in OpenBSD.

Schily Bourne Shell
Edit
J��rg Schilling's Schily-Tools includes three Bourne Shell derivatives.[9]

Relationship to other shells
Edit
C shell
Edit
Bill Joy, the author of the C shell, criticized the Bourne shell as being unfriendly for interactive use,[10] a task for which Stephen Bourne himself acknowledged C shell's superiority. Bourne stated, however, that his shell was superior for scripting and was available on any Unix system,[11] and Tom Christiansen also criticized C shell as being unsuitable for scripting and programming.[12]

Almquist shells
Edit
Due to copyright issues surrounding the Bourne Shell as it was used in historic CSRG BSD releases, Kenneth Almquist developed a clone of the Bourne Shell, known by some as the Almquist shell and available under the BSD license, which is in use today on some BSD descendants and in low-memory situations. The Almquist Shell was ported to Linux, and the port renamed the Debian Almquist shell, or dash. This shell provides faster execution of standard sh (and POSIX-standard sh, in modern descendants) scripts with a smaller memory footprint than its counterpart, Bash. Its use tends to expose bashisms ��� bash-centric assumptions made in scripts meant to run on sh.

Other shells
Edit
Bash (the Bourne-Again shell) was developed in 1989 for the GNU project and incorporates features from the Bourne shell, csh, and ksh. It is meant to be POSIX-compliant.
rc was created at Bell Labs by Tom Duff as a replacement for sh for Version 10 Unix. It is the default shell for Plan 9 from Bell Labs. It has been ported to UNIX as part of Plan 9 from User Space.
Z shell, developed by Paul Falstad in 1990, is an extended Bourne shell with a large number of improvements, including some features of Bash, ksh, and tcsh.
Usage
Edit
The Bourne shell was once standard on all branded Unix systems, although historically BSD-based systems had many scripts written in csh. As the basis of POSIX sh syntax, Bourne shell scripts can typically be run with Bash or dash on Linux or other Unix-like systems.
1 / 1
ChatGPT
ChatGPT
The Bourne shell, a Unix shell or command-line interpreter, introduced numerous features that influenced subsequent shells. Key improvements introduced between 1981 and 1989 include a built-in test command, the use of '#' as a comment character, parameter substitutions, 'cat <<-EOF' for indented here documents, the introduction of functions, and job control.
Variants of the Bourne shell include the DMERT shell, the Korn shell (ksh), and Schily Bourne Shell. DMERT (Duplex Multi-Environment Real-Time) is a hybrid time-sharing/real-time operating system developed in the 1970s that used a snapshot of the Bourne Shell. The Korn shell, written by David Korn, is a middle road between the Bourne shell and the C shell, and has been open-sourced since 2000. The Schily-Tools by J��rg Schilling include three Bourne Shell derivatives.
The Bourne shell also has relationships with other shells. While the C shell was acknowledged by its author, Bill Joy, and Stephen Bourne as superior for interactive use, Bourne argued that his shell was superior for scripting and was available on any Unix system. Kenneth Almquist developed a clone of the Bourne Shell known as the Almquist shell due to copyright issues, which was later ported to Linux and renamed as the Debian Almquist shell (dash).
The Bourne shell influenced other shells such as Bash (the Bourne-Again shell) developed for the GNU project in 1989, rc, which was created at Bell Labs by Tom Duff, and Z shell, developed by Paul Falstad in 1990. The Bourne shell was once standard on all branded Unix systems, and its scripts can typically be run with Bash or dash on Linux or other Unix-like systems.
1 / 1
I want to make a wikipedia page like this, titled Xonsh


XONSH is a Python-powered shell

Xonsh is a Python-powered, cross-platform, Unix-gazing shell language and command prompt. The language is a superset of Python 3.6+ with additional shell primitives that you are used to from Bash and IPython. It works on all major systems including Linux, OSX, and Windows. Xonsh is meant for the daily use of experts and novices.

https://xon.sh/


Projects that use xonsh or compatible
gitsome: Supercharged Git/shell autocompleter with GitHub integration.
xxh: Using xonsh wherever you go through the SSH.
rever: Cross-platform software release tool.
Regro autotick bot: Regro Conda-Forge autoticker.

https://github.com/xonsh/xonsh



Xonsh Shell Combines the Best of Bash Shell and Python in Linux Terminal

https://manpages.org/xonsh

Abhishek Prakash
11 Jan 2023
3 min read
4 Comments

Which is the most popular shell? I guess you���ll say bash or perhaps zsh and you are right about that.

There are several shells available for UNIX and Linux systems. bash, ksh, zsh, fish and more.

Recently, I came across another shell which offers a unique twist of combining Python and bash.

Xonsh shell for the Python loving Linux users
Xonsh is a Python-powered, cross-platform, shell language and command prompt.

It combines Python and bash shell in a way that you can run Python commands directly in the shell. You can even combine Python and shell commands.

xonsh(1)
Pythonish, BASHwards looking shell
DESCRIPTION
Xonsh is a Python-ish shell language and command prompt. Unlike other shells, xonsh is based on Python, with additional syntax added that makes calling subprocess commands, manipulating the environment, and dealing with the file system easy. Xonsh supports all normal Python constructs and a subset of those available in bash.
usage: xonsh [-h] [-V] [-c COMMAND] [-i] [-l] [--config-path CONFIG_PATH]

[--no-rc] [--no-script-cache] [--cache-everything] [-D ITEM] [--shell-type {readline,prompt_toolkit,best,random}] [script-file] ...
xonsh

https://itsfoss.com/xonsh-shell/
1 / 1
ChatGPT
ChatGPT
Xonsh
Xonsh is a Python-powered, cross-platform, Unix-gazing shell language and command prompt. It's designed for both daily use and offering a powerful environment for experts. The Xonsh language is a superset of Python 3.6+ with additional shell primitives that users are accustomed to from Bash and IPython. It is capable of running on all major systems, including Linux, macOS, and Windows. Xonsh provides a novel combination of shell and Python scripting capabilities, blending their ease and expressiveness in a single, powerful tool.
Features
Xonsh combines elements of standard shells such as Bash with the power and flexibility of Python. This allows users to effectively mix shell and Python syntax in their command prompts.
Command history from both Python and shell commands is combined in a unified history file, making it easy to search and reuse previous commands.
Python libraries and modules can be easily accessed and used in shell commands.
It offers customizable and richly colored prompt, enhancing readability.
Official Website
Xonsh Official Website
Usage
Xonsh can be used as a replacement for traditional Unix shells such as Bash, Zsh, and Fish. It combines the ease-of-use and interactive prompt of a Unix shell with the scripting capabilities of Python. This combination allows for a highly flexible and powerful command prompt experience.
xonsh
Copy code
# Pythonish, BASHwards looking shell
# usage: xonsh [-h] [-V] [-c COMMAND] [-i] [-l] [--config-path CONFIG_PATH]
# [--no-rc] [--no-script-cache] [--cache-everything] [-D ITEM] [--shell-type {readline,prompt_toolkit,best,random}] [script-file] ...
xonsh
Projects that use Xonsh or are Compatible
Gitsome
: Supercharged Git/shell autocompleter with GitHub integration.
Xxh
: Use Xonsh wherever you go through SSH.
Rever
: A cross-platform software release tool.
Regro autotick bot
: The Regro Conda-Forge autoticker.
In the News
In a recent article by
It's FOSS
, author Abhishek Prakash reviewed Xonsh, highlighting its unique combination of Python and Bash shell features. The article emphasized Xonsh's strength as a tool for Python enthusiasts who also work with Linux systems.
References
GitHub Repository
Manpage
It's FOSS Article
1 / 1
Ok there is too much detail, it sounds like an advertisement, I just want a simple overview, inline <ref> tags, see also section, categories
1 / 1
ChatGPT
ChatGPT
Xonsh
Xonsh is a Python-powered, Unix-like shell language and command prompt. The language integrates features of Python 3.6+ and common shell primitives, providing a unique platform for system interactions<sup>[1]</sup>. It is designed to work on all major systems, including Linux, macOS, and Windows<sup>[2]</sup>.
Overview
Created for both daily use and expert-level scripting, Xonsh offers a blend of the user-friendly interactive command prompt seen in Unix shells with the powerful scripting capabilities of Python<sup>[3]</sup>. The shell language allows users to run and mix Python and shell commands directly, offering an enriched command-line experience<sup>[4]</sup>.
See Also
Bash
Zsh
Fish (shell)
References
Xonsh Official Website
Xonsh on GitHub
Manpage
It's FOSS Article
Categories
[Command shells]
[Python (programming language) software]
[Unix programming tools]
[Free software programmed in Python]
1 / 1
References in ref tags
1 / 1
ChatGPT
ChatGPT
Xonsh
Xonsh is a Python-powered, Unix-like shell language and command prompt. The language integrates features of Python 3.6+ and common shell primitives, providing a unique platform for system interactions<ref>[
https://xon.sh/
Xonsh Official Website]</ref>. It is designed to work on all major systems, including Linux, macOS, and Windows<ref>[
https://github.com/xonsh/xonsh
Xonsh on GitHub]</ref>.
Overview
Created for both daily use and expert-level scripting, Xonsh offers a blend of the user-friendly interactive command prompt seen in Unix shells with the powerful scripting capabilities of Python<ref>[
https://manpages.org/xonsh
Manpage]</ref>. The shell language allows users to run and mix Python and shell commands directly, offering an enriched command-line experience<ref>[
https://itsfoss.com/xonsh-shell/
It's FOSS Article]</ref>.
See Also
Bash
Zsh
Fish (shell)
References
<references />
Categories
[Command shells]
[Python (programming language) software]
[Unix programming tools]
[Free software programmed in Python]
1 / 1
I wonder if I could have a very short paragraph mentioning it, for this page:

Shell (computing)Edit
Article Talk
Language
Unwatch
History
Edit
More
In computing, a shell is a computer program that exposes an operating system's services to a human user or other programs. In general, operating system shells use either a command-line interface (CLI) or graphical user interface (GUI), depending on a computer's role and particular operation. It is named a shell because it is the outermost layer around the operating system.[1][2]
1 / 1
ChatGPT
ChatGPT
Sure, here's a short paragraph that can be added to the "Shell (computing)" page:
One example of a shell is Xonsh, a Python-powered, Unix-like shell language and command prompt. It integrates features of Python 3.6+ and common shell primitives, combining the functionality of traditional Unix shells with the scripting capabilities of Python. This allows users to run and mix Python and shell commands directly in the command line, offering a unique blend of command-line interaction and scripting<ref>[
https://xon.sh/
Xonsh Official Website]</ref>.
1 / 1
How about something even shorter like here The command-line shell may offer features such as command-line completion, where the interpreter expands commands based on a few characters input by the user. A command-line interpreter may offer a history function, so that the user can recall earlier commands issued to the system and repeat them, just say some shells like xonsh, bash, z shell have command line completion
1 / 1
ChatGPT
ChatGPT
Absolutely, here's a revised and condensed sentence:
Several command-line shells, such as Xonsh, Bash, and Z shell, offer command-line completion, enabling the interpreter to expand commands based on a few characters input by the user<ref>[
https://xon.sh/
Xonsh Official Website]</ref>.
1 / 1
ChatGPT may produce inaccurate information about people, places, or facts.
ChatGPT May 24 Version
ChatGPT





