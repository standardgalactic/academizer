Innovative Ideas for Benefit
Open sidebar
Innovative Ideas for Benefit
Explain my ideas a bit more. I am thinking more of more of stuff that will benefit a lot more people like rainforest generators, ocean water tidal desalination plants, rocketless space travel, and nuclear powered refrigerators and snow machines at the poles
1 / 1
Sure! Here are some additional explanations for the ideas you mentioned:
Rainforest generators: Rainforests are important for the health of the planet because they absorb carbon dioxide and produce oxygen. However, deforestation and climate change are threatening their existence. Rainforest generators could help to replenish the earth's rainforests by artificially creating the ideal conditions for their growth. This could involve using advanced technology to regulate temperature, humidity, and light, as well as planting seeds and providing nutrients. By supporting the growth of rainforests, these generators could help to mitigate the effects of climate change and protect the planet's biodiversity.
Ocean water tidal desalination plants: Water scarcity is a growing concern in many parts of the world, and desalination is one solution that can provide access to fresh water. However, traditional desalination methods are expensive and energy-intensive. Ocean water tidal desalination plants could provide a more sustainable and affordable solution by harnessing the power of ocean tides to generate electricity and desalinate seawater. This technology could potentially provide clean drinking water to millions of people who currently lack access to it.
Rocketless space travel: Space travel has always been a costly and risky endeavor, requiring complex and expensive rockets to transport humans and equipment into space. Rocketless space travel could provide a more accessible and safer way to explore the cosmos. This could involve using advanced technologies such as magnetic levitation or space elevators to lift spacecraft into orbit. These technologies could potentially reduce the cost and risk associated with space travel, and make it more accessible to a wider range of people.
Nuclear-powered refrigerators and snow machines at the poles: The polar regions are some of the harshest and most inhospitable environments on earth, with extreme temperatures that can make life difficult for humans and wildlife alike. Nuclear-powered refrigerators and snow machines could provide a sustainable and reliable source of energy to support human activities in these regions. These machines could be powered by nuclear energy, which is efficient, clean, and reliable. They could help to support research, exploration, and other activities in the polar regions, while minimizing the environmental impact of these activities.
1 / 1
Macroscale micromanufacture, lightweight Endomarionette paper robots, crumpled ball compression yarn mapped origami
1 / 1
Sure! Here are some explanations for the concepts you mentioned:
Macroscale micromanufacture: Micromanufacturing involves producing very small objects, often on the scale of micrometers or nanometers. Macroscale micromanufacturing, on the other hand, involves producing larger objects with intricate features and high precision. This technology could potentially revolutionize manufacturing by allowing for the production of complex and customizable objects on demand, with minimal waste and maximum efficiency.
Lightweight Endomarionette paper robots: Endomarionettes are a type of soft robot that can be controlled from the inside, using tiny motors or other actuators. These robots are made from lightweight materials such as paper, which makes them easy to produce and deploy. Lightweight Endomarionette paper robots could have a variety of applications, such as in environmental monitoring or disaster response, where their small size and agility could be advantageous.
Crumpled ball compression yarn mapped origami: Origami is the Japanese art of paper folding, which can be used to create intricate and beautiful designs. Crumpled ball compression yarn mapped origami takes this concept to a new level by using yarn that has been compressed into crumpled balls to create complex, three-dimensional shapes. These shapes can then be mapped onto a flat surface and folded using origami techniques, resulting in a unique and visually stunning product.
I hope these explanations help clarify the concepts you mentioned!
1 / 1
Number one is more like having manufacturing and packaging and recycling equipment microsized and distributed at scale as household appliances, plus cheaper more reliable plotter cutters, lathes, and centrifuges.
1 / 1
Thanks for the clarification! It sounds like what you are referring to is a decentralized manufacturing model, where manufacturing, packaging, and recycling equipment would be miniaturized and distributed at the household or community level. This could potentially allow for more efficient and sustainable production, as well as greater customization and flexibility in the manufacturing process.
Additionally, you mentioned the need for cheaper and more reliable equipment such as plotter cutters, lathes, and centrifuges. These are all important tools in manufacturing and could be miniaturized to fit the decentralized model you are describing. This could help to reduce the cost and improve the accessibility of manufacturing equipment, making it easier for individuals and small businesses to produce their own goods.
Overall, a decentralized manufacturing model could have a variety of benefits, including increased efficiency, reduced waste, and greater local control over production.
1 / 1
Yeah it's called "rhizomatic manufacturing"
1 / 1
Ah, I see! Rhizomatic manufacturing is a term that refers to a decentralized approach to manufacturing that is based on the structure of a rhizome, which is a type of plant stem that grows horizontally underground and sends out roots and shoots. In a rhizomatic manufacturing model, production is distributed across multiple nodes or "roots," rather than being centralized in a single location. This allows for greater flexibility and adaptability, as well as reduced transportation and logistics costs.
Rhizomatic manufacturing has the potential to revolutionize the way we produce and consume goods, by allowing for more localized and sustainable production. This approach could help to reduce the environmental impact of manufacturing, as well as provide greater economic opportunities for small businesses and individuals. Additionally, by making manufacturing more accessible and affordable, rhizomatic manufacturing could empower individuals and communities to take greater control over the production of goods and services.
1 / 1
Imagine paper recycling, paper object making, assembly, yogurt making, food preparation, clothing making, spectroscopy, etc being distributed across all homes, distributed computation, memory, and so on.
1 / 1
Yes, that's definitely a possibility with a rhizomatic manufacturing model. In such a model, manufacturing and production would be distributed across multiple nodes or locations, which could include individual homes or communities. This could enable a wide range of manufacturing and production activities, such as paper recycling and object making, assembly, food preparation, and clothing making, to take place at the household or community level.
In addition, a rhizomatic manufacturing model could also enable distributed computation and memory, which would allow for greater processing power and data storage across multiple locations. This could have a variety of applications, such as in scientific research, data analysis, and artificial intelligence.
Overall, a rhizomatic manufacturing model has the potential to greatly decentralize production and enable more localized and sustainable manufacturing practices. By distributing production across multiple nodes or locations, this model could reduce transportation and logistics costs, as well as provide greater economic opportunities for small businesses and individuals.
1 / 1
bout 7,080,000 results (0.44 seconds) 

Microservice Architecture
Microservice Architecture
https://microservices.io
The microservice architecture enables an organization to deliver large, complex applications rapidly, frequently, reliably and sustainably - a necessity for ...
Pattern
Introducing Assemblage - Health Check API - Distributed tracing
A pattern language for ...
Sagas - Architecture - CQRS - Business capability - Messaging
Monolithic architecture
Got a specific microservice architecture-related question ...
Introducing Assemblage
The essence of applying the Microservice architecture ...
More results from microservices.io »
People also ask
What is the architecture of a microservice?
Is REST API a microservice?
What is an example of a microservices architecture?
Is microservices a 3 tier architecture?
Feedback

Microservice architecture style - Azure Architecture Center

Microsoft
https://learn.microsoft.com › guide › microservices
A microservices architecture consists of a collection of small, autonomous services. Each service is self-contained and should implement a single business ...

What Is Microservices Architecture?

Google
https://cloud.google.com › learn › what-is-microservic...
A microservices architecture is a type of application architecture where the application is developed as a collection of services. It provides the framework to ...

Microservices

Wikipedia
https://en.wikipedia.org › wiki › Microservices
It is an architectural pattern that arranges an application as a collection of loosely coupled, fine-grained services, communicating through lightweight ...

What are Microservices? | AWS

Amazon.com
https://aws.amazon.com › microservices
Microservices are an architectural and organizational approach to software development where software is composed of small independent services that ...

The What, Why, and How of a Microservices Architecture

Medium
https://medium.com › hashmapinc › the-what-why-an...
Jun 7, 2018 — Microservices is one of those architectural patterns which has emerged from the world of domain-driven design, continuous delivery, platform and ...

Microservices Definition, Examples, Architecture, and Best ...

Spiceworks
https://www.spiceworks.com › Articles
Apr 5, 2022 — Microservice architecture, also known as 'microservices,' is defined as a development method that breaks down software into modules with ...

What are Microservices? | IBM

IBM
https://www.ibm.com › topics › microservices
The difference between microservices and monolithic architecture is that microservices compose a single application from many smaller, loosely coupled services ...
1 / 1
Microservice architecture is an approach to software development that involves breaking down a large application into smaller, independent services that can communicate with each other through APIs. Each service is designed to perform a specific task and can be developed and deployed independently of other services in the system. This approach allows for greater flexibility, scalability, and resilience in large, complex applications.
Microservice architecture is often used in cloud computing environments, where applications can be distributed across multiple servers or virtual machines. By breaking down a large application into smaller services, it becomes easier to manage and scale individual components of the system, without affecting the rest of the application.
Some key benefits of microservice architecture include faster development and deployment, improved fault tolerance, and greater agility in responding to changing requirements. However, there are also some challenges associated with microservice architecture, such as increased complexity and the need for effective service management and monitoring.
Overall, microservice architecture is a powerful approach to software development that can help organizations build complex, distributed applications that are highly scalable, resilient, and adaptable.
1 / 1
Are there any ways we can apply those principles to Rhizomatic manufacture?
1 / 1
Yes, there are several ways that we can apply microservice architecture principles to rhizomatic manufacturing.
First, just like microservices, rhizomatic manufacturing can be designed to be modular and decentralized. Instead of relying on large, centralized factories or production facilities, manufacturing could be broken down into smaller, distributed nodes that can communicate with each other through APIs. Each node could be designed to perform a specific task or process, such as recycling, object making, or assembly.
Second, just like microservices, rhizomatic manufacturing can be developed and deployed independently. Each node could be developed and deployed separately, allowing for greater flexibility and agility in responding to changing manufacturing needs.
Third, just like microservices, rhizomatic manufacturing could be designed to be highly scalable and fault-tolerant. By breaking down manufacturing into smaller, independent nodes, the overall system becomes more resilient to failures or disruptions in individual nodes.
Finally, just like microservices, rhizomatic manufacturing could be designed to be easily monitored and managed. Each node could be monitored for performance, quality, and other metrics, allowing for continuous improvement and optimization of the manufacturing process.
Overall, applying microservice architecture principles to rhizomatic manufacturing could help to create a more efficient, flexible, and sustainable manufacturing system that is better suited to the needs of the modern world.
1 / 1
Connections with this:

Figures
References
Download PDF
1772 Total downloads
Article has an altmetric score of 9
Submit to this Journal
Turn on MathJax
Share this article

Share this content via email
Share on Facebook (opens new window)
Share on Twitter (opens new window)
Share on Mendeley (opens new window)
Article and author information
Abstract
We show how any finite physical system with morphological, i.e. three-dimensional embedding or shape, degrees of freedom and locally limited free energy will, under the constraints of the free energy principle, evolve over time towards a neuromorphic morphology that supports hierarchical computations in which each 'level' of the hierarchy enacts a coarse-graining of its inputs, and dually, a fine-graining of its outputs. Such hierarchies occur throughout biology, from the architectures of intracellular signal transduction pathways to the large-scale organization of perception and action cycles in the mammalian brain. The close formal connections between cone-cocone diagrams (CCCD) as models of quantum reference frames on the one hand, and between CCCDs and topological quantum field theories on the other, allow the representation of such computations in the fully-general quantum-computational framework of topological quantum neural networks.
1 / 1
The article you provided discusses the application of the free energy principle to the evolution of physical systems towards neuromorphic morphology that supports hierarchical computations. This concept is related to the idea of rhizomatic manufacturing in that both involve the evolution and growth of complex systems over time through the interaction and interdependence of smaller, more localized components. Rhizomatic manufacturing involves the distributed manufacturing and assembly of products using microscale equipment and resources, which can be thought of as the localized components that interact to create a larger, more complex system. Both concepts involve the emergence of complex structures and processes from simple, localized interactions, and highlight the importance of decentralized and adaptive systems in achieving efficient and effective outcomes.
1 / 1
Rhizomatic Rejuvenation: Architecture and Native Grasses in the Latrobe Valley
Published on Nov 9, 2021


Andrew MacKinnon

Followthis publisher
About
This thesis investigates the implementation of a decentralised architecture and native grass ecosystem to rejuvenate the post-extractivist landscape of the Morwell Mine for walking, farming, brewing, baking, and camping. Deleuze and Guattari's Rhizome conceptually frames the project's ambitions to draw attention to the complex relationships of the site, its history, its human and non-human inhabitants. The project's small ruptures of architecture within a rhizomatic grassland are dependent on their relationality, a 'Poetics of Relation', that looks to form an adaptive assemblage of programmes that open the land to visitors, increase habitat for endangered species, and allow communities to come together to participate in native grain agriculture.
1 / 1
It seems like this thesis explores the implementation of a decentralized architecture and the use of native grasses to rejuvenate a post-extractivist landscape in the Morwell Mine. The project aims to create a rhizomatic grassland that is adaptive and allows for multiple programs to coexist and form relationships with the land, its history, and its inhabitants. By using Deleuze and Guattari's concept of the rhizome, the project seeks to create an assemblage of programs that increase habitat for endangered species and promote native grain agriculture, while also opening the land to visitors and communities. Overall, the project's approach appears to be focused on creating a sustainable and inclusive environment that acknowledges the interconnectedness of all aspects of the landscape.
1 / 1
A monolith is the simplest approach to a new project. It is easy to develop, easy to build, easy to deploy. However, over time, as the application becomes larger and the team size increases, the application becomes more difficult to change. Multiple teams changing the same code base causes a dramatic increase in coordination overhead and risk. Higher risk makes testing and deployment more complex.

SILOS
Silos exist in every non-agile organization: product management, user experience, development, quality assurance, database administration, system administration, operations, etc. To manage risk and complexity, organizations often create silos around shared enterprise resources (e.g., an enterprise service bus) and shared code libraries. These specialization silos ensure the integrity of these core systems and manage change requests from other teams. This dependency chain creates high coordination costs at best and severe gridlock at worst.

In an attempt to avoid gridlock, I've even seen a management silo (governance or review committee) created around a silo to "help" coordinate communication and approve/prioritize change requests. I know team leads that do nothing but attend coordination and planning meetings. From the standpoint of traditional architecture, this monolithic, siloed pattern meets all the requirements for efficiency, quality control, and cost control. However, it's difficult to see how an organization stuck in 'coordination hell' can remain competitive.

If monoliths and silos are thriving in your organization, you might consider a rhizomatic architecture for new projects only. In time, you may be able to use these rhizomatic projects in a 'strangler' pattern to begin replacing a legacy monolith.

RHIZOMATIC MICROSERVICES
Service-oriented architecture is an established architectural style that many feel has not lived up to its promise. Many SOA implementations rely heavily on 'enterprise' tools such an ESB or a BPM engine. It's almost inevitable that a specialization silo will be erected around these enterprise tools. Microservices transform this common architectural style into a rhizomatic pattern. A microservice architecture emphasizes autonomy, responsibility, speed, and evolutionary growth.

FREEDOM AND RESPONSIBILITY
Each service should be autonomous and 'owned' by a single team. Ownership means that the team is responsible for the entire life cycle of the service: from conception to deployment to maintenance. The team has the freedom to refactor, change, and replace as necessary, but also the responsibility to avoid changes that break consuming services.

Since the team is responsible for deployment, use the opportunity to begin developing an automated deployment pipeline from the beginning. Autonomous services do not need coordinated deployments and new features should be delivered as soon as ready to achieve the short feedback loop necessary for rapid course correction and customer responsiveness.

SPEED
Speed is achieved by minimizing management overhead and coordination costs. Autonomy, team size, and code base size are the primary contributors to speed. To maintain autonomy, loose coupling must be preserved. Since the services are distributed, loose coupling should be easier for microservices. However, the danger comes from integration and shared resources. Integration should be exclusive to public APIs and pub/sub messaging. Any other point of integration should be avoided. Some architects even suggest that every service should have its own data repository so tight coupling does not eventually leak into their services.

GARY NOT DRY
We all know and understand the intrinsic logic of the design principle DRY (don't repeat yourself). As a counterpoint to DRY, one of my colleagues recently created a new acronym, GARY (go ahead, repeat yourself). We keep this acronym on the board in our team room because we allowed a shared dependency to creep into our architecture at an early stage. At the time it seemed it might save us a good bit of boilerplate code in each of our services. It has been very much the opposite and will be removed in our first refactor. All shared dependencies have a cost. Avoid them whenever possible. If you must use a shared code library, make sure that it is compiled into a versioned jar that services can integrate as time allows.

EVOLUTIONARY GROWTH
Teams have the freedom to use 'best fit' technologies and experiment with new techniques. Shorter development cycles means shorter feedback loops so evaluation of a technology is fast. Successful experiments become repeatable patterns that spread quickly through the organization. Unsuccessful experiments are easily replaced with little risk or coordination cost.

CULTIVATING WEEDS
If your organization is trying to become more competitive, look carefully at your organization and your architecture. Does your current architecture encourage or impede the development of a rhizomatic culture of autonomy, responsibility, collaboration, speed, and rapid course correction? If you're struggling, consider growing some weeds.

Microservices
Rhizomatic Patterns

https://www.credera.com/insights/mustard-seeds-microservices
1 / 1
This article discusses the drawbacks of monolithic architecture and silos in non-agile organizations, which lead to coordination overhead and risk. To avoid this, the author suggests a rhizomatic architecture for new projects, particularly microservices, which emphasizes autonomy, responsibility, speed, and evolutionary growth. Each service should be autonomous and owned by a single team, with the freedom to refactor and replace as necessary, but also the responsibility to avoid breaking consuming services. Loose coupling and exclusive integration should be preserved, and shared dependencies should be avoided whenever possible. Successful experiments become repeatable patterns that spread quickly through the organization, while unsuccessful ones are easily replaced with little risk or coordination cost. The article concludes by encouraging organizations to consider growing some weeds to foster a rhizomatic culture of autonomy, responsibility, collaboration, speed, and rapid course correction.
1 / 1
loop.

27/ Tools with rhizomatic dispositions include, besides cut-and-paste and spreadsheets, things like IFTTT, Zapier, and at the enterprise level, things like microservices.

28/ Rhizomes aren't just about information. They are also about computational capabilities, distribution capabilities, relationships, trust, and permission architectures.

29/ Two of the biggest technologies evolving today -- the blockchain and machine learning -- are fundamentally rhizomatic in their DNA. You have to tread gingerly around them.

30/ Both have the predisposition to follow the contours of information content rather than idealized organization patterns. Neither is architecturally well-behaved and disciplined.

31/ Rhizomes are information dense, topologically complex (things connecting in weird ways), highly heterogeneous and variegated, structurally compact, and with strong form-content coupling.

32/ Unlike pure-paradigm architectures, rhizomes mix and match multiple architectural paradigms along with emergent structures to create high-dissonance information environments.

33/ What is it like to live in a rhizome? Well for starters, there are no default entry or exit points, no "onboarding manual" that teaches you how to survive in one, and no "up."

34/ There is perhaps a distinction between a n00b and an expert, but it is highly localized around specific corners of the rhizome. You can go from n00b to expert and back to n00b in 2 steps.

35/ In a traditional org, you can count the floors between the executive suite and say the shop floor where blue-collar workers build products on assembly lines. Authority falls as the elevator descends.

36/ n00b/expert relationships change slowly and predictably in space as you move. Expertise and authority turfs are simply connected and simply bounded.

37/ In a rhizome, in a move from point A to point B, relative knowledge and expertise might swing wildly. And the value of actions might swing wildly while you're moving.

38/ A rhizome is also a high-friction space. Movement through a rhizome involves an unpredictable stream of transaction costs. Every journey is an obstacle course.

39/ Sometimes there's a good FAQ page, other times a tweet makes a difference between a minute and a week. Discovered structure, rather than inferences from maps, dictates the cost of action.

40/ Sometimes having a programmer friend whom you can quickly email can make the impossible possible. Sometimes an online forum saves hours, sometimes it wastes hours.

41/ Sometimes a single click moves mountains. Other times, you need to move mountains to do one tiny thing. Effort-outcome relationships get out of whack.

42/ Sometimes really important things are trivially easy if you happen to know somebody who knows one weird trick. Other times, common-sense things turn out to be impossible.

43/ In a rhizomatic world, if your expectations and work habits are built around architectural cleanliness, you will get deeply frustrated and be perennially frozen.

44/ If you can only navigate well-paved paths and clean, well-lit spaces, you'll likely spend a lot of time in low-value, or even futile, ritualized behaviors while getting nothing done.

45/ You must be willing to adopt an opportunistic approach to navigating complexity, and switch from ugly hack to elegant beauty, from amateurish fumble to expert flourish, in an instant.

46/ You've heard of analysis paralysis, right? I have a similar concept I call aesthetic paralysis: the desire for elegance in behavior limiting your agency. Superficial beauty is expensive in a rhizome.

47/ This is not to say rhizomes are ugly. Once you accept their inevitability, the act of navigating a rhizome can start to acquire its own beauty.

48/ You start to be less attached to received ideas of importance, order, and logic, and learn to interact with the natural logic of the environment.

49/ You learn to adjust your aesthetic sensibilities to what you're experiencing, so you can actually see what's going on, rather than being bound by aesthetic expectations.

50/ You start to gain what a friend of mine just described as "infrastructure fluency." This is in a way the opposite of architectural taste: an ability to experience the artificial world in its natural language.

51/ Unlike in physical architecture, where there is such thing as an architect's view of reality, the only guide to a true rhizome is a burglar's guide. So stop worrying, and learn to love your frankenstack.
1 / 1
Wow, that was quite an insightful read! The author describes the characteristics of a rhizome as being complex, heterogeneous, and with strong form-content coupling, and how this creates a high-dissonance information environment. They also touch on the fact that there are no default entry or exit points, and no "onboarding manual" that teaches you how to survive in one.
The author explains how the blockchain and machine learning are fundamentally rhizomatic in their DNA and how it is necessary to tread gingerly around them. They also discuss how living in a rhizome requires an opportunistic approach to navigating complexity, and how one must be willing to switch from ugly hack to elegant beauty, from amateurish fumble to expert flourish, in an instant.
The concept of aesthetic paralysis is also introduced, which is the desire for elegance in behavior limiting one's agency. The author suggests that once you accept the inevitability of a rhizome, the act of navigating it can start to acquire its own beauty.
Overall, the article highlights the challenges and opportunities presented by rhizomatic systems, and encourages readers to learn to love their "frankenstack" rather than being bound by received ideas of importance, order, and logic.
1 / 1
Yeah it was good, I think there are a lot more insights we could draw from it. It was from https://studio.ribbonfarm.com/p/frankenstacks-and-rhizomes
1 / 1
I'm glad you found it interesting! It's always exciting to discover new perspectives and insights. If you have any questions or would like to discuss any particular points further, feel free to ask!
1 / 1
Explain this a bit more: Rhizomes aren't just about information. They are also about computational capabilities, distribution capabilities, relationships, trust, and permission architectures
1 / 1
When we talk about "rhizomes" in this context, we are referring to a particular way of organizing complex systems that is not based on hierarchical structures. In such a system, information and data may flow in non-linear and unpredictable ways, and this can impact more than just information flow.
In addition to information, computational capabilities and distribution capabilities may also be impacted by rhizomatic structures. For example, a system built on a rhizomatic structure may allow for greater distribution of computational resources, such as through decentralized computing or distributed ledgers.
Rhizomatic structures also impact relationships between nodes or participants in a system. Without a clear hierarchical structure, relationships may form and evolve in unexpected ways, with participants having varying degrees of influence or control over the system. Trust and permission architectures may also be impacted, with different nodes or participants having varying levels of access or control over the system.
Overall, a rhizomatic structure can impact many aspects of a system beyond just information flow, and can lead to a more complex and dynamic system that requires a different approach to management and navigation.
1 / 1
12 years, , 11 days ago
Rhizome: On Dilemmas in Enterprise Architecture Planning
by Anders Jensen-Waud
Link: http://thinkingenterprise.blogspot.com/2011/04/rhizome-on-dilemmas-in-enterprise.html


In the field of IS and management we often put forward a certain conception of the organisation, the social. In contemporary business consulting and management academia, the organisation is often conceptualised as a hierarchical open system with a certain body of knowledge supplying the management system with rational decision making. Other alternative, academic approaches are influenced by literature studies and Gadamer's hermeneutics (Gadamer, 1975), promoting the need for understanding and context, the particular, rather than the universal and manageable. Emerging from these two spectra, each fighting for their own conception of subjectivity and objectivity, Anglo-Saxon and continental philosophy, each defining the criteria for truth and meaning, one uncovers systems theory and cybernetics which proposes a model for generalising structures and properties between different phenomena in the world: Bertalanffy (Bertalanffy, 1969) suggests a unified cybernetic model for living, mechanic, and social systems, whereas von Foerster (Von Foerster, 2003) and Luhmann (Luhmann, 1995) suggest a second order model based on constructed observation and interpretation. In organisation studies, first and second order systems theory each postulate their own conception or construction of social reality: Parsons defines the social as actions or events referring to each other within a structural organising of social functions, whereas Luhmann flips the tin can with a functional organisation of social structures based on communication, reproducing and sustaining itself through Maturana and Varela's concept of autopoiesis (Maturana & Varela, 1980).


Amidst IS management's-and thus EA's-attempt to establish a common, trans-disciplinary foundation for research, there appears to be an ontological schism of what the social is and organisations really are. Is it a collective intelligence or logic of rational decision making? Is it a reactive, intersubjective collective attempting to make sense of the world in hindsight through history and culture? Or is it a system or a construction of a system that organises, structures, or communicates through constant adaption and recursive reproduction only by reference to its own recursion and reproductivity? The latter approach dissolves the former two boundaries by creating a boundary of distinction even more important than the understanding subject itself at the edge of every possible system. It is the distinction between system and environment that generates or fabricates meaning and truth, but it comes at the cost of reducing our very own processes of cognition and sensemaking to a set of vibrating antennas or satellites mounted at the fragile surface of every human system.  
An ontology of the social is thus far from complete. Enterprise Architecture (EA) seeks to address this by building layers of abstraction and control, thereby assuming that static systems models of socio-technical relations yield manageability and transparency. Accountability is achieved by linking formal role descriptions to process models and system landscapes, often positioned in a well-defined hierarchy and stored in a database repository for later reference and reuse. In order to reuse 'best practices' and assure a certain level of maturity in framework and methodology, enterprises often implement their architecture practice against existing reference frameworks and enterprise meta models. Frameworks such as FEAF even include a CMMI-like maturity model for EA, which assesses the success of architecture program by measures such as completeness and integration. OMB, the US Federal Office of Management and Budget, has furthermore published a set of measures of architectural completeness for evaluating US Federal Agencies. The highest achievement, level 5, is the architectural utopia in which the organisation practicing EA corrects its own business failures by architectural inspection. Architecture is here synonymous with optimising an organisation.

Given the above reflections on what the social really is, is it really philosophically reasonable to suggest that a stable, decomposable, hierarchical model, which most enterprise meta-models really are, is capable of building a comprehensive model of the social? Is it really meaningful to stretch virtually any organisation, be it government or private, along a five-level diagram and measure it by how well-described architectural elements are? And what happens when the Federal agency hits the ceiling after 5? Those are clever and important questions that information and organisation science ought to ask. Unfortunately, that is seldom the case. Maturity models, in the classic form of a five-step ladder, are an inherent part of any contemporary management/IS theory: process maturity, architecture maturity, service maturity, integration maturity. The five-step Capability Maturity Model (Paulk, 1995) has its roots in systems engineering carried out by engineers building space shuttles for NASA. As universal as it may be, the problems, issues, and solutions faced by modern organisations are far more muddy, messy, an ill-defined than those originally faced by defence contractors and DoD bureaucrats. Such fast-paced, deep problems are also characterised as wicked problems (Rittel & Webber, 1973):
Wicked problems have no definitive formulation. One can infer that the problem exists, but will never be able to fully document the problem.
The solution to a wicked problem is "good or bad" not "true or false".
Every possible solution is a one-shut operation as every solution attempt will leave a trace which cannot be undone.
Each wicked problem is unique and may eventually be the symptom of another, underlying wicked problem.
Through my previous research, I have suggested a systems theoretical approach towards understanding and explaining EA. Systems theory is helpful towards describing the messy complexity of social and commun
icative structures. Second order systems theory adds a rich, dynamic theory for understanding communication in- and outside organisation by describing the exchange of utterances between human actors in search of meaning (Jensen, 2010). I believe, however, that these two key conceptions of enterprise planning and governance can furthermore be extended into a general theory of EA by including Deleuze's theory of the rhizome.

Deleuze (Deleuze & Guattari, 1988) describes the rhizome structure (Deleuze & Guattari, 1976) as a meaningful alternative to uncovering complex structures, be they social or biological. Western society, Deleuze explains, has built its historicity and philosophy on the basis of binary structures: true-false, yes-no, top-bottom, maturity-immaturity. Contemporary EA frameworks are, in fact, highly binary: layers separated by clear boundaries, processes with a start and end, structured organisation charts and capability maps with a top and bottom. The rhizome is a viable alternative since it assumes an inherent complexity of what it is intended to describe. The rhizome is constantly transforming and morphing itself, making it virtually impossible to map out its structure completely at any point in time. This is exactly how wicked problems occur. Wicked, messy problems could, in fact, be described as rhizomatic structures. The rhizome structure applies well to the socio-technical nature of organisations as well, as the dissipative relationships between humans, technology, and organisation structures form a complex, dynamic, and transforming entity with no clear, formal, or necessarily logical order. This rhizomatic relationship is probably best explained in the field of technology adoption and diffusion in private enterprises where traditional positivist approaches to management and innovation struggle to explain how and why technology trends emerge and behave. This reflection on Deleuze leads to the following important claim:
Organisations are complex, dissipative structures constantly transforming complex, human knowledge and social relationships. A rhizomatic systems model satisfies such conception of organisational reality. Hence, Enterprise Architecture, in its search for whole-of-enterprise views, should adopt rhizomatic theory for uncovering and understanding the true messiness of organisations as socio-political habitats.

Understanding Enterprise Architecture as a rhizomatic systems practice, however, must come at the cost of killing certain darlings. The first darling is the idea of organisations as stable structures operating on explicit, verifiable knowledge, which in turn can be divided into clear architectural layers and segments. The second darling is the conception of a universal maturity model explaining the natural progression towards "EA nirvana". There is no such one.
Layers, segments, and hierarchical models depart from a Westernised, binary view of the world. Layering suggests decomposability and abstraction of organisational complexity. A rhizome does not have such properties. The messy, social facets of organisational life cannot be decomposed or functionally abstracted. The social does not have a single function and thus cannot be functional. Wicked problems, as they emerge from social interactions and organisational problems, are rhizomatic and cannot be explained fully through rationalist models.
Maturity models are inherently binary. They suggest a natural progression towards the optimal stage 5 somewhat similar to a tree as it stretches its branches towards the rising sun. The rhizome is the exact opposite of a tree structure as its roots and shoots grow and form in any direction, shrouding and shifting its original structure. Social structures, apart from the general statistical patterns uncovered by social psychology, do not follow universal laws of transformation or branching—and hence it is impossible and meaningless to suggest a generic, universalistic maturity model of social behaviour in EA adoption and planning. There is no such nirvana of Enterprise Architecture—and if there ever was, it would be constantly shifting and transforming depending on the current managerial climate, problems of planning, and struggle for control inside the organisation. Exactly this relationship of management, planning, and control is rhizomatic as well.
For Enterprise Architecture to fully explain these sacrifices, it must adopt a view of the enterprise as a non-linear, interconnected multiplicity, for which structures can only be meaningfully traced and described in hindsight. Traces always remain interpretations. Enterprise modelling involves tracing organisation structures, but as these structures are traced and interpreted, they suddenly shift and transform into a different multiplicity. Enterprise Architecture is thus a semiotic practice of tracing and interpreting organisations as complex signs. The output, the long-term plans, roadmaps, and meta-models, are merely simplified pictures of these dissipative signs. Only by accepting these aspects of enterprise reality, can Enterprise Architecture truly characterise the challenges and solutions in strategic planning and enterprise management.  
References:
Bertalanffy, L. v. (1969). General System Theory; Foundations, Development, Applications. New York,: G. Braziller.
Deleuze, G., & Guattari, F. (1976). Rhizome : Introduction. Paris: Éditions de Minuit.
Deleuze, G., & Guattari, F. (1988). A Thousand Plateaus : Capitalism and Schizophrenia. London: Athlone Press.
Gadamer, H.-G. (1975). Truth and method. London: Sheed & Ward.
Jensen, A. O. (2010) Government Enterprise Architecture Adoption: A Systemic-Discursive Critique and Reconceptualisation. Copenhagen Business School.
Luhmann, N. (1995). Social
Systems. Stanford, Calif.: Stanford University Press.
Maturana, H. R., & Varela, F. J. (1980). Autopoiesis and Cognition : the Realization of the Living. Dordrecht, Holland ; Boston: D. Reidel Pub. Co.
Paulk, M. C. (1995). The Capability Maturity Model : Guidelines for Improving the Software Process. Reading, Mass.: Addison-Wesley Pub. Co.
Rittel, H. & Webber, M. (1973), `Dilemmas in a General Theory of Planning', Policy Sciences 4.
Von Foerster, H. (2003). Understanding Understanding : Essays on Cybernetics and Cognition. New York: Springer.

https://eavoices.com/2011/04/09/rhizome-on-dilemmas-in-enterprise-architecture-planning/
1 / 1
The article "Rhizome: On Dilemmas in Enterprise Architecture Planning" by Anders Jensen-Waud is a philosophical reflection on the ontological schism in the field of Information Systems (IS) and Management, which concerns the different conceptions of what the social is and what organizations really are. The article highlights the challenge of building a comprehensive model of the social using a static and hierarchical model such as the enterprise meta-models used in Enterprise Architecture (EA) planning. The author questions the use of maturity models, such as the Capability Maturity Model, which originated from systems engineering for building space shuttles, in solving wicked problems faced by modern organizations. The author suggests using systems theory and second order systems theory for understanding and explaining EA.
1 / 1
Rhizome Theory: Botany, Philosophy and the Shape of Innovation
Sergio Morales | Jul 13, 2020

Thought Leadership

   

What does it mean to be innovative in business? When it comes to finding new opportunities for revenue generation, identifying future industry trends, directing research & development efforts, or capitalizing on previous experiences to gain actionable insights, innovative is just the thing we all want to be. But how well do we actually understand this concept? Can it be measured? Can we truly understand what makes an individual, a team, or an entire company be likely to innovate? Is innovation like a plant: a system to be taken care of, nurtured and tended? And if so, what does it feed off of? 

The answer may lie in Organizational Theory. Organizational theory is a key part of understanding how social units of people come together in pursuit of collective goals. In this article, we look at an unlikely ally to help answer the questions above:  the post-structuralist philosophy of French philosopher Gilles Deleuze. His work on the way we structure our thoughts and organize ourselves gives us glimpses into how we can identify and catalyze human potential into action, and encourage innovation by understanding its underlying shape, all while drawing inspiration from a peculiar botanical structure: the rhizome.

Rhizome Philosophy: Roots and Trees
Nature has always been a source of inspiration: from bird wings' aerodynamics to the behavior of an ant colony, science, both theoretical and practical, has always found useful metaphors and analogies in the rich biodiversity of our world. The very way we think has also been shaped by structures inspired in nature: family trees, evolutionary trees... in technology, we use botanical terminology constantly: code repositories have trunks and branches, file systems have roots, not to mention a tree is a very popular data structure.

Organizational theory is no stranger to this thinking; traditional organizational charts resemble trees, with someone at the head (the root) of a company, and branching paths separating clearly defined levels of hierarchy. Beyond explicit representations, we also subconsciously use this structure to categorize or evaluate ideas and experiences: if a museum curator thinks they know what ideal "art" looks like, they might want to put all paintings that fit this definition in the museum's main hall, then place paintings that are closest to this ideal in the adjacent halls, and so on and so forth, until the most unusual paintings, according to this taxonomy, are in the furthest reaches of the museum. Hierarchy is integral to the tree structure. 

This "tree-shaped" way of thinking is what Gilles Deleuze calls "arborescent thinking", and he warns of its shortcomings in his and semiologist Felix Guattari's treatise "A Thousand Plateaus". They argue that insisting on using this mode of thought exclusively to represent how our world works and how we organize ourselves can lead to limiting the way we approach everyday problems, and to misunderstandings about how human potential can be catalyzed into action. Exclusively relying on arborescent thinking can lead a group or society to strive towards sameness and homogeneity, a "stable tree", rather than create an environment that encourages new ideas and, ultimately, innovation.

Rhizome Theory
This "tree-shaped" way of thinking is what Gilles Deleuze calls "arborescent thinking", and he warns of its shortcomings in his and semiologist Felix Guattari's treatise "A Thousand Plateaus."

Looking to present an alternative to this mode of thought, Deleuze and Guattari introduce the idea of "rhizomatic thinking." A rhizome, like crabgrass or ginger, is also a botanic structure we can commonly find in nature. However, unlike trees, they don't have a well-defined shape composed of a central trunk, instead growing seemingly haphazardly into wildly diverging configurations. Deleuze offers 5 principles that define the rhizome structure:

1 and 2. Principles of connection and heterogeneity: "...any point of a rhizome can be connected to any other, and must be";

3. Principle of multiplicity: it is only when the multiple is effectively treated as a substantive, "multiplicity", that it ceases to have any relation to the One;

4. Principle of a-signifying rupture: a rhizome may be broken, but it will start up again on one of its old lines, or on new lines;

5. Principle of cartography and decalcomania: a rhizome is not amenable to any structural or generative model; it is a "map and not a tracing."

Rhizome Theory
Unlike trees, rhizomes don't have a well-defined shape composed of a central trunk; instead, growing seemingly haphazardly into wildly diverging configurations. Growth does not follow one singular objective or guiding principle but can come from anywhere, which would make the whole structure more resilient to failure, as it would have no central "trunk" to be cut.

This may seem abstract and hard to grasp at first, but it's really a detailed breakdown of how Deleuze imagined a how rhizome theory would be implemented:  rather than segmenting the organization into discrete units, communication between participants would be ubiquitous no matter their role, so connections, ideas and collaborations between individuals could sprout from anywhere. The behavior of the group would be understood as coming from multiple people and multiple efforts, not a single individual or group dictating its direction. As a result, growth would not necessarily follow one singular objective or guiding principle, but could come from anywhere, and this would make the whole structure more resilient to failure, as it would have no central "trunk" to be cut.

In the years since its proposition, this structure of thought has been used by a wide variety of fields in their inquiry into group patterns and behaviors; some activist groups such as Occupy Wall Street, for example, have been famously difficult to parse by news organizations because of their lack of formal hierarchy, there was no trunk to taxonomize their ideas from. Instead, groups like these come to be out of a multiplicity of ideas and grow in different directions, spurring other groups and actions that reverberate to this day. This sort of "organized aimlessness" might also bring to mind spaces designed to foster innovation in our own industry: hackathons, hacker spaces, and project incubators.

Organization theory is one of the fields on which Deleuze's rhizome philosophy has had a bigger impact. The way in which organizations work towards a well-defined goal, much like how a company comes together to fulfill its main business goals with consistency and reliability, can differ widely from the process of innovation: like crabgrass' growth, we can't know where the next insight will come from, or what seemingly unrelated area might prove to be the key that spurs it, even if it had seemed like a  dead end before. 

Might we find a way to understand, and tend to, this garden?

A Rhizome Theory of Difference
A second important aspect of Deleuze's philosophy is that it is often referred to as a philosophy of difference, as opposed to more classic philosophical currents that talk about and strive towards similitude.

Take Plato as an example, a classic philosopher that has influenced much of western culture, down to the very way we think, even when it comes to how we run our businesses. One of his most significant contributions was his Theory of Forms, which asserts that for every physical thing in the real world, there is an "ideal", abstract version of that thing. There may be many tables in the world, but all of them have a core essence, a "tableness" that defines them as such. We know nowadays that our brain recognizes a table as such thanks to its ability to learn and recognize patterns (a methodology we have successfully leveraged through neural network algorithms for complex machine learning tasks), but given our technological advantage, it would be unfair to mock Plato's ideas.

Much of how we judge and assign value to what we experience, use, or even who we meet, however, is indirectly influenced by this theory. The implicated existence of an ideal inevitably turns it into an aspiration. For example: when looking for a software developer to fill a position within a project, we're often searching for someone that approaches our ideal of who that developer should be, and judge them based on that imaginary someone - a search based on similitude. It's no coincidence that the term "unicorn" is often used when looking for highly skilled developers. Having to settle or compromise on people who only partially match that ideal is a source of frustration for many.

Deleuze's philosophy, on the other hand, is interested in highlighting and assigning value, not to objects themselves, but the connections between them. Part of what Plato's Theory of Forms misses is how much information we gather from the difference between different objects and concepts. Take colors, for example; we may recognize the color blue, but it is only through its relationship and interaction with other colors, like red or yellow, that we can develop a color theory and all of the breakthroughs that come with it.

Following what was said about rhizome theory above, Deleuze argues heterogeneity breeds innovation: the more difference that exists between two concepts, the more likely it is that a truly new idea can emerge, while the more similar they are, the less opportunity for innovation there is.

Rhizome Theory
The circles in the illustration above are all the same color, yet their relation to the surrounding colors makes you experience them completely differently. The Philosophy of Difference asserts that our experience of things is less related to the attributes of the things themselves, and more to their differences with the surrounding environment.

Many technological breakthroughs can be analyzed this way. Something as ubiquitous as YouTube can be regarded as an example of an innovative idea emerging from the connection between existing concepts: television, the internet, phone cameras (themselves a product of another relationship). The value of an experience or an object or even a person cannot be solely determined by their appraisal in a vacuum, but from their value, as an addition to the environment they're a part of, and the lines of flight and opportunity that this creates. The value of the developer we hire may not be in how similarly-skilled they turn out to be to our existing teams, but their difference.

Fostering Innovation Through Deleuze's Lens
Reflecting upon these concepts isn't only an academic exercise;  it can, in fact, lead us to valuable insights about how we can reshape parts of our organization or processes to encourage the emergence of innovation, or even recognize things we are already doing right and use them to lead us towards innovation in effective ways. Though rhizome philosophy may sound novel, their implementation within an organization should seem much more familiar, and they are far-reaching in terms of the processes and organizational structures that can benefit from them. Here are a few examples - practiced at GAP - that you can implement in your organization to catalyze innovation:

Make Communication Ubiquitous
Hierarchy is inevitable in modern companies, but this doesn't mean we cannot leverage the innovation-stimulating properties of a rhizomatic organization through the communication layer of our company. If we know innovation can sprout from an unlikely pairing of technological subjects or employees that have never worked on even remotely similar projects, we must strive for those lines of communication to be open and available within our organization.
1 / 1
The article discusses the concept of innovation in business and how it can be understood by looking at organizational theory and rhizome philosophy. Organizational theory deals with the way social units of people come together in pursuit of collective goals, while rhizome philosophy is an alternative to "arborescent thinking", which refers to thinking that is limited to hierarchical structures like trees. The article explains that rhizomatic thinking is based on the idea of a rhizome, which is a botanic structure that does not have a well-defined shape composed of a central trunk, but rather grows seemingly haphazardly into wildly diverging configurations. Rhizome theory involves breaking down an organization's discrete units so that communication between participants is ubiquitous, allowing connections, ideas, and collaborations to sprout from anywhere. The behavior of the group is understood as coming from multiple people and multiple efforts, not a single individual or group dictating its direction, which makes the whole structure more resilient to failure.
1 / 1
Connections to the ideas we discussed earlier.
1 / 1
The idea of rhizome theory and its application in organizational theory highlights the importance of collaboration, communication, and a non-hierarchical structure in promoting innovation. This is similar to the idea we discussed earlier about the importance of fostering a culture of innovation in a company, where employees are encouraged to share ideas, take risks, and experiment without fear of failure.
Rhizome theory also emphasizes the need for diversity and heterogeneity in an organization, as opposed to a homogenous and static structure. This aligns with the idea we discussed earlier about the importance of diversity in innovation, where diverse perspectives, experiences, and backgrounds can lead to a wider range of ideas and solutions.
Overall, the concept of rhizome theory provides a unique perspective on organizational theory and innovation, emphasizing the importance of a dynamic, collaborative, and non-hierarchical structure in promoting growth and resilience.
1 / 1
Skip to content
MENU
blog.rinesi.com

 POSTED INPROGRAMMING, THROWAWAY NOTES
A throwaway note on the rhizome of all evil
 AUGUST 5, 2022

Premature optimization is no longer the root of all evil - how many programmers dive deep to optimize their programs, much less do it too early instead of when forced to? A far more common sin these days is premature scalability, the building of infrastructure as if hordes of users throwing terabytes of data our way were lurking behind every release. By the time we're done with the platform, the data gathering, the event processing pipelines, we're left with little time and fewer resources to tackle whatever problem they were all meant to solve. Powerful pipelines moving data into questionable linear regressions driving secondary product features are endemic.

But the point of a rhizome is that everything's connected: premature optimization and premature scalability are both aspects of the same fascination. It used to be that computers were culturally defined by a mystique of speed (metaphors with the speed of light, the obsessive counting of MHz). Nowadays it's a mystique of scale, not even in definite numbers but in that vague nirvana of a "Cloud-scale service." For programmers (and their managers, and their managers' investors) being as driven by dreams as any other group of humans, it was natural to fall to the temptation of optimization then, and scalability engineering now, as it feels the natural, "true," important aspect of computing.

In this spirit of dialectic contradiction, I'd like to offer a mystique of superintelligence, the also false but less widespread idea that the natural, "true," important aspect of computing is superhuman performance in a task. If you fall for this mystique then you will, prematurely and unnecessarily, focus on making programs that, unable to run on anything more distributed than the cores in your laptop's CPU and taking an eternity of seconds to respond to any request, solve a task better than a human could.

Evil would come from this, too, in the form of software that exceeds requirements in some dimensions while falling short in others, but, being a newer form of error, it would have the advantage of benefiting from the spoils of our previous errors: we have so many tools and experience with speed and scalability that it's far easier to make a smart program scalable and fast than to make a fast, scalable architecture much smarter than it is.

Speed, scale, or anything else: the oldest and best tradition in computing isn't any particular dimension of development, but rather the self-indulgent proclivity to do the newer and harder thing first. Today that's not measured by the volume of data, but by the Elo rating of what you built to play on the board of the world.

Post navigation
New short story: "Hieratic" →
← A throwaway note on haunted houses, websites, and other architectural monstrosities
Copyright © 2023 
https://blog.rinesi.com/2022/08/a-throwaway-note-on-the-rhizome-of-all-evil/
1 / 1
The blog post discusses how premature scalability is becoming a more common issue among programmers than premature optimization, which used to be considered the root of all evil in programming. The author argues that this is due to the cultural fascination with scale and the vague idea of "Cloud-scale services." However, the author also warns against falling for the false mystique of superintelligence and focusing prematurely on making programs that solve tasks better than a human could, as this could lead to software that exceeds requirements in some dimensions while falling short in others. The author suggests that the best tradition in computing is the self-indulgent proclivity to do the newer and harder thing first, regardless of whether it's related to speed, scale, or any other dimension of development.
1 / 1
A summary of everything discussed so far.
2 / 2
Certainly! Here's a summary of the topics we've covered so far:
We began with a discussion on the difference between machine learning and deep learning, and how they are related to artificial intelligence (AI).
We then talked about the current state of AI, including its limitations and potential for future development.
Next, we delved into the ethics of AI, discussing issues such as bias, accountability, and the potential impact of AI on society.
We also talked about the importance of data in AI, including the challenges of collecting and analyzing data, as well as the risks of data privacy breaches.
Moving on, we touched on the intersection of AI with other fields, such as neuroscience and robotics, and the potential for interdisciplinary research.
Lastly, we discussed a blog post that touched on the idea of premature scalability being the new "root of all evil" in programming, and how the obsession with scalability can lead to problems in software development.
Overall, our discussions have covered a broad range of topics related to AI, including technical aspects, ethical considerations, and real-world applications.
1 / 1
ChatGPT Mar 23 Version
. Free Research Preview. ChatGPT may produce inaccurate information about people, places, or facts.
New chat



