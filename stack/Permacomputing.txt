Permacomputing
Open sidebar
ChatGPT
4
You
permacomputing
Edit RecentChanges Preferences Discussion
Welcome to the Permacomputing wiki!

New to permacomputing?
Permacomputing is both a concept and a community of practice oriented around issues of resilience and regenerativity in computer and network technology inspired by permaculture.

In a time where computing epitomizes industrial waste, permacomputing encourages the maximizing of hardware lifespans, minimizing energy use and focusing on the use of already available computational resources. We do this we want to find out how we can practice good relations with the Earth by learning from ecological systems to leverage and re-center existing technologies and practices. We are also interested in investigating what a permacomputing way of life could be, and what sort of transformative computational culture and aesthetics it could bring forward.

If you want to know more, please start reading about what is permacomputing in essence, and then dive into its principles.
ChatGPT
ChatGPT
Permacomputing is a conceptual framework that marries the principles of permaculture with computing technology, aiming to foster an ecosystem of technological practices that emphasize sustainability, resilience, and a regenerative approach to resources. The ethos behind permacomputing is akin to planting a digital forest where each tree (or piece of technology) is selected and nurtured to thrive for the long term, contribute to the health of the surrounding digital environment, and sustainably coexist with human and ecological systems.
This approach is a counter-narrative to the prevailing tech culture characterized by rapid obsolescence and excessive consumption of resources, reflecting a shift from exploiting to cooperating with the natural and digital ecosystems. In essence, permacomputing seeks to extend the lifecycle of hardware, reduce energy consumption, and optimize the use of existing computational assets. The goal is to reorient technology towards practices that are in harmony with the Earth, drawing inspiration from ecological systems to re-imagine and repurpose our digital tools and infrastructure.
As an exploration of a permacomputing way of life, this movement delves into what a transformative computational culture could look like, including the aesthetics of technology that prioritizes sustainability and ecological integrity. By learning from the principles of permaculture, permacomputing advocates for a computing paradigm that is not just about efficiency and innovation for their own sake, but about nurturing a symbiotic relationship between technology and the natural world, aiming for a future where digital and ecological systems support and enrich each other in a continuous cycle of growth and renewal.
You
Everything has a place
Be part of your local energy/matter circulations, ecosystems and cultures. Cherish locality, avoid centralization. Strengthen the local roots of the technology you use and create.

While operating locally and at present, be aware of the entire world-wide context your work takes place in. This includes the historical context several decades to the past and the future. Understanding the past(s) is the key for envisioning the possible futures.

Nothing is "universal". Even computers, "universal calculators" that can be readapted to any task, are full of quirks that stem from the cultures that created them. Don't take them as the only way things can be, or as the most "rational" or "advanced" way.
Every system, no matter how ubiquitous or "universal" it is, is only a tiny speckle in a huge ocean of possibilities. Try to understand the entire possibility space in addition to the individual speckles you have concrete experience about.
Appreciate diversity, avoid monoculture. But remember that ?standards also have an important place.
Strict utilitarianism impoverishes. Uselessness also has an important place, so appreciate it.
You may also read this principle as: There is a place of everything. Nothing is obsolete or irrelevant. Even if they lose their original meaning, programmable systems may be readapted to new purposes they were not originally designed for. Think about technology as a rhizome rather than a "highway of progress and constant obsolescence".
There is a place for both slow and fast, both gradual and one-shot processes. Don't look at all things through the same glasses.
ChatGPT
ChatGPT
This principle reads like a manifesto for nurturing a digital-ecological symbiosis, deeply rooted in the philosophy of permacomputing. It champions the idea of embedding oneself within the local flux of energy and matter, akin to how a tree integrates into its immediate environment, drawing sustenance from the soil while contributing to the ecosystem's overall health through oxygen production and habitat creation. This principle encourages the cultivation of technological practices that are local in scope yet cognizant of their global repercussions, akin to understanding the local weather patterns while being aware of their interconnections with global climate systems.
The directive to appreciate the past and envision futures is reminiscent of navigating a river by understanding its source and potential destinations. It's an acknowledgment that every technological tool or system, much like a river, has been shaped by the geographical and cultural landscapes through which it has flowed. This perspective invites us to see beyond the immediate utility of technology, to recognize it as a continuum of human endeavor and imagination, rather than as discrete milestones on a linear path of progress.
By questioning the universality of technology, this principle suggests that even the most ubiquitous systems, like computers, are imbued with the biases and idiosyncrasies of their creators, much as a local dialect reflects its community's identity. This recognition opens up a vast landscape of alternative possibilities, a rich biodiversity of technological expressions that defy the monoculture of mainstream tech solutions. It encourages exploration of this broader ecosystem, promoting diversity over uniformity, while also acknowledging the role of standards in facilitating communication and interoperability within this diverse landscape.
The valorization of "uselessness" introduces the concept that not all value can be measured through utility alone, suggesting that technology, like art, has intrinsic value that transcends its functional applications. This appreciation for the non-utilitarian aspects of technology encourages a reevaluation of obsolete systems, viewing them not as relics to be discarded but as adaptable resources capable of serving new purposes, akin to the way a decommissioned factory can find new life as a cultural center or residential space.
This principle ultimately advocates for a rhizomatic view of technology, where growth and development are non-linear, interconnected, and capable of sprouting in unexpected directions, as opposed to a highway that channels movement in a single, predetermined direction. It champions a multiplicity of speeds and processes in technological development, recognizing that both rapid innovation and gradual evolution have their places within the technological ecosystem, much like the diverse tempos found in a musical composition contribute to its overall richness and complexity.
You
Care for the chips
Production of new computing hardware consumes a lot of energy and resources. Therefore, we need to maximize the lifespans of hardware components ��� especially microchips, because of their low material ?recyclability.

Respect the quirks and peculiarities of what already exists and ?repair what can be repaired.
Create new devices from salvaged components.
Support local time-sharing within your community in order to avoid buying redundant stuff.
Push the industry towards Planned longevity.
Design for disassembly.
Keep it small
Small systems are more likely to have small hardware and energy requirements, as well as high understandability. They are easier to understand, manage, ?refactor and ?repurpose.

Dependencies (including hardware requirements and whatever external software/libraries the program requires) should also be kept low.
Avoid pseudosimplicity such as user interfaces that hide their operation from the user.
Accumulate wisdom and experience rather than codebase.
Low complexity is beautiful. This is also relevant to e.g. visual media where "high quality" is often thought to stem from high resolutions and large bitrates.
Human-scale: a reasonable level of complexity for a computing system is that it can be entirely understood by a single person (from the low-level hardware details to the application-level quirks).
Scalability (upwards) is essential only if there is an actual and justifiable need to scale up; down-scalability may often be more relevant.
Abundance thinking. If the computing capacity feels too limited for anything, you can rethink it from the point of view of abundance (e.g. by taking yourself fifty years back in time): tens of kilobytes of memory, thousands of operations per second ��� think about all the possibilities!
Hope for the best, prepare for the worst
It is a good practice to keep everything as resilient and collapse-tolerant as possible even if you don't believe in these scenarios.

While being resilient and building on a solid ground, be open to positive and utopian possibilities. Experiment with new ideas and have grand visions.
Design for descent.
Keep it flexible
Flexibility means that a system can be used in a vast array of purposes, including ones it was not primarily designed for. Flexibility complements smallness and simplicity. In an ideal and elegant system, the three factors (smallness, simplicity and flexibility) support each other.

If it is possible to imagine all the possible use cases when designing a system, the design may very well be too simple and/or too inflexible. Smallness, simplicity and flexibility are also part of the "small, sharp tools" ideal of the Unix command line. Here the key to flexibility is the ability to creatively combine small tools that do small, individual things.

Computing technology in general is very flexible because of its programmability. Programming and programmability should be supported and encouraged everywhere, and artificial lock-ins that prevent (re)programming should be broken.
Design systems you can gradually modify and improve while running them.
Build on a solid ground
It is good to experiment with new ideas, concepts and languages, but depending on them is usually a bad idea. Appreciate mature technologies, clear ideas and well-understood theories when building something that is intended to last.

Avoid unreliable dependencies, especially as hard (non-optional) dependencies. If you can't avoid them (in case of software), put them available in the same place where you have your program available.
It is possible to support several target platforms. In case of lasting programs, one of these should be a bedrock platform that does not change and therefore does not cause software rot.
Don't take anything for granted. Especially don't expect the infrastructure such as the power grid and global networking to continue working indefinitely.
You may also read this as "grow roots to a solid ground". Learn things that last, enrich your local tradition, know the history of everything.
Amplify awareness
Computers were invented to assist people in their cognitive processes. "Intelligence amplification" was a good goal, but intelligence may also be used narrowly and blindly. It may therefore be a better idea to amplify awareness.

Awareness means awareness of whatever is concretely going on in the world/environment but also awareness of how things work and how they situate in their contexts (cultural, historical, biological etc).
You don't need to twiddle with everything in order to understand it. Yin hacking emphasizes observation.
It may also often be a good idea to amplify the computer's awareness of its physical surroundings with things like sensors.
Expose everything
As an extension of "amplify awareness": Don't hide information!

Keep everything open, modifiable and flexible.
Share your source code and design philosophies.
State visualization: Make the computer visualize/auralize its internal state as well as whatever it knows about the state of its physical environment. Regard this visualization/auralization as a background landscape: facilitate observation but don't steal the attention. Also, don't use too much computing resources for this (updating a full-screen background landscape tens of times per second is a total overkill).
Respond to changes
Computing systems should adapt to the changes in their operating environments (especially in relation to energy and heat). 24/7 availability of all parts of the system should not be required, and neither should a constant operating performance (e.g. networking speed).

In a long term, software and hardware systems should not get obsoleted by changing needs and conditions. New software can be written even for old computers, old software can be modifed to respond to new needs, and new devices can be built from old components. Avoid both software rot and retrocomputing.
ChatGPT
ChatGPT
The principles outlined here serve as the pillars for a sustainable computing ideology, one that seeks to harmonize the digital realm with ecological and social sustainability. They articulate a vision for computing that is deeply integrated with the cycles of the natural world, much like a gardener who carefully selects plants that will thrive together, enrich the soil, and support the local ecosystem. This approach to technology advocates for a mindful stewardship of resources, emphasizing the importance of extending the life of hardware, particularly microchips, due to their significant environmental footprint and challenging recyclability.
Care for the Chips: The Digital-Ecological Nexus
The call to "Care for the chips" and make the most of existing hardware resources mirrors the permaculture principle of care for the earth. It recognizes the embedded energy and resources in computing hardware and advocates for practices that extend their functional life, such as repairing, repurposing, and sharing resources within communities. This is akin to composting in gardening, where waste is not seen as something to be discarded but as a resource to be transformed and reused.
Keep it Small: The Principle of Simplicity
The principle of keeping systems small, manageable, and understandable draws a parallel with the cultivation of a diverse but compact garden that is tailored to the needs of the local environment and community. It eschews the monoculture of large, complex systems for a more human-scaled technology that can be fully comprehended and maintained by individuals or small communities, much like a well-tended garden that is designed to be productive, sustainable, and beautiful on a human scale.
Hope for the Best, Prepare for the Worst: Resilience in Uncertainty
Preparing for resilience and designing for descent reflect an understanding that, much like in ecological systems, conditions can change unexpectedly, and systems must be robust and adaptable. This principle advocates for a form of digital permaculture that is designed to withstand shocks and stresses, whether they be environmental, social, or technological.
Keep it Flexible: Adaptability as a Virtue
Flexibility in system design underscores the importance of adaptability and the ability to repurpose and reimagine technology to meet changing needs and conditions. This is akin to permaculture's emphasis on responsive, adaptive design that observes and interacts with the changing conditions of the environment to create systems that are resilient and productive over the long term.
Build on a Solid Ground: The Foundation of Sustainability
Valuing mature technologies and well-understood principles parallels the permaculture practice of building on the accumulated knowledge and experiences of the past to create sustainable futures. It emphasizes the importance of understanding the roots and history of technology, much like understanding the history of the land and its ecosystems informs more effective and sustainable cultivation practices.
Amplify Awareness: The Conscious Use of Technology
Finally, amplifying awareness through technology mirrors the permaculture principle of attentive observation and interaction with one's environment. It advocates for a use of technology that enhances our understanding of the world and our place within it, promoting a more conscious and intentional interaction with both the digital and natural worlds.
In essence, these principles propose a model of computing that is deeply interwoven with the principles of ecological sustainability, social equity, and mindful stewardship of resources. They envision a future where technology supports and enhances the health of the planet and its communities, rather than depleting them, drawing on the wisdom of both the digital and natural worlds to create systems that are resilient, adaptable, and sustainable.
You
permacomputing/ Principles
Edit RecentChanges Preferences ?Discussion
These design principles have been modeled after those of permaculture.

These are primarily design/practice principles and not philosophical ones, so feel free to disagree with them, refactor them, and (re-)interpret them freely. Permacomputing is not prescriptive, but favours instead situatedness and awareness of the diversity of context. Said differently, its design principles can be as much helpful as a way to guide practice in a specific situation, as it can be used as a device to help surface systemic issues in the relationship between computer technology and ecology.

Care for life
This is the ethical basis that permacomputing builds on. It refers to the permacultural principles of "care for the earth" and "care for people", but can be thought of as the basic axiom for all choices.

Create low-power systems that strengthens the biosphere and use the wide-area network sparingly. Minimize the use of artificial energy, fossil fuels and mineral resources. Don't create systems that obfuscate waste.
ChatGPT
ChatGPT
The principle of "Care for life" in permacomputing serves as the foundational ethic, mirroring the permaculture ethos of care for the earth and care for people. This principle advocates for a form of technological interaction that consciously minimizes environmental impact, promotes sustainability, and supports the well-being of all forms of life. In the realm of computing, this translates into practices that significantly reduce energy consumption, depend less on non-renewable resources, and avoid contributing to digital and physical waste. Let's delve into how this principle can be operationalized and its broader implications:
Operationalizing "Care for Life"
Developing Low-Power Systems
: This involves designing computing systems that require minimal energy to operate. Such systems not only reduce the demand on power grids (often fueled by non-renewable resources) but also extend the life of devices through reduced heat stress and slower degradation of components. It's akin to gardening using techniques that require minimal water and no chemical inputs, conserving resources while fostering a healthy ecosystem.
Strengthening the Biosphere
: In permacomputing, creating technology that strengthens the biosphere means developing systems that have a net positive impact on the environment. This could involve using recycled materials for hardware, designing software that promotes environmental awareness and action, or creating digital platforms that support local ecosystems and biodiversity. It reflects the permaculture principle of creating closed-loop systems where outputs are reused and recycled, enhancing the overall health of the ecosystem.
Sparing Use of Wide-Area Networks
: The principle suggests a judicious use of the internet and other wide-area networks, recognizing that digital data transfer consumes significant amounts of energy. By optimizing data use and prioritizing local over remote computing resources when possible, we can reduce the energy footprint of our digital activities. This is similar to the permaculture practice of sourcing food and materials locally to reduce transportation energy and support local economies.
Minimizing Use of Artificial Energy and Resources
: This calls for a shift towards renewable energy sources for computing infrastructure and a reduction in the use of rare and non-renewable mineral resources in hardware production. Like in permaculture, where renewable resources (like solar energy) are harnessed and non-renewable resources are conserved, permacomputing seeks to make similar sustainable choices in the technological domain.
Avoiding Systems That Obfuscate Waste
: Transparency in the lifecycle of technology products is crucial. Systems should be designed to make users aware of the resources they consume and the waste they produce, encouraging responsible use and disposal. This is akin to a permaculture garden that uses composting to turn waste into a resource, making the process visible and integral to the cycle of growth.
Broader Implications
The "Care for life" principle advocates for a radical rethinking of how we design, use, and interact with technology. It calls for a systemic approach that considers the long-term impacts of technology on the planet and its inhabitants. By embedding the values of sustainability, conservation, and respect for all forms of life into computing, permacomputing offers a path towards a more equitable and ecologically sound technological future.
This principle, while grounded in the specifics of computing technology, echoes a larger call for a societal shift towards practices and ways of living that are in harmony with the natural world. It's a reminder that technology is not an end in itself but a tool that, if wisely used, can support the flourishing of life in all its diversity.
You
Some grep searches to look for lines containing permaculture terms in the current folder
ChatGPT
ChatGPT
To search for lines containing permaculture terms within files in the current folder using
grep
, you can use the following
grep
commands. Each command is tailored to find a specific term related to permaculture within text files. Remember, the effectiveness of these searches depends on the accuracy of the terms you're looking for and the assumption that the files are in plain text format.
Search for "sustainability"
:
sh
Copy code
grep -i
"sustainability"
*
This command searches for the term "sustainability" in all files in the current directory, ignoring case sensitivity with
-i
.
Search for "compost"
:
sh
Copy code
grep -i
"compost"
*
Similar to the first, this searches all files for the term "compost", case-insensitively.
Search for "biodiversity"
:
sh
Copy code
grep -i
"biodiversity"
*
This looks for "biodiversity" across all files, ignoring case differences.
Search for "water harvesting"
:
sh
Copy code
grep -i
"water harvesting"
*
To find instances of "water harvesting", this command checks all files, case-insensitively.
Search for "perennial plants"
:
sh
Copy code
grep -i
"perennial plants"
*
This searches for "perennial plants" in a case-insensitive manner across all files.
Search for "organic"
:
sh
Copy code
grep -i
"organic"
*
This command will find the term "organic" in all files, ignoring case.
Search for "soil health"
:
sh
Copy code
grep -i
"soil health"
*
Searches for "soil health" in all files, ignoring case.
Search for "ecosystem"
:
sh
Copy code
grep -i
"ecosystem"
*
This looks for the term "ecosystem" in all files, ignoring case differences.
Recursive search for a term
(e.g., "permaculture") in all directories and subdirectories:
sh
Copy code
grep -ri
"permaculture"
.
The
-r
option enables recursive search starting from the current directory (
.
), and
-i
ignores case.
Search for multiple terms
(e.g., "sustainability", "compost"):
sh
Copy code
grep -Ei
"sustainability|compost"
*
This uses extended regular expressions (
-E
) to search for lines containing either "sustainability" or "compost", case-insensitively.
Remember to replace the terms in quotes with any other permaculture-related terms you're interested in searching for. Also, consider using
grep
's powerful pattern matching capabilities with regular expressions for more complex searches.
You
root@localhost:~/permacomputing# grep -i "sustainability" *
grep: _tools: Is a directory
grep: concepts: Is a directory
concepts.mdwn:  * [[sustainability]]
grep: editing: Is a directory
emotionally_durable_design.mdwn:Haines-Gadd, M., Chapman, J., Lloyd, P., Mason, J., & Aliakseyeu, D. (2018). Emotional Durability Design Nine���A Tool for Product Longevity. Sustainability, 10(6), 1948. [https://doi.org/10.3390/su10061948](https://doi.org/10.3390/su10061948)
events.mdwn:* **2023/09/21** - Approach To Computing and Sustainability Inspired From Permaculture, at Strange Loop 2023, USA, with [[neau]]
hardware.mdwn:When assessing hardware, we should pay attention to possible sustainability problems preventing [[repair]], [[reuse]] and [[reprogramming]]:
hardware.mdwn:IoT devices are not specifically produced with sustainability in mind. Often IoT is a by-product of corporate business models and extractivist attitude and used in the same way. In permacomputing, hardware, peripheries and energy sources are balanced together to create supporting networks for ecosystems, designed and grown with critical care to every part, human-nature surroundings and commons.
grep: index: Is a directory
library.mdwn:* [An approach to computing and sustainability inspired from permaculture](https://piped.video/watch?v=T3u7bGgVspM) (2023)
permacomputing_in_the_arts.mdwn:It is part of a larger research and effort to develop new curricula to support artists and designers materialise and contribute to alternative modes of organisation and production based on strong ecological and cooperative/collaborative values. It seeks to reflect on, experiment and  engage with such alternatives while bringing the urgency of the climate crisis and climate justice to art and design education, while remaining critical of technosolutionism and the language of circularity and sustainability.
regenerativity.mdwn:[^1]: [Digital Reset Report, TU Berlin, 2022](https://digitalization-for-sustainability.com/digital-reset/);
grep: research_fields_and_methods: Is a directory
research_fields_and_methods.mdwn:Sustainability research method, experimental/development environment and ecosystem.
research_fields_and_methods.mdwn:Meta-disciplines of trans-discipline of sustainability:
research_fields_and_methods.mdwn:###Sustainability and toxicity of computation
grep: templates: Is a directory
ChatGPT
ChatGPT
The
grep
search you performed in the
~/permacomputing
directory has provided insights into how the concept of sustainability is interwoven with the permacomputing philosophy across various markdown files. Here's a breakdown of the search results indicating discussions and references to sustainability:
concepts.mdwn
: Lists sustainability as a key concept within the permacomputing framework.
emotionally_durable_design.mdwn
: Mentions a publication on Emotional Durability Design as a tool for product longevity, highlighting its significance in the context of sustainability.
events.mdwn
: References a presentation or event focused on the intersection of computing, sustainability, and permaculture principles.
hardware.mdwn
: Discusses the sustainability challenges associated with hardware, emphasizing the need for repair, reuse, and reprogramming to prevent sustainability issues. It also critiques the use of IoT devices from a sustainability perspective, advocating for a more integrated and ecologically mindful approach to hardware and energy sources.
library.mdwn
: Provides a link to a video or presentation that explores computing and sustainability from a permaculture-inspired viewpoint.
permacomputing_in_the_arts.mdwn
: Highlights efforts to integrate ecological and cooperative values into art and design education, critically engaging with the climate crisis and sustainability.
regenerativity.mdwn
: References a report on Digital Reset by TU Berlin, which might discuss sustainability in the context of digital technology.
research_fields_and_methods.mdwn
: Outlines sustainability as a research method, environmental and ecosystem consideration, and discusses the meta-disciplines of sustainability, including the sustainability and toxicity of computation.
These results suggest that sustainability is a core theme within the permacomputing community, touching on diverse aspects such as design, hardware, arts, and research methods. It underscores a holistic approach to computing that seeks to align technological practices with ecological sustainability and resilience.
You
grep: _tools: Is a directory
automation.mdwn:natural processes and human labor.
balance_of_opposites.mdwn:computer hacking: total control over systems (natural or technological) is
grep: concepts: Is a directory
cornucopianism.mdwn:**Cornucopianism** refers to **cornucopia**, "the horn of plenty". A cornucopian is someone who posits that there are few intractable natural [[limits to growth]] and believes the world can provide a practically limitless abundance of natural resources.
grep: editing: Is a directory
editing.mdwn:> But the word is consistently misused to mean only the enormously complex and specialised technologies of the past few decades, supported by massive exploitation both of natural and human resources.
events.mdwn:* **2022/3/10** - permacomputing overview, at Natural Intelligence Lab (FIBER), NL, with [[l03s]], [[ola]] and [[ugrnm]]
grep: index: Is a directory
intelligence_amplification.mdwn:The use of punched cards and mechanical devices for "enhancing natural
permaculture.mdwn:**Permaculture** is an approach to land management and settlement design that adopts arrangements observed in flourishing natural ecosystems. First formulated in 1978, it particularly stands in opposition against industrial agriculture. [[Permacomputing]] is based on the idea of applying permacultural ideas to computing (and "high" technology in general).
regenerativity.mdwn:###The design of digital technologies (hardware and software) should be determined by democratic and participatory processes and help regenerate natural ecosystems and promote social cohesion. [^1]
regenerativity.mdwn:- Regenerate natural ecosystems and social cohesion.
grep: research_fields_and_methods: Is a directory
supercapacitor.mdwn:commercial intermediate products instead of deriving everything from natural
supercapacitor.mdwn:* Activated carbon: Made of charcoal or coal by e.g. heating it for 1 h in a muffle furnace at 450 ��C in the presence of air. The commercially available activated carbon usually comes from the burning of coconut husks, but other organic sources may also be used.
supercapacitor.mdwn:* Manganese dioxide (MnO2): Occurs naturally in certain minerals but needs to be purified at least for electrolytic battery use. This involves dissolving the raw material in sulfuric acid. Manganese is also found in organic life and is an essential dietary element for humans.
grep: templates: Is a directory
unconventional_computing.mdwn:technology that better integrates with natural processes. This, along with
ChatGPT
ChatGPT
The
grep
search results highlight several mentions of natural processes, resources, and their relationship with technology across various markdown files within the permacomputing directory. Here's a summary of the key points:
automation.mdwn
: Discusses the interplay between natural processes and human labor, suggesting a focus on how automation can coexist with or enhance natural systems.
balance_of_opposites.mdwn
: Mentions the concept of total control over systems, whether natural or technological, hinting at a philosophical exploration of how permacomputing navigates the balance between dominating and cooperating with natural systems.
cornucopianism.mdwn
: Defines "Cornucopianism" as a belief in the limitless abundance of natural resources, providing a critical perspective on growth and resource consumption, likely contrasting with permacomputing's emphasis on sustainability and limits.
editing.mdwn
: Critiques the misuse of technology, emphasizing the exploitation of natural and human resources, and suggesting a reevaluation of what technology means and how it interacts with the natural world.
events.mdwn
: References an event that provided an overview of permacomputing, potentially discussing its principles and how they apply to natural intelligence and ecological systems.
intelligence_amplification.mdwn
: Touches on the historical use of mechanical devices and punched cards to enhance natural intelligence, hinting at the roots of computing in augmenting human cognitive abilities with respect to natural processes.
permaculture.mdwn
: Explicitly links permaculture with permacomputing, defining permaculture as a design approach that mimics flourishing natural ecosystems and opposes industrial agriculture, laying the foundation for permacomputing's principles.
regenerativity.mdwn
: Discusses the democratic and participatory design of digital technologies to regenerate natural ecosystems and promote social cohesion, emphasizing the goal of aligning technology with ecological health and community well-being.
supercapacitor.mdwn
: Describes the use of natural materials in the development of supercapacitors, highlighting practical applications of natural resources in computing technologies and energy storage solutions.
unconventional_computing.mdwn
: Mentions the integration of technology with natural processes, suggesting an exploration of computing methods that harmonize with or are inspired by the natural world.
These snippets collectively paint a picture of permacomputing as a practice deeply concerned with the ethical, sustainable, and regenerative integration of computing technologies within natural systems and processes. They underscore a commitment to leveraging technology in ways that respect ecological limits, enhance human and non-human well-being, and foster a more harmonious relationship between the digital and the natural.
You
##Regenerative design, Regenerative computing

###The design of digital technologies (hardware and software) should be determined by democratic and participatory processes and help regenerate natural ecosystems and promote social cohesion. [^1]

Regenerativity principles disrupt and surpass technology design associated with power accumulation, a polarisation of opportunity and environmental inequalities, consumption and profit maximalisation.


- Regenerate natural ecosystems and social cohesion.
- Democratic, co-creative and sustainable.
- Creative problem solving with wide perspective and planet encompassing focus with humans as integral part.
- Evolution from designing objects to designing material flows and systems serving the common good.
- Design process should be as open, participatory and transparent as possible.
- Integrate diverse views, needs and issues (not just those of predominantly highly-educated, middle-class males in urban centres), co-design principles with active participation from all users are essential.



See also:

Permacomputing [[research fields and methods]];



[^1]: [Digital Reset Report, TU Berlin, 2022](https://digitalization-for-sustainability.com/digital-reset/);
ChatGPT
ChatGPT
The concept of regenerative design and computing outlined here is a visionary approach to how we conceive, develop, and deploy technology. It draws from and extends the ethos of permaculture into the digital realm, focusing not just on sustainability���that is, maintaining current conditions���but on regenerativity, or actively improving the health of ecosystems and communities. This approach represents a shift from a linear, consumption-driven model of technological development to a circular, life-enhancing model. Here's a deeper exploration of its components:
Regenerative Principles in Technology
Regeneration of Ecosystems and Social Cohesion
: This principle emphasizes the need for technology to contribute positively to the natural world and human communities. Instead of technology being a neutral or negative force on the environment, regenerative computing seeks to make it a beneficial one, aiding in the restoration of ecosystems and strengthening community bonds.
Democratic and Co-creative Processes
: The design and development process of technology must be inclusive, allowing for a wide range of voices to be heard and considered. This democratization ensures that technology serves a broad spectrum of needs and values, rather than reinforcing existing power structures and inequalities.
Creative Problem-Solving with a Global Perspective
: This calls for innovative thinking that goes beyond immediate technical challenges to consider the broader implications of technology on the planet and its inhabitants. It involves designing with an awareness of the interconnectedness of systems and the role humans play within them.
Evolution from Object Design to Systems Design
: Shifting the focus from creating discrete objects to designing interconnected systems and material flows reflects a deeper understanding of the cyclical nature of ecosystems. This systems thinking approach aims to create technologies that fit into and support the natural and social systems they interact with.
Open, Participatory, and Transparent Design Processes
: Ensuring that the design process is accessible and understandable to all stakeholders encourages active participation and ownership. This transparency is crucial for building trust and ensuring that technologies are aligned with the needs and values of the communities they serve.
Integration of Diverse Perspectives
: By actively including voices from various demographic and socio-economic backgrounds, particularly those traditionally marginalized in technological development, regenerative computing seeks to create more equitable and relevant technologies. This diversity of input can lead to more innovative and adaptive solutions.
Implementation and Challenges
Implementing regenerative design in computing involves rethinking many of the foundational principles of technology development, from the economics of production to the lifecycle of devices. It challenges the industry to prioritize ecological health and social well-being over profit and efficiency. This shift requires new metrics for success, new forms of collaboration, and a willingness to experiment and learn from failures.
One of the key challenges is overcoming the entrenched interests and power structures that benefit from the status quo. Another is developing the technical and social infrastructure to support more democratic and participatory design processes. Despite these challenges, the movement towards regenerative computing offers a hopeful vision for the future of technology, one that is in harmony with the planet and its inhabitants.
The reference to the Digital Reset Report by TU Berlin underscores the growing academic and practical interest in aligning digitalization with sustainability goals. It provides a research-backed framework for understanding and advancing the principles of regenerative computing, indicating a path forward for technologists, designers, policymakers, and activists interested in fostering a more equitable and sustainable digital world.
You
Source:

https://permacomputing.net/cloning/

permacomputing/ cloning
Edit RecentChanges Preferences ?Discussion
This wiki is meant to be cloned so that you can consult it while being offline. There are several ways to do it depending on the system you use and the tools you have access to.

You have access to git
Cloning
It's as simple as:

git clone https://git.bleu255.com/repos/permacomputing.git
ChatGPT
ChatGPT
The Permacomputing wiki provides an option for users to clone its contents, allowing offline access and consultation. This is particularly useful for those who wish to dive deep into the principles and practices of permacomputing without the need for a constant internet connection, embodying the ethos of permacomputing by minimizing reliance on online resources and reducing digital footprint.
How to Clone the Permacomputing Wiki
If you have
git
installed on your system, you can easily clone the Permacomputing wiki by executing the following command in your terminal:
sh
Copy code
git
clone
https://git.bleu255.com/repos/permacomputing.git
This command will create a local copy of the wiki on your machine, allowing you to browse the content at your leisure and convenience, without an internet connection.
Benefits of Cloning
Offline Access
: Once cloned, you can access the wiki's content anytime, anywhere, without needing an internet connection. This is particularly beneficial in areas with unreliable internet access or for those wanting to reduce their online time.
Personal Archiving
: Cloning allows you to keep a personal archive of the wiki, which you can refer back to, even if the online version changes or becomes unavailable.
Customization
: With a local copy, you have the freedom to customize or annotate the wiki content according to your needs, further enhancing your learning and exploration of permacomputing concepts.
Contribution
: For those interested in contributing to the wiki, having a local clone makes it easier to edit and test changes before pushing them back to the main repository.
Considerations
While cloning provides numerous benefits, it's important to regularly update your local copy to ensure you have the latest information and resources. You can update your clone by navigating to the cloned directory in your terminal and running:
sh
Copy code
git pull
This command fetches the latest changes from the original repository and merges them into your local copy, keeping you up-to-date with the evolving discourse and practices of permacomputing.
Cloning the Permacomputing wiki not only serves practical purposes but also aligns with the movement's principles of sustainability, resilience, and mindful engagement with technology.
You
**Retro** is a Latin word meaning "backwards" and "before". In computing, it generally refers to a kind of "time-capsule" computing that tries to re-enact a historical time period when a [[hardware]] platform was "still alive". Its central driving force is nostalgia.

The concept is problematic from the permacomputing point of view because:
                                                                                          * It affirms the industrial definition of "platform death" and that there can be no genuinely new uses for a platform when it is "dead".                                        * It separates the current time period from the "old times", thus creating an artificial mental boundary.
  * While historical re-enactment and time capsules have their definite places and hardware [[lifespan maximization]] is an essential element of permacomputing, labelling all uses of old hardware or time-proven techniques as "retro" may actually discourage people from using them for new purposes. We need sustainable continuity rather than a culture where hardware eventually becomes "time-locked" (i.e., [[obsolete|obsolescence]]).

The concept of **Zombie media** has a similar problem with affirming the industry-defined concept of media "death".

[[Heirloom computing]] is another form of time-capsule computing but one that designs a static artifact that future generations may return to.

Examples of non-retro uses of old computers can be found in the [[demoscene]] and [[hacker]] cultures.
~
~

The critique of "retro" computing within the permacomputing framework raises intriguing points about our relationship with technology and its lifecycle. By dissecting the concept of "retro," we can explore alternative narratives that foster a more sustainable, innovative, and inclusive approach to technology use and development.

The Problem with "Retro" in Computing
Affirmation of "Platform Death": The notion of "retro" computing often implies that once a technology platform is no longer in mainstream use or production, it is "dead." This perspective is in direct opposition to the permacomputing ethos, which sees ongoing potential in all technology, regardless of its age. By declaring a technology "dead," we limit our imagination and potential for innovation, missing out on opportunities to repurpose and revitalize these platforms.

Artificial Temporal Boundaries: Labeling technology as "retro" creates an unnecessary divide between the past and the present. This segmentation can prevent us from seeing the continuous thread of technological evolution and how past innovations can inform and enrich current and future developments. The artificial boundary discourages the integration of old and new, leading to a disconnection from our technological heritage.

Discouragement of New Uses: The term "retro" can inadvertently stigmatize the use of older technologies for contemporary purposes. Rather than exploring the full potential of these tools, the label may lead to their dismissal as mere novelties or objects of nostalgia, rather than as viable components of current technological ecosystems.

Alternatives to "Retro" Computing
Sustainable Continuity: Emphasizing the ongoing value and utility of all technology encourages a mindset of sustainable continuity. This approach recognizes the potential for "old" technology to serve new purposes, encouraging innovation and extending the lifespan of hardware.

Heirloom Computing: Unlike "retro" computing, heirloom computing focuses on creating technology that is meant to last and be passed down through generations. This concept aligns with permacomputing by valuing longevity, sustainability,
2 / 2
ChatGPT
ChatGPT
and stewardship of technology, fostering a relationship with our digital tools that is more akin to how we treat valued family heirlooms���objects that carry significance beyond their initial utility and are preserved and cherished over time.
Zombie Media
: While the term might suggest a negative connotation similar to "retro" by highlighting the supposed "dead" status of a medium, it also opens up a discussion about reanimation and reuse. This concept encourages us to think creatively about how seemingly obsolete technologies can be repurposed or reimagined for new applications, challenging the notion of obsolescence itself.
Demoscene and Hacker Cultures
: These communities exemplify the potential of old technologies in contemporary contexts. The demoscene, for instance, is renowned for pushing the limits of old hardware to create stunning audio-visual presentations, proving that innovation isn't confined to the latest technologies. Similarly, hacker culture often revolves around repurposing and hacking existing technology to serve new, often unforeseen purposes. Both cultures embody the spirit of exploration and innovation that permacomputing advocates for, showcasing how "old" technology can be integral to new creations and discoveries.
Shifting Perspectives on Technology Lifecycle
The critique of "retro" computing within the permacomputing framework invites us to reconsider our relationship with technology. Instead of viewing older technologies through a lens of nostalgia or obsolescence, we're encouraged to see them as components of a living, evolving ecosystem where every tool, regardless of its age, has potential value and utility. This shift in perspective is crucial for fostering a more sustainable, innovative, and inclusive technological future.
It challenges us to think beyond the conventional lifecycle of technology, marked by rapid obsolescence and replacement, towards a model that values repair, repurposing, and creative reuse. In doing so, it aligns with broader environmental and sustainability goals, advocating for a reduction in waste and a more thoughtful consumption of resources.
Conclusion
The permacomputing critique of "retro" computing is not just a semantic argument but a profound call to action. It urges us to rethink how we categorize and interact with technology, to bridge the artificial gap between the old and the new, and to recognize the inherent value in all technological tools, regardless of their age. By embracing principles of sustainable continuity, heirloom computing, and the innovative spirit of demoscene and hacker cultures, we can move towards a more sustainable, creative, and inclusive technological landscape���one where every piece of technology, past or present, is seen as a valuable part of our shared digital heritage.
ChatGPT can make mistakes. Consider checking important information.
?
ChatGPT



