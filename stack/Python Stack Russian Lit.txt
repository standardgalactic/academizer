Python Stack Russian Lit
Skip to content
Abrir barra lateral
ChatGPT
4o
ChatGPT
4o
Compartir
PLUS
Dijiste:
Can I get a simple stack based LIFO structure in python I can run in the interpreter with examples from Russian Literature?
ChatGPT dijo:
Absolutely! Here's a simple stack-based LIFO (Last In, First Out) structure in Python, and we'll use examples from Russian literature to push and pop items.
🧱 Basic Stack Implementation
python
Copiar código
class
Stack
:
def
__init__
(
self
):
        self.items = []
def
push
(
self, item
):
print
(
f"Pushing:
{item}
")
        self.items.append(item)
def
pop
(
self
):
if
self.is_empty():
print
(
"Stack is empty."
)
return
None
item = self.items.pop()
print
(
f"Popped:
{item}
")
return
item
def
peek
(
self
):
if
self.is_empty():
return
None
return
self.items[-
1
]
def
is_empty
(
self
):
return
len
(self.items) ==
0
def
size
(
self
):
return
len
(self.items)
📚 Russian Literature Example
python
Copiar código
stack = Stack()
# Push books onto the stack
stack.push(
"War and Peace by Leo Tolstoy"
)
stack.push(
"Crime and Punishment by Fyodor Dostoevsky"
)
stack.push(
"The Master and Margarita by Mikhail Bulgakov"
)
stack.push(
"Doctor Zhivago by Boris Pasternak"
)
# Peek at the top book
print
(
"Top of the stack:"
, stack.peek())
# Pop books off the stack
stack.pop()
stack.pop()
# Check what's left
print
(
"Current top:"
, stack.peek())
print
(
"Stack size:"
, stack.size())
🧾 Sample Output
text
Copiar código
Pushing: War and Peace by Leo Tolstoy
Pushing: Crime and Punishment by Fyodor Dostoevsky
Pushing: The Master and Margarita by Mikhail Bulgakov
Pushing: Doctor Zhivago by Boris Pasternak
Top of the stack: Doctor Zhivago by Boris Pasternak
Popped: Doctor Zhivago by Boris Pasternak
Popped: The Master and Margarita by Mikhail Bulgakov
Current top: Crime and Punishment by Fyodor Dostoevsky
Stack size: 2
Want to make it more interactive or themed like a library shelf?
Dijiste:
I want to run it from the interpreter, but might need to make a few files first
ChatGPT dijo:
Perfect! If you’re going to run this from the Python interpreter (like in a REPL or terminal session), here’s a clean way to set it up using a couple of small files. That way, you can import your stack structure and test it easily.
🗂️ File Structure
Let’s assume something like this:
arduino
Copiar código
.
├── stack.py           # Your stack implementation
└── test_stack.py      # Script to run examples with Russian literature
🧱
stack.py
– Stack Implementation
python
Copiar código
# stack.py
class
Stack
:
def
__init__
(
self
):
        self.items = []
def
push
(
self, item
):
print
(
f"Pushing:
{item}
")
        self.items.append(item)
def
pop
(
self
):
if
self.is_empty():
print
(
"Stack is empty."
)
return
None
item = self.items.pop()
print
(
f"Popped:
{item}
")
return
item
def
peek
(
self
):
if
self.is_empty():
return
None
return
self.items[-
1
]
def
is_empty
(
self
):
return
len
(self.items) ==
0
def
size
(
self
):
return
len
(self.items)
🧪
test_stack.py
– Russian Literature Example
python
Copiar código
# test_stack.py
from
stack
import
Stack

stack = Stack()

stack.push(
"War and Peace by Leo Tolstoy"
)
stack.push(
"Crime and Punishment by Fyodor Dostoevsky"
)
stack.push(
"The Master and Margarita by Mikhail Bulgakov"
)
stack.push(
"Doctor Zhivago by Boris Pasternak"
)
print
(
"Top of the stack:"
, stack.peek())

stack.pop()
stack.pop()
print
(
"Current top:"
, stack.peek())
print
(
"Stack size:"
, stack.size())
🏃‍♂️ How to Run
In the terminal or command line:
bash
Copiar código
python test_stack.py
Or open the interpreter and try this:
python
Copiar código
from
stack
import
Stack

s = Stack()
s.push(
"Anna Karenina by Leo Tolstoy"
)
s.push(
"Fathers and Sons by Ivan Turgenev"
)
print
(s.peek())
s.pop()
Want to expand this into a "literary bookshelf" simulator next?
Buscar
Investigar a fondo
ChatGPT puede cometer errores. Comprueba la información importante.
?

