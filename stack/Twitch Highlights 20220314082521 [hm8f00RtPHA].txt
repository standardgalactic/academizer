same thing. Stop calling yourself a junior. Band that word from your vocabulary. Don't
ever write that in anything. Don't put it. You say something like this. You say, I am
an entry level developer. Got it? Say that instead. It's always better. I'm an entry
level developer. No matter how bad the economy gets, they always have to pay to keep things
running. But when the economy is booming, they want to pay for new cool shit. So that's
when it's time to go over to the software and get a high salary. That's how you play
the system. I'm crafting something in open source and you can get your software dev game
on and you can do that in a way that's going to be meaningful, that's going to outlive
you, that can be about something that you may never get a chance to code on while at
work. That's my take on it. It's a pain in the ass to get your scripts to run across
the board, but it's not if you write it and go because you just write one binary and boom,
it runs on everything. So I'm kind of in a go frenzy lately, particularly since 1.18
came out. That's what you find me, see me doing.
Deadpool is the epitome of badass who also likes wham. His character personifies modern
masculine freedom to me. Absolutely. It totally does. And it's going to turn our node tree
into some JSON that you could parse and use and would be a really cool. So that's what
we're going to do. Just print this thing. I think the visualization with the renderer
is going to help me fix the other problem. So I'm going to go for that first. So it turns
out that we didn't need all the parsing and crazy stuff that was in here. So I went ahead
and moved it out. And we're back to a very simple scanner. A scanner is just a scanning.
It doesn't do any parsing. It doesn't have any pseudocode in it. We're going to put all
of that into Banzai itself. I'm back to putting the scanner, putting my expression language
and calling it what it is. It's an interpreter. We're calling it X for expressions. And it
takes gopagan language. And we're going to talk about what gopagan language is. I'll
give you an example of that here. So here is a Mrs. Pagan. This is a Pagan specification.
It's something I wrote some time ago. And here we see that the end of the line could
be a line feed, a carriage return line feed, or it can be a carriage return. And this has
been set by longstanding standards. But what does that look like in go code? So if we turn
to the go code on this, we can see that we can make a go version of that very quickly
using what I'm calling gopagan, which is an interpretation of it. It says in this set,
this one, this one, this one, one of those automatically. And that means that I can write
parsers for any language in a matter of minutes. And I'm not exaggerating. The entire JSON
specification is about 20 lines of Pagan. And I get a parser automatically out of it, title
headers within the body. So in my application, I'm going to disallow it to do that with one of
the standard existing parsers would be impossible. Goldmark reads common mark. And but I want to
be more picky about what kind of stuff I allow in my syntax, even though it's a subset of common
mark, that's one reasons or not. And now that I refactored it, it's so fucking easy to write.
It's so fucking easy. It's just like, Oh, it's the crazy thing is people are going to look at it,
they're going to be like, Oh, my God, how simple is this code? I mean, and I'm like, you have no
idea how hard it was for me to make it that simple. The more simple it is, the harder it was to write.
And the homeless people would always come down there, we're trying to help them go to bed,
because we were all sleeping in the gymnasium. And they would come to me and they would say,
we need coffee, because it helps me go to bed. I was like, what the fuck? And apparently,
it's a thing. Apparently, coffee, too much coffee can actually put you to sleep or a certain mindset
or something. Okay, Bob, yeah. I know, I'm sorry. I just love it. It's so happy and fun. And they
have dances. I'm also a WAM fan. We covered that. We covered that yesterday. And I can't
talk about that anymore. We'll print the position. So the Marshall print string version of the scanner,
if you print it in any capacity, is automatically the status with the error message involved,
the last error message. It's so beautiful. It's so beautiful. I love it. You're making them,
why not? I mean, this is why code is recreational and it's artistic. Because I feel like I'm making
a work of art here. I mean, a lot of people would disagree. They think it's, you know,
ugly, a sin, just like they do with art. But I think it's beautiful. I think it's absolutely
beautiful. And it keeps me going. My test just passes for no reason. I go through anything,
something that it feels like the right thing to do and all of a sudden my test passes. It's like,
it's an accident. Wait, my stuff works. I was doing something and I don't even know exactly why I'd
fixed it. I just know that it was a better way to do it. And if it's fixed, I still can't explain
what happened. Oh, God bless tests. That's practical testing right there. I can't tell you,
I just keep tweaking tail to the whole orientation. You just can't do that in most
programming languages. You have to put the end in the middle. So that's what that means. It's
between those two things. That's a technique that people use. I turned the water into Steven's,
fuck the other. Yeah, if you're raised by the whole angels, you probably have a hard time
getting along with people in technology. Maybe not. Maybe you're the perfect person to work with
others in tech. Oh my God, that's so funny. That is so funny. Thank you for that. I'm the destroyer.
I'm the destroyer. I'm like the death angel. No, I'm the humidifier. I boil the water till
there's no fucking water left in the room. I kid you not. Anything more than that's too hot,
including a hoodie, by the way, and anything less than that's not enough. So if you just
put just exactly what it takes for a t-shirt, just make yourself a headband, you'll be nice and
comfy. Seriously, you'll look weird, but whatever. Another secret. I'm gonna tell you a secret.
Were you born with an unusually large European nose? Well, let me tell you boys and girls and
everybody else in between. Grow a beard. It makes your nose look smaller. Great bald head, though.
Yeah. I have nice lobes, as the Ferengi would say. I mean, there's an alternate geek reality
right there. I have nice lobes. Yeah, my wife likes my lobes.
I don't remember. Is it like ancient enough that we can do that?
It's a different thing. I got him confused. There are both things where time elapses and
everything gets better. I have been known to cheat. I have been known to delete code in
order to make the test pass. I'm not above it. I am definitely not above it. What tests?
All right, now. My son's going out for Pi Day. He's going out with his college buddies to get
a Pi, because today is Pi Day, apparently. Today is Pi Day. Don't let Pi Day pass you by without
getting a Pi. Apparently, it's Pi Day. Just saying that R. Right? It returns a bool. If we have,
that's a type. That's a first-class type and go. How cool is that? How cool is it that you can have
first-class types and you can switch on types and go. You can't do that in Rust. They have
Tanks and whatever the fuck. What are they? Traits? JavaScript needs types. If JavaScript
gets types, I mean, TypeScript is already a thing. I just want to say, again, JavaScript has always
been really good at being influenced by what the trends are in society, I mean, in the community.
For example, CoffeeScript, I think, led directly to a bunch of the version six stuff that came out,
one of the biggest things that I did not appreciate was how valuable strict types are
to helping beginners understand computer programming in general. I think it's better to
start with a strict type language than a Lucy language. You don't understand how you're using
the same bits, ones, and zeros in different capacities as a different type. You really
haven't fundamentally understood how your computer works and it's going to cripple you
going forward in any kind of programming you do. Learning types is super important and that's why
I love Go so much because it has a nice middle ground there. I taught Python for five years as
a first language. I taught JavaScript for six years as a first language. I think that because
of my feeling about types, taking a little bit extra time to learn it, I'm going to try Go as a
first language. This is going to be the first year in 2022. Based on that, though, I'm also going to
say that your absolute first language is going to be Bash because you're already using Bash from
the command line. Every day you use Bash. You might as well learn the really, really,
really, really basic ideas of computer science and computer whatever. Structures, you know,
for loops and looping and variables, those are things you can learn from those skills
from Bash. You can say, okay, I know generally what computers are good to do, why I would want to
program something, you know, and then you can take it to the next level. The next level is
learning structure data in JSON. That's your first initial introduction to types
and then learning Go. We're going to be doing, we're going to do Bash and we're going to do
structured data, specifically JSON and YAML, and then we're going to go. So that's very solidly
in the plan for 2022. It'll be the first time I've taught Go as a first language or, you know,
first dish lies. I just can't stand it. If you want to read the actual words, go read them for
yourself. Russ said it's time, Torvald said it's time for something else for drivers and it might
not be rust. That's exactly what he said. If you care to do it, go actually read the shit
and not listen to some rust fanboy blow and smoke up your ass. CTO of Joint and creator of Oxide
Computing, who said, is it time for rust and rewrite the operating system of rust? And his
answer was no, because you can't do the fastest IPC method is shared memory and you can't do that
with rust. You can, but you have to be unsafe. It defeats a little purpose. That's what he said.
And then you get people like Cheeto Bandito telling us absolute the end, the end game of lies,
which is like, Linus is trying to change what Colonel Rust. If you were to tell that to Rust,
he'd fucking slap you in the face. He totally would. He'd slap you in the face if you said that.
It's such a, it's such a manipulation of what he said. Yeah. Yeah. I bet I know the streamer too.
You don't have to tell me who the streamer is, but I guarantee you there's a lying streamer out
there who's, it's not even, they don't have any clue and they don't care to know. They just want
to believe in their religious, you know, fanboy dogma. And that's pretty much the Rust community
cult in general. I don't mind that. You know, if you want to keep trying to remake the re-invitable.
60 megabytes, you kidding me? From scratch containers are two megabytes.
Keep trying. The Rust community has overwhelmingly proven that they're irresponsible in general
when it comes to making claims about their language. And not everybody obviously does that,
but mostly they are. Mostly they are just totally irresponsible. And that does not build trust.
I think that he's the one who was using Peg, by the way. I learned about Brian Ford's Peg
through TJ because TJ used Peg to do his log query tool. So yeah, if you don't know about
TJ Holloway Check, you need to go learn it. And if you want to know why I learned Node,
I mean, go in 2014 is because of Farewell to Node. This was the place I went.
