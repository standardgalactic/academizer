All right, here I am. I am here. I am not f-ing. I'm actually here. I'm updating
the calendar and some stuff. In fact, let me show you really quick. So, oh my gosh,
Rob, be quiet. So, a couple changes here. Not just updates to Steam. I'm still
going to try to do 6.30 to 7. But I just wanted you to know we're just going to
lump all of these together. We're going to keep them on the weekend, the weekdays.
And we're going to try to make it 6.30 to 7. And the questions can be about
anything. So, if you have a question, just go ahead and put that in the Discord
in advance or just do the live questions and we'll just go with it from
that. So, we can skip past this. It's been, we've tended to take on one topic at a
time just based on the questions, but we've done like two maybe a couple days.
So, there you go. My wife is making dinner and she's using the chopping board.
She's driving me crazy, but I'm super happy that she's doing it. She's very nice.
So, let's jump right in. Let's just jump right in and see if anybody has any
questions. We had actually a couple questions that came in while I was
playing Dota after work, which I probably will be doing again after this. I am really
tired today and I can't figure out why. I don't know if it's because I didn't drink
as much coffee today. We were talking about sleep and drugs and caffeine and
that kind of thing in this last question session. I've truly been on my mind.
So, I started to cut back on the caffeine. I didn't have any coffee this morning and
I was dragging all day and I hear that that's what happens with caffeine
addiction, but I don't know. So, I've been fighting that and one of the ways that I
fight being tired, especially at the end of the day, is to play a game or go for a
walk or something like that. So, I was playing some Dota. We've had a couple of
people asking questions earlier in random things. Like, what's my favorite candy and
ice cream and things like that? And then we had somebody ask if it's okay to
tech talk while I'm gaming. Obviously, it is. I don't care. Let's see. And here we go.
Just started a new job as a Go Devon in American Company. Turns out my manager
likes Dota. That's awesome. Are you good at advanced math? No, I'm not. I'm not
good at advanced math. I wish I was. I'm not. I'm not. I didn't, you know, I got
A's in 300 level calculus in college, but I didn't do well after that. What else
do we have here? I'm just reading through the questions. Let me go back to close
up. Again, if you have a question, go ahead and just type it in. If you wanted to
be seen, put Q in front of it. You can also put it in on the stage. In fact,
let me go ahead and post that we're doing questions and advice to
Discord. If you want to join in Discord, you can do that as well. Let me go
to the stage in Discord. Start the stage. Paste. Start stage. So we can get some
people in there if they want. Race hand list has moved. Interesting. No. Oh, okay.
I'll request for everyone. Oh, that's really cool. Okay. Let's go ahead and put a
Twitter notification out. And we'll just go until we're out of questions. Probably
45 minutes or so. ruxrob.tv, live stream, coding, FAC, AMA, Twitch. Get a couple
of people in here. And if not, we'll just go. One of the reasons I want to do this
is I want to just start covering the questions that have been entered over the
years in Discord that I haven't answered because I'm busy doing other things.
So here's another question. So I spent a chunk of my time on Neo Vim from
VimScript to Lua. But in the end, I had to drop it because it just wants... it just
wasn't efficient compared to VS Code. And I see that you use regular Vim without
any plugins. So I'm wondering what your opinion is. Oh, that's a great question.
I'm going to copy that question out. I've answered this question a lot, but I'm
going to go ahead and answer it again because it's so common. Let me see if
I can get to my question session here. I have a Zed for this. I want to remember
the questions so that I can put them in the description. So let's do that.
Let's do ZedEdit. Is it Q&A? I don't remember. I made a Zed'll cast an
entry. No, that's not it.
You know what? Let's just make an ongoing dev server about this. Do we have a
Git repo for this already? Do we have one? I think we might already have one.
I think we might already have a Git repo. I don't remember what's the name, though.
I'm going to go look and see. If you don't know what a Git repo is,
it's a place to put source code. I'm going to go look and see if I have a recent one
that I've added that I'm not aware I don't remember.
And then I'm going to keep a central Git repo for all the questions and answers
and try to keep it to be the same. It looks like I don't have any recent...
God, look at this. This is me doing code. This is the bonsai, and then this is summer.
It's funny, isn't it? All right, so wait a second. Here we go. Repositories.
No, I guess I'll just have to have another one.
Which we've got a question conversation. So let me just do this live.
See the GitHub.com. Let's see if we have anything awesome go.
Boost, BoostVM, cv.FenFonts, JavaLab, Workspace, blah, blah, blah.
What should we call it? Let's call it Questions, Advice, and Conversations.
So ghrepocreate from scratch. Yes, we'll call it Questions, Advice, Conversations.
That's a big old long repo name, but I don't care. And we'll just call it...
We'll put a phone. Let's put a phone in there. So again, on Discord, if you want to raise your
hand and actually talk, you can. If you prefer to express yourself in voice, not everybody
wants to do that. But if you do, you can. That's one of the reasons we're doing this.
This also goes on YouTube. Questions, Advice, and Conversations.
And this is different than a Z. A Z is something that I'm just going to do.
I don't want to get ignored. Would I like a license? Yes.
Let's do creative commons open so everybody can cite it.
Do I want to create it? Yes, I want to create one.
Clone and repo locally, yes. And Questions, I'll never forget where that is from now on.
So let's do vireadme.md. The cool thing about this is I can actually do it by date.
So htitle. Wait, not htitle. Ah, I can do hnow. How about that? There's hnow.
Why does it say 1045UTC? I need to fix that. All right, I'll fix that later.
So here's one of the questions. And then what I'll do is I'll link to the video in here. How about
that? And you can just go watch all the videos at once. How about that? Let's do that. And then
I'll quote the questions. That sound good? It seems to be working so far. So here is the answer.
And I'll put the answer in the video. Okay. And then I'll just put the questions just so I
know what questions we have. So let's put the same thing here. Phone. And we'll put questions,
questions, advice, and conversations. All right. Yeah. And that's it. I think we'll put the most
recent ones at the top. So people can just go to the top and see that. And they can kind of log,
maybe kind of a reverse log. And again, these questions, people are going to ask these questions
like, you know, the same question all the time. That's fine. If you want to add the same question,
that's totally fine. So let me just mark this really quick. I wish I could actually mark it.
I'm going back to the most recent messages. So let's talk about this. So again, the whole
NeoVim thing. Now, I've answered the NeoVim question in one of my commands, but I did it rather
meanly. So there's a swear word in here, and I'm going to put it, I'm going to show it right now.
And then I'm going to explain myself in a nicer way. Okay. So one of the things to understand is that
NeoVim causes me an extreme amount of stress, because two years ago, I went through and did an
evaluation of NeoVim and created a rather extensive, like, breakdown of it, thinking I was going to
like it. And, and I didn't. So I have to say about that. And I'm actually trying to find,
let me see if I can find where it is in my RWXGG stuff. I think it's,
I think it's in, is it Vim? No, it's not Vim. It's, I can't remember where I put it.
Lang, VA magic is, all right, so let's start with VA magic. Okay. So if you know how to use
VI and there's an entire boost, every year has been an entire boost, you know, day pretty much
dedicated to VI and why to use it and, and all of that. Unfortunately, those who don't understand
the powerful shell integration build stupid things like NeoVim. And the past I've been really
mean. First of all, before I get into this, I want you to understand this is not a personal attack.
If, if you like NeoVim and you use NeoVim, that's good. I don't dislike you. I strongly disagree
with your choices, but there are people that are some of my best friends in the world who love
NeoVim and they use it all the time. And I love those people. I literally love them. They're like,
hang out with them and everything. And they're not, so I can strongly disagree with your choice of
editor and think it's a stupid decision without thinking you're stupid. Making one stupid decision
doesn't make you stupid. Making a lot of them. I don't know, you know, so I don't want anybody
to feel personally attacked by this answer. I get this all the time. In fact, this is the, the
discussion about NeoVim is the thing that led to the drama that I don't want to go into with other
Twitch streamers, some of whom I strongly respect and others whom I've lost all respect whatsoever
for based on their behavior. But it doesn't matter what matters most is why I came to dislike
NeoVim. So unlike a lot of people who will just hate on a thing and start with a conclusion
and put that in Twitter and pick a fight, I went into this wanting to like NeoVim and slowly and
but surely I came to hate it, like really detest it. And to detest the community as well. The
community of NeoVim has the gall to create a VimConf that has nothing to do with NeoVim that's
completely against what Brahms would have even wanted to do. And they try to say that Brahms
supports it. He doesn't. And so, you know, it just kept aching on me. But so here is the link.
This is the short answer to it. I'm going to let you, it's so new. It's not new and shiny. It's
old and busted. But you can't tell that it's NeoVim is my imagination of what a bunch of
Roblox programmers decided to make when they found out that Vim wasn't to their liking and
they couldn't use plugins and didn't understand Unix. That's my interpretation of what happened
and how NeoVim came to be. And you know, Brahms been so, so in case you don't know the history
of NeoVim, all right, the history of NeoVim is Vim that used to not be multi-threaded in seven
and it had some other problems with it. And it's always been under really, really strongly gate
by, you know, Brahms, the guy who made it. And they get the name right, I hope. And so, that's
been the ongoing problem. And so, a bunch of, well, we're going to take our ball and go,
make our own editor people, decided to make an entire editor in Lua, as far as I know.
And so, they just set out to make this editor the way they wanted to. And they ended up making
basically a terminal version of VS Code that looks and feels like Vim, but it's not Vim at all.
I mean, in many ways, it's not even compatible with Vim. And some of the stuff that they took out
is just really bad. So, the fact that they took out better configuration instead of, like,
using VI as the extension, people who thought this was better configuration didn't have any
concept of what Ed even was or its power. They just decided to throw it all out because it was
some old boomer shit. And they have no, they didn't seek to understand before they rebuilt this.
And that's totally their prerogative, but it's not what I agree with. So, I'm going to,
you can go through all these point by points and I'll give them to you. But the single,
number one reason not to use NeoVim is because it will make you irrelevant as an operations
hacker systems backend person. And if you don't believe me, there's an engineer on my team right
now who constantly struggles because he can't get NeoVim and all my Z shell on our production
jump login boxes. And so, there's no NeoVim in any form on any certification exam. There's also no
Emacs. But there is VI and VIM on every container engine ever made, every container OS made,
like Busybox and Alpine. And there is VI in every, you know, every login system. And it's the default.
It's the default editor on all systems. I mean, they made Nano the default editor for a while.
And that was a dubious decision as well. You really don't need it, by the way. I mean, if you use,
if you use VI, if you go to VI, survive, survive, this will, if you let yourself use the arrow keys,
which Nano does, then you can use this and it's actually easier than Nano to start with VI. I'm
not even kidding. It's easier to start with VI than it is to start with Nano. If you allow yourself
to use arrow keys just to get started. Okay, I've seen this, I've done this with nine year olds.
In fact, I have a $500 bounty that went unclaimed to my, my group at Skillstacks for five years,
for five, actually five years to 2016 on saying if anybody can find any organization on planet
earth that's teaching VI to nine year olds, I'll pay them the money and it never came through.
Because I challenged myself to be able to get people started really early. And I'm not even
kidding. I've had people using VI, the VI editor as young as nine, nine and 10 years old, barely
could type and they were able to use it. It was great. So I don't want to hear your crap about VI
being hard or nobody can learn it or I can't exit. Oh, that's such a funny joke. No, it's not. It's
lame. It just shows that you don't actually know it. No, or they've even tried. You're just
following along with the rest of the sheep hating on VI. The worst are the people who are old and
call it a boomer tech and they'd have no clue what they're talking about. They have no clue
and they've never written a UNIX filter. They don't even know what UNIX is. They can't tell you
the difference between UNIX and Linux. They have no historical background, but they love throwing
shit. All right. If you can tell, I'm a little sensitive about this because just by saying I
don't like NeoVim makes me like public enemy number one in a lot of circles. So this is the
reason I don't like it. It doesn't have better configuration. It has incompatible configuration.
In fact, one of the worst things about it is that you can't take your single configuration
Vim or C file and just send it with SCP over to another machine and be completely up and running.
You just can't do that, right? Vim does have plugin support, which we're going to cover
in two weeks on the boost on Sundays, but try that with your Lua.
It just makes me laugh because it's so naive. It's just so naive. So anyway, did I, did I
spell it wrong? Yeah, there's probably tons of spelling mistakes here. I have to make a decision,
put data, put stuff out that's got spelling mistakes or not put anything else out. So
you're going to find a lot of low quality things like that. Thank you for letting me know though.
Better defaults. The second thing I need to compare is 42 different defaults. This is so bad,
I can't even tell you. To change, to change a default from VI behavior is really, really bad
because you want to be able to know you can use the default when you get on the system.
Now there are cases where that does make sense. I mean, this is one of the few things where you
can copy your RC with you and be okay with it. With TMux, I totally throw, you know, disagree
with that approach and I always customize TMux to behave like screen because screen is a different
thing and we will cover that again in two weeks and the boost when we go through all the configuration
files. Multiple API and plugin support. This is actually a reason not to use it. You don't want
a lot of APIs and plugin support. It's a text editor. It's not an IDE. Neo Vim people try to
make Neo Vim into an IDE. It's not. It's not an IDE. It's just not. Change features. Every single
feature that changes is ridiculous. Things like JSON decoder, silly one commands like jq exist.
Again, just more evidence that it doesn't have a clue what even exists out there.
Missing legacy features. They dropped the if pearl, which is really stupid. They removed the x
support, the x command, they removed the view command, vim diff and shell then removed like
standard things that have been in VI since 1970 for no 76 for like no reason. It's probably 82,
actually. Again, incredible and decisions for people who never actually learned to use them.
They don't know how. They even took out smile for no reason, which is just so dumb. It's like
whatever. More accessible team. No, their team is not more accessible. The team is full of woke
lords who if you disagree with them will cancel your ass and do whatever the hell they want.
They are worse than Braum. Braum the gate keeps, but at least he'll hear you out and then he's
maintained a gatekeeping thing. No, they're not. It's not a more accessible team. This is absolute
bullshit. External plugins in separate process, which is having a plugin at all is a bad idea.
So if you don't know why you don't understand Unix, better support for Lackardy. No, it doesn't need
more support for Lackardy. We already have other terminals in Lackardy's full of bugs.
So many bugs I had to abandon it after I used it a year. Give them a healthy competition.
Give them competition. They certainly cannot hurt. This is true. They did get
Vim to add multi-threaded supports and some of the things like that.
And they got Vim to look at Vim9 and things, but I don't even use Vim9 because why? I'm not going
to get it on any system I've ever logged into until it becomes the standard default on Ubuntu
and Red Hat. I'm not interested in it. It has panes. Yeah. If you're using panes in your Vim,
you are really failing because you could be using Tmux panes instead and use copy and paste across
everything on your terminal session instead of having to boot up VI to do this. I see people
use panes on Vim all the time and it just is so sad because they have to use I3 or something else
to open up an entirely separate terminal just to copy and paste from that terminal over into
their VI session because they use VI panes to manage their windows instead of Tmux. If they
had used Tmux from the very get-go and they'd learned how to copy and paste, which by the way
is 100% compatible with screen, which dates back to the 80s, now you have terminal-based
copy and paste and your fingers know what to do on any system that's got screen or Tmux on it
and you don't have to depend on VI's panes at all. That's an IDE thing. It's not a text editor thing,
so it has no business being there. I see people do it all the time. I just laugh and just laugh
because they don't know better. I was like, fine, do what you want. That's fine. It does. It has
tons of bugs and stuff. I don't even want to talk about it. It does have a prettier command line,
but people don't know that they can customize their VIM command line thing to look like they want to
as I have done. I don't know if you can see this, but mine has been completely customized. I do not.
I detest line numbers. They take up too much line space. They're distracting and I would rather look
down here for my line number when I need a line number. I don't do the offsets or any of those
things. Those are just personal preferences. I don't fault anybody for doing something different
but why am I so harsh on NeoVim? They restart out more objective. The reason is because they just
really didn't even try and then they love to throw stuff at the people and then they love to push
their marketing on everybody as being the best newest thing. Instead, they're actually really,
really hurting beginners. NeoVim is objectively bad for beginners. People who learn NeoVim first
constantly complain to me afterwards when they realized they didn't need to do any of that
and once they get an actual job doing something, then they get in the business arena and they're
like, oh my God, I had to learn VIM instead of NeoVim and they start, you're right. I'm just so tired
of hearing it because the people that push NeoVim don't care about the people that they're helping.
They just want them to use their thing to make it popular and push it up. It's not even,
1.0 NeoVim hasn't even been released. It's still beta software. No kidding, go look at it.
NeoVim, NeoVim is not even production code yet. The latest version is, let's go see, maybe this
has changed. Let's go see if this has changed. It's like, the current stable release version is 0.7.
So, you know, and yeah, you can pay Bitcoin too because we think Bitcoin is a good idea.
Terraform has wide adoption before 1.02. All right, fine. I don't like Terraform either,
not the way other people do. We just blindly. Terraform is a tool, just like anything, right?
And a lot of that stuff doesn't need to be done. But anyway, we don't want to talk about Terraform
right now. If you want to use NeoVim, fine. I think you're a fool for choosing it, especially if
you're a beginner, okay? Yeah. So, these, NeoVim is an editor, right? And, you know, I just look,
I would just rather, a nice looking website, that's the one thing NeoVim did right. That's what the
creator of them had to say about NeoVim. All right. Lua for plugins and config is so good,
I love it. This is somebody who knows who does not do any kind of operations work.
The only people that I would recommend even considering NeoVim, let me, let me suggest this,
okay? If you want to use NeoVim, fine. But the people who need to be considering NeoVim are,
one, the people who know how to use them already, all right? If you already know how to use them
already, and it doesn't meet your needs, two, you're an extensive plugins user, which means
that you don't care about being portable to multiple systems. That means you're doing,
you're doing like web development on one system, and you're never working on anything else. And
most of the Twitch people who use NeoVim, that explains them. In fact, most of the people that
use NeoVim code in TypeScript, almost all of them. It's almost like a, this like deal between
TypeScript programmers and NeoVim. They're like almost always go hand in hand. And, you know,
I don't get it. They also use all my ZShell. And they, they, they do a lot of it from their,
their Macs, or they use i3 on a single machine. And they don't use multiple systems. So if you're
going to be, if you don't mind being locked down to a single computer, where you can download all
your completely useless plugins, then fine, go ahead and use it. But if there's some extra thing
that's there that you don't feel like you can do with a Unix filter script, or, you know, just one
of the basic Neo, basic VIM plugs using the plug utility, which is far more portable, by the way.
The, the, the plug utility actually uses git to manage plugins. It's just more organized and
across the board and it's not in Lua. If you're obsessed with Lua, then maybe, yeah, maybe you
want to have NeoVim be on your local system. But otherwise, I think it's a huge mistake. And I would
rather use VS Code before I would use NeoVim because that's an IDE that has far more adoption.
It's, it can do way more things locally. It might take five minutes to boot up with, you know,
10 plugins loaded. But I, you know, if I'm going to boot up an IDE and leave it running all the time,
then I would go with VS Code or JetBrains or any number of things that are way, way, way better
than NeoVim for doing, you know, management of 10,000, you know, lines of code, code bases and
stuff like that where VIM starts to fall on its face. VIM wasn't made for that, right? It's just a
text editor. But, but if you really, really, really like the VIM experience and you want,
for some reason, you want the, the monolithic, you know, advantages of a, of a big thing with
lots of plugins, then maybe NeoVim is the thing. And the thing I find funny though is we just had
in the chat just now today, we had somebody complain about the speed of NeoVim after they
got a certain number of plugins in there. So, I mean, at that point, you know, why are you doing it?
If it takes like 60 seconds or 30 seconds even to start your editor, man, you've really shot
yourself in your foot in my world. People, people tell me all the time, why are you like, are we
done? All right, okay. People tell me all the time, like, why are you booting up and then booting
down? Why are you going out in and out of your editor all the time? I'm like, because I can't,
right? You can't, that's what the VI is supposed to be. It's supposed to be a wicked fast editor
that you can pull up any time and close out and then pull up something else, try to do that in
NeoVim or Emacs, forget it, right? And that's why when you pull up Emacs, you got to have like
everything loaded, you got to like fuzzy find some other file and all this stuff is because
it's completely designed for a different type of work interface. The faster. So, so this is
not my preference specifically for beginners. That was a long block of text. Yes. And, and,
and that's all I have to say about that. So let's, let's move to a different topic. Maybe we can
find one that I won't rant about so hard, hardly. But, but, you know, I feel like we've talked about
this one. I kind of, you know, kind of over talked about it. All right. So let's go to my messy room
again. I don't even care. I just stream with my messy room now. What's the Unix filter? Somebody
was asking what a new Unix filter is. Okay. So let's, let's talk about Unix filter. What's a
Unix filter? And I'm going to give you the short version of this. This is all covered in the boost,
but people ask these questions. So I'm going to cover it really quickly. Kind of the TLDR.
That was not a TLDR, but when somebody asked me why I hate something, I feel
sort of irresponsible just saying cause it sucks and letting it go. So you're going to get a longer
answer for me when I don't like something and I'm possibly going to be offending people.
Because I want you to see where I'm coming from as opposed to just saying, well, he's just a hater.
Right. I'm not. I really wish. In fact, when I found out that it wasn't using Vim script and it
wasn't, uh, you know, a good faith extension of a fork of Vim, I started getting sad because I kind
of wanted it to be that because they have a point about Vim being locked down and not community
driven and stuff. They have a real solid point on that. Um, but the rest of it is just trash.
So I was like really frustrated because I was hoping it was going to be more than that.
All right. So, uh, what's a Unix filter and why should I care?
I've answered this question so many times, but I'm going to try to get fast at answering a Unix
filter. All right. A Unix filter is based on the Unix philosophy in general. So, um, I mean,
you can go search the internet and I'll get a faster answer, right? What is a Unix, uh, filter?
All right. So, and it's covered in the boost. I think on like the third week, I want to say,
uh, let's go see what we have. Pipes and filters. Uh, in this chapter, what makes
Unix filter a powerful concept for processing data? What have you done with Unix filters?
How can you tune a Unix filter into a network server? Pipes and filters and Linux and Unix.
So Pipes and filters are the thing that they're like the implementation or the manifestation of
the Unix philosophy that makes it really, really powerful. And what it allows you to do is chain
things together. And speaking of which, um, even though there's not any Unix filters and I am going
to plug something that someone brought to my attention called the command challenge. So this
is cmdchallenge.com. I want to, I think it was Five Shot who showed me this. This is ridiculously
addicting. And if you want to learn, uh, about the power, you want to practice the powerful
combination of different, uh, Unix filters or Unix commands or command filters, whatever you
want to call them into pipelines, you can come here and try this. Uh, I was, I was ridiculously
surprised to discover that this thing is actually sending code straight to a Unix system on the
back end and, and has completion and everything in it so that when you run it, you get this solid
output. It's really, really great. Um, and I don't know who showed us this, but I am super happy
with it. So this is a, this is a, more of a script. I tend to make my command lines more into
the bash scripts than, than pipelines was set in AUK. I really detest set in AUK. Um,
AUK is particular. I really hate it. Um, I would rather do it with Perl or just, you know, bash
or whatever. So because I don't like all the sub processes with that, but that's a, a complicated
question. So this is one of our answers. Uh, you can go back in the history. I learned about the
factor command, which just takes a bunch of random numbers, but this, so this, this, I want you to
see these because this is a sample of a pipe, right? So you have something piping into something
else, right? So, um, so in this case, uh, I'm using this site. Normally I would use my terminal,
but I want you to see, uh, we're not on the right one. We have to go, we have to go. So here's the
first one. Your challenge is to print hello world to the terminal on a single command. I'm using
this because I, I really want you to use this. I think this is a great tool. So, uh, obviously
installing a terminal is great as well, but if you don't have that in a school or something,
this is really great. So, uh, so how would you do that? Echo. Hello world. So that's a Unix command,
right? Um, access. Let's see. Wait, what, what's this one? For the current working directory,
list all of the names, one for file. All right. So, but at a certain level, you start getting to
the point where you need to combine things together and, and that is when you start using
a pipeline. Okay. So, and I covered this in the booth. So let me see. So strictly speaking,
a Unix filter is any executable script or compiled program that takes as standard input
lines or any data, but usually lines and does something to those lines and then
produces output, right? And if you know about map filter reduce, it's, that's what it is. In fact,
the Unix command line is very functional. Maybe because, you know, it's not always a Unix filter.
Sometimes it might be a Unix map, right? It's going to take a line. It's going to modify that line
and do something with it on the output and send it on its way. That's a very functional approach.
So that's what a Unix filter is. And, and if it, if it, if it has an argument, a Unix filter often
will do something to the file or it will take something from its input and, and go. The simplest
one, of course, is cat. So like if you were to do like cat build, it just dumps out the build
command one line at a time. As you can see, right? So if I wanted to do that, I could cat build.
This is a bad idea because most of these, using cat at the beginning of a pipeline,
it's usually a bad idea because you can usually send a file to it. But you could do that. You could
pass that to, um, uh, was it LC? What is the line number one? I forget. I never use it. It's not LN.
It's, uh, what is it? What is the one that shows the line numbers? You guys remember? I don't use that
much line numbers on one external NL. I, I thought it was NL. Maybe I don't have it.
It is NL. Okay. So number line. Okay. So, so there we go. So NL is a good example of a command
that is a filter. So it, so if we just do cat build, it takes the file and doesn't do anything to it.
It just spits it out and we pipe that into the input of NL and NL does one transformation.
It puts the line number at the beginning of the line. That's it. Right? And you can continue
to go on to this. You can say, uh, I want to grep out all the lines that begin with the one,
for example. Oops. There are none apparently. Well, actually no, because it would be,
it would be, it would be space one. Right? Let me see. What would it be? It would be
one, two, three, four, one. I'm just being dumb here. Okay. So here's all the lines that, that have
a one in the second place. There we go. There's all the lines that begin with one.
And we can pipe that into more. And then we have only the line numbers that begin with one.
I mean, for dumb, some dumb reason. Now, why do you care? So this, this is an example of
pipelining or connecting together, uh, UNIX filter commands that take, that usually sit around,
like if you just use cat by itself or any standard filter, it'll wait around for you to type something
in. You can say, like, okay, some thing. And then you see, uh, another thing, right? Until you say
control D and then stop, right? So a UNIX filter takes as its input standard input. But if there's
nothing sent to its standard input, it will do something, it will either sit around and wait
for standard input, or it will take a file or the name of a file to do something with, right?
And you can send stuff to these programs. So we can do, like, I could do nl build, and that will
give me my whole script. Let's zoom in by the way. So I can do nl build, and we get everything, right?
Or, uh, if I wanted to send build as standard input, I could do it like that.
If I wanted to send, you know, just a string into it, I could send some, I don't think we can do,
I don't think we can do this, but let's try. I think, I think, I don't think it observes,
yeah, it only does it as one line. So there's just, so this idea of chaining together UNIX
filter commands is very powerful. So your next question is, well, what the hell does that have
to do with NeoVim, right? Or any of those kind of things. And for that, I'm going to refer you to
vi magic, uh, rwx.gg slash vi magic. And when you go here, you'll see what I mean. Now, I, I, I,
I always demonstrate, I've demonstrated this so many times that it's getting kind of old, right?
Well, let's say, uh, let's say, I don't know, let's say we're editing,
what was it, the repo we just made? Questions, there we go. So let's say we're in here and
I want to add another date, all right? So I've created a program, H now, I've created a very,
very, very simple UNIX filter with using shell, not even a bash shell. And, uh, yeah. And so here
we have, we're echoing it. So, and it says, all it does is echo the current thing. You're like,
well, why would I do that? Right? Because I could have just typed it in here. I can type echo pound
space, uh, now, which is another command. This is why we, this is the UNIX way, build up a bunch
of commands that operate together. Um, and, and now I can run this, this whole thing, right?
I can bang, bang, and then send that to bash and we get that. Well, let's say I want to do it all
the time, right? Now I just have to put it into a script and I type H now and I get it. If I type
now, I get the input of now and replaces the current line with the, with the now time stamp,
which is off because my VM's off at the time, but oh well. Uh, we strap bash script. Well,
yeah, I mean that they're similar, right? So, um, but the point is, is that you build up a collection
of things that don't just work in VI. They work everywhere, right? And you can combine them together.
So the now here is here, right? Now it is doing, uh, the time zone thing, uh, and, and, which is,
which is fine. I see that it's, it's doing the, the base, I got to change my base time zone, but
so you see what it's doing. It's also using POSIX shell with sort of bash. Um, but the point is,
uh, the dollar sign, yeah, it's just, it's just reading it all in there. So,
so let's give me another example of that. I mean, if you want, I can try.
Um, I don't know if this is the one. Okay, here we go. Load. Yes. Um, all right. So we could also
do this. We could say I want to count from one to 10, uh, for I in, you know, this is not a UNIX
filter, but I could put it in a UNIX filter, right? What if I wanted to make, I'm inside of
EI and let's say I wanted to make these things, let's say I want to number those, right? I can do
bang, bang, uh, NL and I can automatically number them. You see what I just did? So exclamation
point, uh, right curly bracket and then pass that and then pass that entire thing to NL,
which reads from the standard input and, and I can do that and it will put the things there.
I can also do, so all of these are UNIX filters. Every single one is a UNIX filter.
I can use BC, which is a calculator to do complicated math for me. I can say scale,
uh, equals two and I can say two thirds, um, and I can do bang, bang, BC,
uh, and we get 166, point 66, right? Uh, I can have a series of, of, you know, different things.
If I wanted to see the factorial of a whole bunch of numbers here, right? If I want to see which
ones have factorials, I can pass that entire thing to the factor command and now I get the
factorials of all of those lines immediately in my Vim without leaving it. Why? Because, and there's
no plugins involved at all. Nothing I did has any plugin in it at all. And this is what I mean by
UNIX filters and this is why you should care because not only does it inform and make you a
powerful VI user, but on any system, by the way, since 1976 or whatever, I can't remember when
Epic was, but, um, uh, but it also makes it so that you can string those and combine those together
in your scripts directory or your monolith if you want. Like I do with Z, you know, my ZPOMO.
ZPOMO, I have a, I have a, uh, uh, monolith that's got all of my commands in it that will run on any
operating system, including Windows, uh, that I can take it over there if I want to get unique
timestamps, right? I can do unique ISO now and I want to get an ISOsec timestamp and I can use that
and I, now I can use that on any system and I can use the same UNIX philosophy, uh, on PowerShell
if I want. Um, it doesn't matter because I can go here and go Z, uh, unique, um, ISOsec,
bang, bang, oops, sorry, bang, bang, bash. And because Z is a UNIX filter, as are all those
commands, I can replace it with the current UNIX filter. So this, that's, that's what I'm talking
about with that kind of thing. Uh, how are we on time? So we have about, um, we have another 10
minutes for questions. Let me go scroll down and see if we missed any good ones that were related
to this. Um, so we have stuff about Dota 3 coming out. That's interesting. I want to talk about
that maybe later. We'll drive on playing Dota. Let's talk about Dota 3. Um, we talked about the boost.
Uh, and, uh, we did VI survive. Thank you for the spelling mistake correction.
Uh, VI Vim, Neil Vim, and our text editors in Linux, please correct me if I'm wrong. Yes,
they are. That's what they are. Uh, oh, I know what Vim is, but none of the other things. They're,
um, yeah, well, they're all VI Vim. Yeah. GipRainz, GipRainz, if you have a lot of memories to spare.
Uh, what is the Vim version in widespread use? Eight. Eight is the most widespread of use,
but they barely upgraded from seven to eight in, uh, I actually had to change my VMRC and in
either this week or next week, uh, next Sunday, either this Sunday or next Sunday, we're going
to go through Vim configuration. And my Vim configuration, the standard thing to do when
your beginner is to steal somebody else's Vim config and modify it to your own liking,
because nobody's going to learn all of that in one sitting. There's a lot of Vim script in there,
which I've never really fully learned. Um, but I know enough to be dangerous when they're,
and that's really all you need. Um, and then, uh, but, but I did have to change my,
my VIM script to conditionally ask, do I have support for this? Because I had to downgrade it,
my VMRC to work with version seven instead of eight, because it was required by my environment.
And, you know, considering the fact that my VIM eight VMRC was too new for our enterprise login
jump systems, and I had to kindly ask that they maybe put VIM eight on there to which they finally
said, okay, you know, considering that just for a second, compare that to what the kind of cluster,
you know, that you would have if you had to deal with getting Neil Vim to work over there with
Lua, the system administrators that I work with, would literally laugh in your face if you asked
for Neil Vim support on the system. They would laugh in you. They would laugh at you like straight
up. They'd be like, what do you mean you need Neil Vim on our jump boxes? Um, no. So, you know,
I, that might not be the kind of company you want to work for, and maybe you want to work for a
company that has Neil Vim and all the things, and that's fine. But if you want to be successful in
any enterprise, including the Fortune 500, none of which is probably going to allow you to use
Neil Vim on their host systems, then, you know, you might want to reconsider that choice. Um,
I just installed my Linux, and for the life of me, I can't get Korean to work.
It shows up as whatever I installed KOL. I don't know. I don't have any ideas for the Korean thing.
I don't have any ideas at all for you. It's probably, it could be anything. It could be,
it could be Vim. It could be Tmux. It could be your terminal software. I mean, there's a number of
things it could be, but I don't, I don't know. I'm actually able to do Russian without a problem.
So, I don't, I don't know.
Okay, what about you? It's actually you.
Wait, where is it?
I don't know how to do Kraka. There it is.
That's not it though. That's got to have an accent on it. I don't know what to do. Anyway,
so I can tell you this. Windows preview terminal, plus Tmux, plus Vim,
works for international stuff. Yeah. And I don't have to do any internationalization at
all. It just works. That did not work, by the way, when I was doing Linux desktop.
Yeah. When I was using the Linux desktop, none of that worked. So,
we talked about Bonsai a little bit. I love the command challenge. Yes, we talked about that.
Problem with writing these show in liners is always escaping. Yo, hell yeah. That's why
I don't like set an awk. I'm glad you brought that up. I'm glad you brought that up because
that is why I hate them. The escaping is a disaster when it comes to these things.
It really is. And that's why I don't like it. I agree. I'm glad you said that. I'm glad you said
I'm glad. I'm going to say it again. I'm glad you said that because it's so annoying. Yeah,
you have to do the weird stuff. And, you know, if you're going to do that, just use bash,
which doesn't do the escaping as badly. So, yeah. Oh, I see what you did there,
our Ruru with the something. That's cool because it puts the literals in there. That's cool. All
right. The dollar sign. Yeah. And we have the dollar sign in Tim. How do you renumber the list?
If you add a new item in the middle of the list, how do you renumber the list?
You just renumber it. Yeah, actually, if you're going to do that, you should probably use markdown.
So, this is a short one I can answer real quick. So, you can do this, right? So,
so if you actually want to do line numbering, I actually don't suggest that you use NL
because you can't rely number, right? You'd have to online number, which I don't know if you can
do that. If you want to do that kind of thing, I would stick with a markdown solution. And I would
do this, right? Whoops. So, capital I, one dot, right? And that's markdown. And then you can do
this if you want to render it. I have a Pandoc renderer. It's called TXT. And that does the thing.
And if I put this one up here and put that down there, I select the whole thing, do TXT.
And it redos the line numbers because it re-renders the markdown. So, and if you want to see the
content of my TXT filter, that's all. That's all it is. Pandoc-t plain wrap none. The end.
That's it. This is why, my friends, this is why learning the Unix filter approach is so
powerful. Make sure you do exec there, by the way. It's so powerful. It's so powerful because you
don't have, if I had, can you imagine the kind of Lua plugin I would have to make to make Pandoc
integration even work in NeoVim? And then I have to make sure that the plugin is managed in the
right place and everything. You can put it in a pre-commit hook. Absolutely. This is because
you're, the really great thing about using the Unix philosophy is once you get it down and you
start using it everywhere, you start fixing problems you didn't even know you had. And so things
like get pre-commit start to work. And this over here, imagine if you locked away all of this and
all of this amazing filter-ness inside of a Lua plugin that only works from Vim.
Could you use it as a get pre-commit hook? No. You'd have to make some other filter. You'd
have to make an descriptive by that time. You're like, well, why didn't I just do that in the first
place? And by the way, these filters can be written in Lua. Okay, so if you were a Lua fan
and you know you're going to have Lua on your system, write your Unix filters in Lua.
Write them in Lua. Who cares? I think it's an overkill to do that, but you certainly
can't. It doesn't matter. I'm doing a lot of my filters and go because I want to put them all
in one executable that I can put on any target system. This one is going to be ported eventually.
All my little Unix filters are all going to get ported over into my monolith because I want to
take it on any system anytime and I don't want to have to deal with it and all the individual
files. But it's nice having those individual files to kind of flesh out what is your building
and then you can put them all in there and you're good to go. By the way, this goes for anything,
right? So you could say something, if you want to do some like dynamic HTML, right? You could say
a title here, right? And so we just did a conversation about what those are. So watch,
I'm going to send this entire part down here. Let's say you want to do live HTML development,
right? So you go bang, G, capital G, send that entire thing to, I have it set to text right now,
but if I wanted to, I could do Pandoc. I could just send it to Pandoc and Pandoc by default
renders it as HTML. So now I get HTML. Do you want me to do that again? Why does that work?
Because Pandoc is a UNIX filter just like everything else because it's designed for UNIX.
So I can send, in fact, I can send this entire document to HTML. I can say bang,
capital G and send it to Pandoc and it will convert the whole thing out. Let me tell you a case where
that is really useful. So let's say you're doing, I mean, tables. Nobody wants to do tables in HTML.
They suck, right? So, you know, actually, this is such a thing, I almost want to keep
like an extra markdown version of it. I mean, you can write, I did this, there's a video about
making a static site generator in 10 lines of bash with Pandoc. There's a video out there about that.
Let me send that to you. Viz static site generator, I think, and that'll help you find it.
Anyway, and it will show you this kind of thing because, I mean, nobody wants to do a table,
right? So we could say day, we could say name or something, right? And you would say Wednesday,
Rob, and then we need, I don't remember my table stuff very much, but, you know, I mean,
it's a pain, right? So Tuesday, Taurus will say it's days to do dishes or something. So we have
this table. Now I want to make it into an HTML table. Pandoc. Boom. There's my HTML table completely
rendered. Now try that in VS Code, by the way. Can't do it. You cannot do UNIX filters in VS
Code. This is the single biggest reason I don't use VS Code. VS Code has a nice terminal in it.
It has those nice previewers and stuff, but you cannot send the content, the number of lines
from a file to the command line and replace those lines with the output of the command,
which means that VS Code is fundamentally, you know, against the UNIX idea of doing this kind
of thing. And who wants to do that? I mean, I just want to do this and have it just work.
You know, but some people want that, and I guess if you want more live previews, whatever. So, you
know, and that might be actually an argument to use NeoVim because NeoVim is way better at VS Code
for using UNIX filters because it's VI. It's VIM at the end of the day, even though it makes a lot of
dubious decisions about how to extend VIM. That's going to be it for today. They will allow
they will allow Emacs and yes. Yeah, eventually they'll put Emacs out there probably. I want to
see it like to be English. Don't know about that one. Play the Dota theme on an electric
file and you might like it. I ought to try that. I need a Russian keyboard. I don't have a Russian
keyboard. There's a really great Russian American keyboard, which is way better. It actually takes
combinations like Y and A and that turns into Yaw and stuff. Let's see. Missing the font. That
might be it. Playing a pre-kick commit hook. Yes. Minerva is showing us what a filter is.
Let's see. Quick question about... Wait, where is it? Let's see. Quick question by VI commands.
When I go to the end of a file, the cursor never goes beyond the last letter. So, when I push
to input text, I have to type between the last letter and delete it later. Any solution to this?
I just... Oh, let me see if I understand your question. This should be a fast question,
so we'll end with this one, but this is a good question. Eight month subscriber. Thank you for
that. I think for that hypno slimy toad, what a great name that is. All right. So, is it A for
append or O to appended line? When I get to the end of a line, the cursor never goes beyond the
last letter, so when I push to input I... Yeah, you go here and you push I and it does before.
Yeah, you want A here. I actually use capital A. My favorite is capital A because I can be
anywhere in the line and do capital A and it will start putting stuff at the end.
I don't use A very much because I'm never at the end of the file ever and capital A would work
there too. If you're at the end, capital A would also work. I am extremely lazy VI user.
So, for example, all of the extra navigation things, no, I do this for everything,
right? Like if I want to delete to beyond, I'll do D slash beyond and it'll delete everything.
I search for everything. The most common thing that I use in VI is slash for searching for
things and dot for repeating by far. It's by far the most frequent. That and deleting paragraphs
with DAP or yanking paragraphs with YAP. Those would probably be my most undo, of course.
So, yeah, I use capital A for everything. I use capital A for all that stuff.
If you want to... I thought you were stuck here and want to add something to line after that.
People are like, what do I do? I can't get to that after the line and that's O, right? So, that's
O. Another one I never use is big O because big O adds a line right above, which is kind of useful,
but I don't ever use that. So, hopefully that'll give you some things to look at.
It's more efficient. Well, lazy and efficient are kind of synonyms in the Linux world. We use them
affectionately. We say lazy kind of affectionately in this world. Lazy programmers are the best
programmers. It's like a long time thing. What do I think about GPG? I had to use it today with
my new job. It's not for user-friendly. Oh, my God, no. In fact, let's do GPG, Frank. Let's do that
question again. How do I make line comments so quickly? These line comments? They're just on...
I mean, that's when I keep getting sucked into answering more questions. I can't answer GPG
right now, my friend. It's just too much to answer. We're going to do a whole day on GPG
in the booth, so stay tuned on that one. What does you mean line comments? Do you mean like...
But with a GUI so you don't have to memorize commands, that would defeat the purpose of them.
That would not work. That wouldn't be them if you did that. There is a certain...
You know, if we're going to do that, just use the mouse, period, then use something else.
We're still going. We're almost done. No, leave it out. I'm about done. I'm getting yelled at, guys.
I got... She had tone in that comment, which means she's annoyed. So I got to go.
So, Ping, ask me that question tomorrow. I got to go.
How does it add them? Well, Vim automatically adds a comment when it wraps.
Oh, how do I do that? It's just a CMT. It's another filter.
All right, let's comment this, right?
Whatever, CMT. That's a comment. It's another filter. This is it. That's it. It reads from the line.
We did this, by the way, and it just echoes with a comment line. And if you want to use a different
thing in the front, it does that. So that's how you do that. Okay, and you can undo it.
I actually cheat with this all the time, and I use it to add extra spaces sometimes
when I want to do cheating. I just do indentation. People tell me to use visual mode. I'm like,
screw that, because I have exact control over it. I don't have to do any selection.
I don't know why people use visual mode in VI at all. It makes me so tired watching them.
I'm like, really? Because I could have just done that.
And, you know, I could do this. What's the go comment I could do?
You know, whoopsie. CMT, you know, I mean, you want to put tabs there. By the way,
I also do that because I'm used to doing these filter commands. Obviously, I could do that
using the long winded, you know, S space, space, space, g error. No, that's like way too annoying.
CMT, done. Right? I also have a PPP and a YYY for making my own buffers, so I don't have to use
the buffers in Vim because I hate them. So call me lazy, but that's what I do.
And this is a little like a road server. Yeah, I hate visual mode. I've always hated it. It's
not in VI even, by the way. It's not supported in VI at all. So you need to learn those other
methods as well, or you're dead. So, yeah. Anyway, that's it for this video. Thank you so much for
tuning in and saying hi to us and putting up with my little rants. Hopefully, I didn't make anybody
too angry. You know, as usual, I'm open to new information and change my opinions all the time
based on what other people bring to the table. And I think that people here could probably
tell you that that's true. I do want to go catch the sunset tonight, so I'm going to be
woofing down some food, and I may make it to the sunset in time. We might not make it tonight,
but well, I'm going to go out there anyway, and we'll be doing an IRL stream relatively soon
after this. So, within the next half an hour or so, if you want to come back for that. I am
going to go ahead, though, and cancel to stop the video now, and then...
